{
  "summary": {
    "timestamp": "2025-08-07T21:41:59.975Z",
    "projects": {
      "old": {
        "id": "ycxqxdhaxehspypqbnpi",
        "url": "ycxqxdhaxehspypqbnpi.supabase.co"
      },
      "new": {
        "id": "aeijlzokobuqcyznljvn",
        "url": "aeijlzokobuqcyznljvn.supabase.co"
      }
    },
    "totalTables": {
      "old": 42,
      "new": 45
    },
    "totalFunctions": {
      "old": 19,
      "new": 29,
      "missing": 4
    },
    "totalTriggers": {
      "old": 4,
      "new": 14,
      "missing": 2
    },
    "totalPolicies": {
      "old": 44,
      "new": 41,
      "missing": 44
    }
  },
  "details": {
    "timestamp": "2025-08-07T21:41:59.975Z",
    "projects": {
      "old": {
        "id": "ycxqxdhaxehspypqbnpi",
        "url": "ycxqxdhaxehspypqbnpi.supabase.co"
      },
      "new": {
        "id": "aeijlzokobuqcyznljvn",
        "url": "aeijlzokobuqcyznljvn.supabase.co"
      }
    },
    "tables": {
      "old": {
        "auth.audit_log_entries": {
          "schema": "auth",
          "name": "audit_log_entries",
          "owner": "supabase_auth_admin",
          "hasIndexes": true,
          "hasRules": false,
          "hasTriggers": false,
          "rowCount": 222,
          "columns": [
            {
              "column_name": "instance_id",
              "data_type": "uuid",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "payload",
              "data_type": "json",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "created_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "ip_address",
              "data_type": "character varying",
              "is_nullable": "NO",
              "column_default": "''::character varying",
              "character_maximum_length": 64
            }
          ]
        },
        "auth.flow_state": {
          "schema": "auth",
          "name": "flow_state",
          "owner": "supabase_auth_admin",
          "hasIndexes": true,
          "hasRules": false,
          "hasTriggers": true,
          "rowCount": 0,
          "columns": [
            {
              "column_name": "id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "user_id",
              "data_type": "uuid",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "auth_code",
              "data_type": "text",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "code_challenge_method",
              "data_type": "USER-DEFINED",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "code_challenge",
              "data_type": "text",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "provider_type",
              "data_type": "text",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "provider_access_token",
              "data_type": "text",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "provider_refresh_token",
              "data_type": "text",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "created_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "updated_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "authentication_method",
              "data_type": "text",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "auth_code_issued_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            }
          ]
        },
        "auth.identities": {
          "schema": "auth",
          "name": "identities",
          "owner": "supabase_auth_admin",
          "hasIndexes": true,
          "hasRules": false,
          "hasTriggers": true,
          "rowCount": 3,
          "columns": [
            {
              "column_name": "provider_id",
              "data_type": "text",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "user_id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "identity_data",
              "data_type": "jsonb",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "provider",
              "data_type": "text",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "last_sign_in_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "created_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "updated_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "email",
              "data_type": "text",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": "gen_random_uuid()",
              "character_maximum_length": null
            }
          ]
        },
        "auth.instances": {
          "schema": "auth",
          "name": "instances",
          "owner": "supabase_auth_admin",
          "hasIndexes": true,
          "hasRules": false,
          "hasTriggers": false,
          "rowCount": 1,
          "columns": [
            {
              "column_name": "id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "uuid",
              "data_type": "uuid",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "raw_base_config",
              "data_type": "text",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "created_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "updated_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            }
          ]
        },
        "auth.mfa_amr_claims": {
          "schema": "auth",
          "name": "mfa_amr_claims",
          "owner": "supabase_auth_admin",
          "hasIndexes": true,
          "hasRules": false,
          "hasTriggers": true,
          "rowCount": 0,
          "columns": [
            {
              "column_name": "session_id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "created_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "updated_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "authentication_method",
              "data_type": "text",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            }
          ]
        },
        "auth.mfa_challenges": {
          "schema": "auth",
          "name": "mfa_challenges",
          "owner": "supabase_auth_admin",
          "hasIndexes": true,
          "hasRules": false,
          "hasTriggers": true,
          "rowCount": 0,
          "columns": [
            {
              "column_name": "id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "factor_id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "created_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "verified_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "ip_address",
              "data_type": "inet",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "otp_code",
              "data_type": "text",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "web_authn_session_data",
              "data_type": "jsonb",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            }
          ]
        },
        "auth.mfa_factors": {
          "schema": "auth",
          "name": "mfa_factors",
          "owner": "supabase_auth_admin",
          "hasIndexes": true,
          "hasRules": false,
          "hasTriggers": true,
          "rowCount": 0,
          "columns": [
            {
              "column_name": "id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "user_id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "friendly_name",
              "data_type": "text",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "factor_type",
              "data_type": "USER-DEFINED",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "status",
              "data_type": "USER-DEFINED",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "created_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "updated_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "secret",
              "data_type": "text",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "phone",
              "data_type": "text",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "last_challenged_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "web_authn_credential",
              "data_type": "jsonb",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "web_authn_aaguid",
              "data_type": "uuid",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            }
          ]
        },
        "auth.one_time_tokens": {
          "schema": "auth",
          "name": "one_time_tokens",
          "owner": "supabase_auth_admin",
          "hasIndexes": true,
          "hasRules": false,
          "hasTriggers": true,
          "rowCount": 0,
          "columns": [
            {
              "column_name": "id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "user_id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "token_type",
              "data_type": "USER-DEFINED",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "token_hash",
              "data_type": "text",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "relates_to",
              "data_type": "text",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "created_at",
              "data_type": "timestamp without time zone",
              "is_nullable": "NO",
              "column_default": "now()",
              "character_maximum_length": null
            },
            {
              "column_name": "updated_at",
              "data_type": "timestamp without time zone",
              "is_nullable": "NO",
              "column_default": "now()",
              "character_maximum_length": null
            }
          ]
        },
        "auth.refresh_tokens": {
          "schema": "auth",
          "name": "refresh_tokens",
          "owner": "supabase_auth_admin",
          "hasIndexes": true,
          "hasRules": false,
          "hasTriggers": true,
          "rowCount": 0,
          "columns": [
            {
              "column_name": "instance_id",
              "data_type": "uuid",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "id",
              "data_type": "bigint",
              "is_nullable": "NO",
              "column_default": "nextval('auth.refresh_tokens_id_seq'::regclass)",
              "character_maximum_length": null
            },
            {
              "column_name": "token",
              "data_type": "character varying",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": 255
            },
            {
              "column_name": "user_id",
              "data_type": "character varying",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": 255
            },
            {
              "column_name": "revoked",
              "data_type": "boolean",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "created_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "updated_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "parent",
              "data_type": "character varying",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": 255
            },
            {
              "column_name": "session_id",
              "data_type": "uuid",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            }
          ]
        },
        "auth.saml_providers": {
          "schema": "auth",
          "name": "saml_providers",
          "owner": "supabase_auth_admin",
          "hasIndexes": true,
          "hasRules": false,
          "hasTriggers": true,
          "rowCount": 0,
          "columns": [
            {
              "column_name": "id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "sso_provider_id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "entity_id",
              "data_type": "text",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "metadata_xml",
              "data_type": "text",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "metadata_url",
              "data_type": "text",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "attribute_mapping",
              "data_type": "jsonb",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "created_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "updated_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "name_id_format",
              "data_type": "text",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            }
          ]
        },
        "auth.saml_relay_states": {
          "schema": "auth",
          "name": "saml_relay_states",
          "owner": "supabase_auth_admin",
          "hasIndexes": true,
          "hasRules": false,
          "hasTriggers": true,
          "rowCount": 0,
          "columns": [
            {
              "column_name": "id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "sso_provider_id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "request_id",
              "data_type": "text",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "for_email",
              "data_type": "text",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "redirect_to",
              "data_type": "text",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "created_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "updated_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "flow_state_id",
              "data_type": "uuid",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            }
          ]
        },
        "auth.schema_migrations": {
          "schema": "auth",
          "name": "schema_migrations",
          "owner": "supabase_auth_admin",
          "hasIndexes": true,
          "hasRules": false,
          "hasTriggers": false,
          "rowCount": 61,
          "columns": [
            {
              "column_name": "version",
              "data_type": "character varying",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": 255
            }
          ]
        },
        "auth.sessions": {
          "schema": "auth",
          "name": "sessions",
          "owner": "supabase_auth_admin",
          "hasIndexes": true,
          "hasRules": false,
          "hasTriggers": true,
          "rowCount": 0,
          "columns": [
            {
              "column_name": "id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "user_id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "created_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "updated_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "factor_id",
              "data_type": "uuid",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "aal",
              "data_type": "USER-DEFINED",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "not_after",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "refreshed_at",
              "data_type": "timestamp without time zone",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "user_agent",
              "data_type": "text",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "ip",
              "data_type": "inet",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "tag",
              "data_type": "text",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            }
          ]
        },
        "auth.sso_domains": {
          "schema": "auth",
          "name": "sso_domains",
          "owner": "supabase_auth_admin",
          "hasIndexes": true,
          "hasRules": false,
          "hasTriggers": true,
          "rowCount": 0,
          "columns": [
            {
              "column_name": "id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "sso_provider_id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "domain",
              "data_type": "text",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "created_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "updated_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            }
          ]
        },
        "auth.sso_providers": {
          "schema": "auth",
          "name": "sso_providers",
          "owner": "supabase_auth_admin",
          "hasIndexes": true,
          "hasRules": false,
          "hasTriggers": true,
          "rowCount": 0,
          "columns": [
            {
              "column_name": "id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "resource_id",
              "data_type": "text",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "created_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "updated_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            }
          ]
        },
        "auth.users": {
          "schema": "auth",
          "name": "users",
          "owner": "supabase_auth_admin",
          "hasIndexes": true,
          "hasRules": false,
          "hasTriggers": true,
          "rowCount": 3,
          "columns": [
            {
              "column_name": "instance_id",
              "data_type": "uuid",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "aud",
              "data_type": "character varying",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": 255
            },
            {
              "column_name": "role",
              "data_type": "character varying",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": 255
            },
            {
              "column_name": "email",
              "data_type": "character varying",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": 255
            },
            {
              "column_name": "encrypted_password",
              "data_type": "character varying",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": 255
            },
            {
              "column_name": "email_confirmed_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "invited_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "confirmation_token",
              "data_type": "character varying",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": 255
            },
            {
              "column_name": "confirmation_sent_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "recovery_token",
              "data_type": "character varying",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": 255
            },
            {
              "column_name": "recovery_sent_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "email_change_token_new",
              "data_type": "character varying",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": 255
            },
            {
              "column_name": "email_change",
              "data_type": "character varying",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": 255
            },
            {
              "column_name": "email_change_sent_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "last_sign_in_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "raw_app_meta_data",
              "data_type": "jsonb",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "raw_user_meta_data",
              "data_type": "jsonb",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "is_super_admin",
              "data_type": "boolean",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "created_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "updated_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "phone",
              "data_type": "text",
              "is_nullable": "YES",
              "column_default": "NULL::character varying",
              "character_maximum_length": null
            },
            {
              "column_name": "phone_confirmed_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "phone_change",
              "data_type": "text",
              "is_nullable": "YES",
              "column_default": "''::character varying",
              "character_maximum_length": null
            },
            {
              "column_name": "phone_change_token",
              "data_type": "character varying",
              "is_nullable": "YES",
              "column_default": "''::character varying",
              "character_maximum_length": 255
            },
            {
              "column_name": "phone_change_sent_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "confirmed_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "email_change_token_current",
              "data_type": "character varying",
              "is_nullable": "YES",
              "column_default": "''::character varying",
              "character_maximum_length": 255
            },
            {
              "column_name": "email_change_confirm_status",
              "data_type": "smallint",
              "is_nullable": "YES",
              "column_default": "0",
              "character_maximum_length": null
            },
            {
              "column_name": "banned_until",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "reauthentication_token",
              "data_type": "character varying",
              "is_nullable": "YES",
              "column_default": "''::character varying",
              "character_maximum_length": 255
            },
            {
              "column_name": "reauthentication_sent_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "is_sso_user",
              "data_type": "boolean",
              "is_nullable": "NO",
              "column_default": "false",
              "character_maximum_length": null
            },
            {
              "column_name": "deleted_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "is_anonymous",
              "data_type": "boolean",
              "is_nullable": "NO",
              "column_default": "false",
              "character_maximum_length": null
            }
          ]
        },
        "public.card_categories": {
          "schema": "public",
          "name": "card_categories",
          "owner": "postgres",
          "hasIndexes": true,
          "hasRules": false,
          "hasTriggers": true,
          "rowCount": 0,
          "columns": [
            {
              "column_name": "id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": "uuid_generate_v4()",
              "character_maximum_length": null
            },
            {
              "column_name": "card_id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "category_id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "created_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": "now()",
              "character_maximum_length": null
            }
          ]
        },
        "public.card_interactions": {
          "schema": "public",
          "name": "card_interactions",
          "owner": "postgres",
          "hasIndexes": true,
          "hasRules": false,
          "hasTriggers": true,
          "rowCount": 0,
          "columns": [
            {
              "column_name": "id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": "gen_random_uuid()",
              "character_maximum_length": null
            },
            {
              "column_name": "session_id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "card_id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "direction",
              "data_type": "character varying",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": 10
            },
            {
              "column_name": "reaction_time",
              "data_type": "integer",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "feedback",
              "data_type": "character varying",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": 20
            },
            {
              "column_name": "created_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": "now()",
              "character_maximum_length": null
            }
          ]
        },
        "public.cards": {
          "schema": "public",
          "name": "cards",
          "owner": "postgres",
          "hasIndexes": true,
          "hasRules": false,
          "hasTriggers": true,
          "rowCount": 0,
          "columns": [
            {
              "column_name": "id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": "gen_random_uuid()",
              "character_maximum_length": null
            },
            {
              "column_name": "created_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": "now()",
              "character_maximum_length": null
            },
            {
              "column_name": "title",
              "data_type": "text",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "english_title",
              "data_type": "text",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "image_url",
              "data_type": "text",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "category",
              "data_type": "text",
              "is_nullable": "NO",
              "column_default": "'general'::text",
              "character_maximum_length": null
            },
            {
              "column_name": "difficulty_level",
              "data_type": "integer",
              "is_nullable": "YES",
              "column_default": "1",
              "character_maximum_length": null
            },
            {
              "column_name": "set_id",
              "data_type": "uuid",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "media_type",
              "data_type": "character varying",
              "is_nullable": "YES",
              "column_default": "'image'::character varying",
              "character_maximum_length": 20
            },
            {
              "column_name": "media_url",
              "data_type": "text",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "title_formatted",
              "data_type": "text",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "english_title_formatted",
              "data_type": "text",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "category_id",
              "data_type": "uuid",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            }
          ]
        },
        "public.categories": {
          "schema": "public",
          "name": "categories",
          "owner": "postgres",
          "hasIndexes": true,
          "hasRules": false,
          "hasTriggers": true,
          "rowCount": 0,
          "columns": [
            {
              "column_name": "id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": "gen_random_uuid()",
              "character_maximum_length": null
            },
            {
              "column_name": "name",
              "data_type": "character varying",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": 100
            },
            {
              "column_name": "description",
              "data_type": "text",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "color",
              "data_type": "character varying",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": 7
            },
            {
              "column_name": "created_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": "now()",
              "character_maximum_length": null
            },
            {
              "column_name": "updated_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": "now()",
              "character_maximum_length": null
            }
          ]
        },
        "public.classroom_members": {
          "schema": "public",
          "name": "classroom_members",
          "owner": "postgres",
          "hasIndexes": true,
          "hasRules": false,
          "hasTriggers": true,
          "rowCount": 0,
          "columns": [
            {
              "column_name": "id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": "gen_random_uuid()",
              "character_maximum_length": null
            },
            {
              "column_name": "classroom_id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "student_id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "joined_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": "now()",
              "character_maximum_length": null
            },
            {
              "column_name": "is_active",
              "data_type": "boolean",
              "is_nullable": "YES",
              "column_default": "true",
              "character_maximum_length": null
            }
          ]
        },
        "public.classroom_sets": {
          "schema": "public",
          "name": "classroom_sets",
          "owner": "postgres",
          "hasIndexes": true,
          "hasRules": false,
          "hasTriggers": true,
          "rowCount": 0,
          "columns": [
            {
              "column_name": "id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": "gen_random_uuid()",
              "character_maximum_length": null
            },
            {
              "column_name": "classroom_id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "set_id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "assigned_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": "now()",
              "character_maximum_length": null
            },
            {
              "column_name": "assigned_by",
              "data_type": "uuid",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "created_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": "now()",
              "character_maximum_length": null
            }
          ]
        },
        "public.classrooms": {
          "schema": "public",
          "name": "classrooms",
          "owner": "postgres",
          "hasIndexes": true,
          "hasRules": false,
          "hasTriggers": true,
          "rowCount": 0,
          "columns": [
            {
              "column_name": "id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": "gen_random_uuid()",
              "character_maximum_length": null
            },
            {
              "column_name": "name",
              "data_type": "text",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "description",
              "data_type": "text",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "teacher_id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "invite_code",
              "data_type": "text",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "is_active",
              "data_type": "boolean",
              "is_nullable": "YES",
              "column_default": "true",
              "character_maximum_length": null
            },
            {
              "column_name": "created_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": "now()",
              "character_maximum_length": null
            },
            {
              "column_name": "updated_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": "now()",
              "character_maximum_length": null
            },
            {
              "column_name": "school_id",
              "data_type": "uuid",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            }
          ]
        },
        "public.favicons": {
          "schema": "public",
          "name": "favicons",
          "owner": "postgres",
          "hasIndexes": true,
          "hasRules": false,
          "hasTriggers": false,
          "rowCount": 1,
          "columns": [
            {
              "column_name": "id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": "gen_random_uuid()",
              "character_maximum_length": null
            },
            {
              "column_name": "name",
              "data_type": "character varying",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": 100
            },
            {
              "column_name": "data_url",
              "data_type": "text",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "mime_type",
              "data_type": "character varying",
              "is_nullable": "NO",
              "column_default": "'image/x-icon'::character varying",
              "character_maximum_length": 50
            },
            {
              "column_name": "created_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": "now()",
              "character_maximum_length": null
            },
            {
              "column_name": "is_active",
              "data_type": "boolean",
              "is_nullable": "YES",
              "column_default": "false",
              "character_maximum_length": null
            }
          ]
        },
        "public.flashcard_set_cards": {
          "schema": "public",
          "name": "flashcard_set_cards",
          "owner": "postgres",
          "hasIndexes": true,
          "hasRules": false,
          "hasTriggers": true,
          "rowCount": 0,
          "columns": [
            {
              "column_name": "id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": "gen_random_uuid()",
              "character_maximum_length": null
            },
            {
              "column_name": "set_id",
              "data_type": "uuid",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "card_id",
              "data_type": "uuid",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "position",
              "data_type": "integer",
              "is_nullable": "YES",
              "column_default": "0",
              "character_maximum_length": null
            },
            {
              "column_name": "created_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": "now()",
              "character_maximum_length": null
            }
          ]
        },
        "public.flashcard_set_categories": {
          "schema": "public",
          "name": "flashcard_set_categories",
          "owner": "postgres",
          "hasIndexes": true,
          "hasRules": false,
          "hasTriggers": true,
          "rowCount": 0,
          "columns": [
            {
              "column_name": "id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": "gen_random_uuid()",
              "character_maximum_length": null
            },
            {
              "column_name": "set_id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "category_id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "created_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": "now()",
              "character_maximum_length": null
            }
          ]
        },
        "public.flashcard_sets": {
          "schema": "public",
          "name": "flashcard_sets",
          "owner": "postgres",
          "hasIndexes": true,
          "hasRules": false,
          "hasTriggers": true,
          "rowCount": 0,
          "columns": [
            {
              "column_name": "id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": "gen_random_uuid()",
              "character_maximum_length": null
            },
            {
              "column_name": "title",
              "data_type": "text",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "description",
              "data_type": "text",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "creator_id",
              "data_type": "uuid",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "is_public",
              "data_type": "boolean",
              "is_nullable": "YES",
              "column_default": "false",
              "character_maximum_length": null
            },
            {
              "column_name": "created_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": "now()",
              "character_maximum_length": null
            },
            {
              "column_name": "updated_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": "now()",
              "character_maximum_length": null
            },
            {
              "column_name": "language_a",
              "data_type": "character varying",
              "is_nullable": "YES",
              "column_default": "'Magyar'::character varying",
              "character_maximum_length": 50
            },
            {
              "column_name": "language_b",
              "data_type": "character varying",
              "is_nullable": "YES",
              "column_default": "'English'::character varying",
              "character_maximum_length": 50
            },
            {
              "column_name": "language_a_code",
              "data_type": "character varying",
              "is_nullable": "YES",
              "column_default": "'hu'::character varying",
              "character_maximum_length": 5
            },
            {
              "column_name": "language_b_code",
              "data_type": "character varying",
              "is_nullable": "YES",
              "column_default": "'en'::character varying",
              "character_maximum_length": 5
            }
          ]
        },
        "public.schools": {
          "schema": "public",
          "name": "schools",
          "owner": "postgres",
          "hasIndexes": true,
          "hasRules": false,
          "hasTriggers": true,
          "rowCount": 1,
          "columns": [
            {
              "column_name": "id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": "gen_random_uuid()",
              "character_maximum_length": null
            },
            {
              "column_name": "name",
              "data_type": "text",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "description",
              "data_type": "text",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "contact_email",
              "data_type": "text",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "is_active",
              "data_type": "boolean",
              "is_nullable": "YES",
              "column_default": "true",
              "character_maximum_length": null
            },
            {
              "column_name": "created_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": "now()",
              "character_maximum_length": null
            },
            {
              "column_name": "updated_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": "now()",
              "character_maximum_length": null
            },
            {
              "column_name": "address",
              "data_type": "text",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "phone",
              "data_type": "text",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            }
          ]
        },
        "public.study_logs": {
          "schema": "public",
          "name": "study_logs",
          "owner": "postgres",
          "hasIndexes": true,
          "hasRules": false,
          "hasTriggers": true,
          "rowCount": 0,
          "columns": [
            {
              "column_name": "id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": "gen_random_uuid()",
              "character_maximum_length": null
            },
            {
              "column_name": "user_id",
              "data_type": "uuid",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "card_id",
              "data_type": "uuid",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "set_id",
              "data_type": "uuid",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "feedback_type",
              "data_type": "text",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "study_time",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": "now()",
              "character_maximum_length": null
            },
            {
              "column_name": "session_duration",
              "data_type": "integer",
              "is_nullable": "YES",
              "column_default": "0",
              "character_maximum_length": null
            },
            {
              "column_name": "device_type",
              "data_type": "text",
              "is_nullable": "YES",
              "column_default": "'web'::text",
              "character_maximum_length": null
            },
            {
              "column_name": "created_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": "now()",
              "character_maximum_length": null
            }
          ]
        },
        "public.study_sessions": {
          "schema": "public",
          "name": "study_sessions",
          "owner": "postgres",
          "hasIndexes": true,
          "hasRules": false,
          "hasTriggers": true,
          "rowCount": 0,
          "columns": [
            {
              "column_name": "id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": "gen_random_uuid()",
              "character_maximum_length": null
            },
            {
              "column_name": "created_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": "now()",
              "character_maximum_length": null
            },
            {
              "column_name": "updated_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": "now()",
              "character_maximum_length": null
            },
            {
              "column_name": "user_id",
              "data_type": "uuid",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "session_data",
              "data_type": "jsonb",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "total_time",
              "data_type": "integer",
              "is_nullable": "NO",
              "column_default": "0",
              "character_maximum_length": null
            },
            {
              "column_name": "cards_studied",
              "data_type": "integer",
              "is_nullable": "NO",
              "column_default": "0",
              "character_maximum_length": null
            },
            {
              "column_name": "correct_answers",
              "data_type": "integer",
              "is_nullable": "NO",
              "column_default": "0",
              "character_maximum_length": null
            },
            {
              "column_name": "uncertain_answers",
              "data_type": "integer",
              "is_nullable": "NO",
              "column_default": "0",
              "character_maximum_length": null
            },
            {
              "column_name": "need_to_learn",
              "data_type": "integer",
              "is_nullable": "NO",
              "column_default": "0",
              "character_maximum_length": null
            },
            {
              "column_name": "set_id",
              "data_type": "uuid",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "direction",
              "data_type": "character varying",
              "is_nullable": "YES",
              "column_default": "'AtoB'::character varying",
              "character_maximum_length": 10
            },
            {
              "column_name": "started_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": "now()",
              "character_maximum_length": null
            },
            {
              "column_name": "ended_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "status",
              "data_type": "character varying",
              "is_nullable": "YES",
              "column_default": "'active'::character varying",
              "character_maximum_length": 20
            }
          ]
        },
        "public.user_card_progress": {
          "schema": "public",
          "name": "user_card_progress",
          "owner": "postgres",
          "hasIndexes": true,
          "hasRules": false,
          "hasTriggers": true,
          "rowCount": 0,
          "columns": [
            {
              "column_name": "id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": "gen_random_uuid()",
              "character_maximum_length": null
            },
            {
              "column_name": "user_id",
              "data_type": "uuid",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "card_id",
              "data_type": "uuid",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "set_id",
              "data_type": "uuid",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "mastery_level",
              "data_type": "integer",
              "is_nullable": "YES",
              "column_default": "0",
              "character_maximum_length": null
            },
            {
              "column_name": "last_reviewed",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": "now()",
              "character_maximum_length": null
            },
            {
              "column_name": "next_review",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": "now()",
              "character_maximum_length": null
            },
            {
              "column_name": "review_count",
              "data_type": "integer",
              "is_nullable": "YES",
              "column_default": "0",
              "character_maximum_length": null
            },
            {
              "column_name": "correct_count",
              "data_type": "integer",
              "is_nullable": "YES",
              "column_default": "0",
              "character_maximum_length": null
            },
            {
              "column_name": "created_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": "now()",
              "character_maximum_length": null
            },
            {
              "column_name": "updated_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": "now()",
              "character_maximum_length": null
            },
            {
              "column_name": "direction",
              "data_type": "character varying",
              "is_nullable": "YES",
              "column_default": "'AtoB'::character varying",
              "character_maximum_length": 10
            },
            {
              "column_name": "last_session_id",
              "data_type": "uuid",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            }
          ]
        },
        "public.user_profiles": {
          "schema": "public",
          "name": "user_profiles",
          "owner": "postgres",
          "hasIndexes": true,
          "hasRules": false,
          "hasTriggers": true,
          "rowCount": 3,
          "columns": [
            {
              "column_name": "id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "first_name",
              "data_type": "text",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "last_name",
              "data_type": "text",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "user_role",
              "data_type": "text",
              "is_nullable": "NO",
              "column_default": "'student'::text",
              "character_maximum_length": null
            },
            {
              "column_name": "created_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": "now()",
              "character_maximum_length": null
            },
            {
              "column_name": "updated_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": "now()",
              "character_maximum_length": null
            },
            {
              "column_name": "school_id",
              "data_type": "uuid",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "phone",
              "data_type": "text",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "note",
              "data_type": "text",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "email",
              "data_type": "text",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "stored_password",
              "data_type": "text",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            }
          ]
        },
        "public.user_set_progress": {
          "schema": "public",
          "name": "user_set_progress",
          "owner": "postgres",
          "hasIndexes": true,
          "hasRules": false,
          "hasTriggers": true,
          "rowCount": 0,
          "columns": [
            {
              "column_name": "id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": "gen_random_uuid()",
              "character_maximum_length": null
            },
            {
              "column_name": "user_id",
              "data_type": "uuid",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "set_id",
              "data_type": "uuid",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "last_studied",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": "now()",
              "character_maximum_length": null
            },
            {
              "column_name": "created_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": "now()",
              "character_maximum_length": null
            },
            {
              "column_name": "updated_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": "now()",
              "character_maximum_length": null
            },
            {
              "column_name": "total_time_spent",
              "data_type": "integer",
              "is_nullable": "YES",
              "column_default": "0",
              "character_maximum_length": null
            }
          ]
        },
        "public.waitlist": {
          "schema": "public",
          "name": "waitlist",
          "owner": "postgres",
          "hasIndexes": true,
          "hasRules": false,
          "hasTriggers": false,
          "rowCount": 1,
          "columns": [
            {
              "column_name": "id",
              "data_type": "integer",
              "is_nullable": "NO",
              "column_default": "nextval('waitlist_id_seq'::regclass)",
              "character_maximum_length": null
            },
            {
              "column_name": "email",
              "data_type": "character varying",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": 255
            },
            {
              "column_name": "created_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": "now()",
              "character_maximum_length": null
            },
            {
              "column_name": "confirmed",
              "data_type": "boolean",
              "is_nullable": "YES",
              "column_default": "false",
              "character_maximum_length": null
            },
            {
              "column_name": "confirmation_token",
              "data_type": "character varying",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": 255
            },
            {
              "column_name": "confirmed_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            }
          ]
        },
        "realtime.messages": {
          "schema": "realtime",
          "name": "messages",
          "owner": "supabase_realtime_admin",
          "hasIndexes": true,
          "hasRules": false,
          "hasTriggers": false,
          "rowCount": 0,
          "columns": [
            {
              "column_name": "topic",
              "data_type": "text",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "extension",
              "data_type": "text",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "payload",
              "data_type": "jsonb",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "event",
              "data_type": "text",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "private",
              "data_type": "boolean",
              "is_nullable": "YES",
              "column_default": "false",
              "character_maximum_length": null
            },
            {
              "column_name": "updated_at",
              "data_type": "timestamp without time zone",
              "is_nullable": "NO",
              "column_default": "now()",
              "character_maximum_length": null
            },
            {
              "column_name": "inserted_at",
              "data_type": "timestamp without time zone",
              "is_nullable": "NO",
              "column_default": "now()",
              "character_maximum_length": null
            },
            {
              "column_name": "id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": "gen_random_uuid()",
              "character_maximum_length": null
            }
          ]
        },
        "realtime.schema_migrations": {
          "schema": "realtime",
          "name": "schema_migrations",
          "owner": "supabase_admin",
          "hasIndexes": true,
          "hasRules": false,
          "hasTriggers": false,
          "rowCount": 63,
          "columns": [
            {
              "column_name": "version",
              "data_type": "bigint",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "inserted_at",
              "data_type": "timestamp without time zone",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            }
          ]
        },
        "realtime.subscription": {
          "schema": "realtime",
          "name": "subscription",
          "owner": "supabase_admin",
          "hasIndexes": true,
          "hasRules": false,
          "hasTriggers": true,
          "rowCount": 0,
          "columns": [
            {
              "column_name": "id",
              "data_type": "bigint",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "subscription_id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "entity",
              "data_type": "regclass",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "filters",
              "data_type": "ARRAY",
              "is_nullable": "NO",
              "column_default": "'{}'::realtime.user_defined_filter[]",
              "character_maximum_length": null
            },
            {
              "column_name": "claims",
              "data_type": "jsonb",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "claims_role",
              "data_type": "regrole",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "created_at",
              "data_type": "timestamp without time zone",
              "is_nullable": "NO",
              "column_default": "timezone('utc'::text, now())",
              "character_maximum_length": null
            }
          ]
        },
        "storage.buckets": {
          "schema": "storage",
          "name": "buckets",
          "owner": "supabase_storage_admin",
          "hasIndexes": true,
          "hasRules": false,
          "hasTriggers": true,
          "rowCount": 1,
          "columns": [
            {
              "column_name": "id",
              "data_type": "text",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "name",
              "data_type": "text",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "owner",
              "data_type": "uuid",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "created_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": "now()",
              "character_maximum_length": null
            },
            {
              "column_name": "updated_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": "now()",
              "character_maximum_length": null
            },
            {
              "column_name": "public",
              "data_type": "boolean",
              "is_nullable": "YES",
              "column_default": "false",
              "character_maximum_length": null
            },
            {
              "column_name": "avif_autodetection",
              "data_type": "boolean",
              "is_nullable": "YES",
              "column_default": "false",
              "character_maximum_length": null
            },
            {
              "column_name": "file_size_limit",
              "data_type": "bigint",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "allowed_mime_types",
              "data_type": "ARRAY",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "owner_id",
              "data_type": "text",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            }
          ]
        },
        "storage.migrations": {
          "schema": "storage",
          "name": "migrations",
          "owner": "supabase_storage_admin",
          "hasIndexes": true,
          "hasRules": false,
          "hasTriggers": false,
          "rowCount": 26,
          "columns": [
            {
              "column_name": "id",
              "data_type": "integer",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "name",
              "data_type": "character varying",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": 100
            },
            {
              "column_name": "hash",
              "data_type": "character varying",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": 40
            },
            {
              "column_name": "executed_at",
              "data_type": "timestamp without time zone",
              "is_nullable": "YES",
              "column_default": "CURRENT_TIMESTAMP",
              "character_maximum_length": null
            }
          ]
        },
        "storage.objects": {
          "schema": "storage",
          "name": "objects",
          "owner": "supabase_storage_admin",
          "hasIndexes": true,
          "hasRules": false,
          "hasTriggers": true,
          "rowCount": 44,
          "columns": [
            {
              "column_name": "id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": "gen_random_uuid()",
              "character_maximum_length": null
            },
            {
              "column_name": "bucket_id",
              "data_type": "text",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "name",
              "data_type": "text",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "owner",
              "data_type": "uuid",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "created_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": "now()",
              "character_maximum_length": null
            },
            {
              "column_name": "updated_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": "now()",
              "character_maximum_length": null
            },
            {
              "column_name": "last_accessed_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": "now()",
              "character_maximum_length": null
            },
            {
              "column_name": "metadata",
              "data_type": "jsonb",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "path_tokens",
              "data_type": "ARRAY",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "version",
              "data_type": "text",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "owner_id",
              "data_type": "text",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "user_metadata",
              "data_type": "jsonb",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            }
          ]
        },
        "storage.s3_multipart_uploads": {
          "schema": "storage",
          "name": "s3_multipart_uploads",
          "owner": "supabase_storage_admin",
          "hasIndexes": true,
          "hasRules": false,
          "hasTriggers": true,
          "rowCount": 0,
          "columns": [
            {
              "column_name": "id",
              "data_type": "text",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "in_progress_size",
              "data_type": "bigint",
              "is_nullable": "NO",
              "column_default": "0",
              "character_maximum_length": null
            },
            {
              "column_name": "upload_signature",
              "data_type": "text",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "bucket_id",
              "data_type": "text",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "key",
              "data_type": "text",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "version",
              "data_type": "text",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "owner_id",
              "data_type": "text",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "created_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "NO",
              "column_default": "now()",
              "character_maximum_length": null
            },
            {
              "column_name": "user_metadata",
              "data_type": "jsonb",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            }
          ]
        },
        "storage.s3_multipart_uploads_parts": {
          "schema": "storage",
          "name": "s3_multipart_uploads_parts",
          "owner": "supabase_storage_admin",
          "hasIndexes": true,
          "hasRules": false,
          "hasTriggers": true,
          "rowCount": 0,
          "columns": [
            {
              "column_name": "id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": "gen_random_uuid()",
              "character_maximum_length": null
            },
            {
              "column_name": "upload_id",
              "data_type": "text",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "size",
              "data_type": "bigint",
              "is_nullable": "NO",
              "column_default": "0",
              "character_maximum_length": null
            },
            {
              "column_name": "part_number",
              "data_type": "integer",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "bucket_id",
              "data_type": "text",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "key",
              "data_type": "text",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "etag",
              "data_type": "text",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "owner_id",
              "data_type": "text",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "version",
              "data_type": "text",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "created_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "NO",
              "column_default": "now()",
              "character_maximum_length": null
            }
          ]
        }
      },
      "new": {
        "auth.audit_log_entries": {
          "schema": "auth",
          "name": "audit_log_entries",
          "owner": "supabase_auth_admin",
          "hasIndexes": true,
          "hasRules": false,
          "hasTriggers": false,
          "rowCount": 31,
          "columns": [
            {
              "column_name": "instance_id",
              "data_type": "uuid",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "payload",
              "data_type": "json",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "created_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "ip_address",
              "data_type": "character varying",
              "is_nullable": "NO",
              "column_default": "''::character varying",
              "character_maximum_length": 64
            }
          ]
        },
        "auth.flow_state": {
          "schema": "auth",
          "name": "flow_state",
          "owner": "supabase_auth_admin",
          "hasIndexes": true,
          "hasRules": false,
          "hasTriggers": true,
          "rowCount": 0,
          "columns": [
            {
              "column_name": "id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "user_id",
              "data_type": "uuid",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "auth_code",
              "data_type": "text",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "code_challenge_method",
              "data_type": "USER-DEFINED",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "code_challenge",
              "data_type": "text",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "provider_type",
              "data_type": "text",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "provider_access_token",
              "data_type": "text",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "provider_refresh_token",
              "data_type": "text",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "created_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "updated_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "authentication_method",
              "data_type": "text",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "auth_code_issued_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            }
          ]
        },
        "auth.identities": {
          "schema": "auth",
          "name": "identities",
          "owner": "supabase_auth_admin",
          "hasIndexes": true,
          "hasRules": false,
          "hasTriggers": true,
          "rowCount": 3,
          "columns": [
            {
              "column_name": "provider_id",
              "data_type": "text",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "user_id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "identity_data",
              "data_type": "jsonb",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "provider",
              "data_type": "text",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "last_sign_in_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "created_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "updated_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "email",
              "data_type": "text",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": "gen_random_uuid()",
              "character_maximum_length": null
            }
          ]
        },
        "auth.instances": {
          "schema": "auth",
          "name": "instances",
          "owner": "supabase_auth_admin",
          "hasIndexes": true,
          "hasRules": false,
          "hasTriggers": false,
          "rowCount": 0,
          "columns": [
            {
              "column_name": "id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "uuid",
              "data_type": "uuid",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "raw_base_config",
              "data_type": "text",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "created_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "updated_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            }
          ]
        },
        "auth.mfa_amr_claims": {
          "schema": "auth",
          "name": "mfa_amr_claims",
          "owner": "supabase_auth_admin",
          "hasIndexes": true,
          "hasRules": false,
          "hasTriggers": true,
          "rowCount": 2,
          "columns": [
            {
              "column_name": "session_id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "created_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "updated_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "authentication_method",
              "data_type": "text",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            }
          ]
        },
        "auth.mfa_challenges": {
          "schema": "auth",
          "name": "mfa_challenges",
          "owner": "supabase_auth_admin",
          "hasIndexes": true,
          "hasRules": false,
          "hasTriggers": true,
          "rowCount": 0,
          "columns": [
            {
              "column_name": "id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "factor_id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "created_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "verified_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "ip_address",
              "data_type": "inet",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "otp_code",
              "data_type": "text",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "web_authn_session_data",
              "data_type": "jsonb",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            }
          ]
        },
        "auth.mfa_factors": {
          "schema": "auth",
          "name": "mfa_factors",
          "owner": "supabase_auth_admin",
          "hasIndexes": true,
          "hasRules": false,
          "hasTriggers": true,
          "rowCount": 0,
          "columns": [
            {
              "column_name": "id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "user_id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "friendly_name",
              "data_type": "text",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "factor_type",
              "data_type": "USER-DEFINED",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "status",
              "data_type": "USER-DEFINED",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "created_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "updated_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "secret",
              "data_type": "text",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "phone",
              "data_type": "text",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "last_challenged_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "web_authn_credential",
              "data_type": "jsonb",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "web_authn_aaguid",
              "data_type": "uuid",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            }
          ]
        },
        "auth.one_time_tokens": {
          "schema": "auth",
          "name": "one_time_tokens",
          "owner": "supabase_auth_admin",
          "hasIndexes": true,
          "hasRules": false,
          "hasTriggers": true,
          "rowCount": 3,
          "columns": [
            {
              "column_name": "id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "user_id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "token_type",
              "data_type": "USER-DEFINED",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "token_hash",
              "data_type": "text",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "relates_to",
              "data_type": "text",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "created_at",
              "data_type": "timestamp without time zone",
              "is_nullable": "NO",
              "column_default": "now()",
              "character_maximum_length": null
            },
            {
              "column_name": "updated_at",
              "data_type": "timestamp without time zone",
              "is_nullable": "NO",
              "column_default": "now()",
              "character_maximum_length": null
            }
          ]
        },
        "auth.refresh_tokens": {
          "schema": "auth",
          "name": "refresh_tokens",
          "owner": "supabase_auth_admin",
          "hasIndexes": true,
          "hasRules": false,
          "hasTriggers": true,
          "rowCount": 3,
          "columns": [
            {
              "column_name": "instance_id",
              "data_type": "uuid",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "id",
              "data_type": "bigint",
              "is_nullable": "NO",
              "column_default": "nextval('auth.refresh_tokens_id_seq'::regclass)",
              "character_maximum_length": null
            },
            {
              "column_name": "token",
              "data_type": "character varying",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": 255
            },
            {
              "column_name": "user_id",
              "data_type": "character varying",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": 255
            },
            {
              "column_name": "revoked",
              "data_type": "boolean",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "created_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "updated_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "parent",
              "data_type": "character varying",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": 255
            },
            {
              "column_name": "session_id",
              "data_type": "uuid",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            }
          ]
        },
        "auth.saml_providers": {
          "schema": "auth",
          "name": "saml_providers",
          "owner": "supabase_auth_admin",
          "hasIndexes": true,
          "hasRules": false,
          "hasTriggers": true,
          "rowCount": 0,
          "columns": [
            {
              "column_name": "id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "sso_provider_id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "entity_id",
              "data_type": "text",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "metadata_xml",
              "data_type": "text",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "metadata_url",
              "data_type": "text",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "attribute_mapping",
              "data_type": "jsonb",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "created_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "updated_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "name_id_format",
              "data_type": "text",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            }
          ]
        },
        "auth.saml_relay_states": {
          "schema": "auth",
          "name": "saml_relay_states",
          "owner": "supabase_auth_admin",
          "hasIndexes": true,
          "hasRules": false,
          "hasTriggers": true,
          "rowCount": 0,
          "columns": [
            {
              "column_name": "id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "sso_provider_id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "request_id",
              "data_type": "text",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "for_email",
              "data_type": "text",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "redirect_to",
              "data_type": "text",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "created_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "updated_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "flow_state_id",
              "data_type": "uuid",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            }
          ]
        },
        "auth.schema_migrations": {
          "schema": "auth",
          "name": "schema_migrations",
          "owner": "supabase_auth_admin",
          "hasIndexes": true,
          "hasRules": false,
          "hasTriggers": false,
          "rowCount": 61,
          "columns": [
            {
              "column_name": "version",
              "data_type": "character varying",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": 255
            }
          ]
        },
        "auth.sessions": {
          "schema": "auth",
          "name": "sessions",
          "owner": "supabase_auth_admin",
          "hasIndexes": true,
          "hasRules": false,
          "hasTriggers": true,
          "rowCount": 2,
          "columns": [
            {
              "column_name": "id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "user_id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "created_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "updated_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "factor_id",
              "data_type": "uuid",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "aal",
              "data_type": "USER-DEFINED",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "not_after",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "refreshed_at",
              "data_type": "timestamp without time zone",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "user_agent",
              "data_type": "text",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "ip",
              "data_type": "inet",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "tag",
              "data_type": "text",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            }
          ]
        },
        "auth.sso_domains": {
          "schema": "auth",
          "name": "sso_domains",
          "owner": "supabase_auth_admin",
          "hasIndexes": true,
          "hasRules": false,
          "hasTriggers": true,
          "rowCount": 0,
          "columns": [
            {
              "column_name": "id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "sso_provider_id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "domain",
              "data_type": "text",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "created_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "updated_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            }
          ]
        },
        "auth.sso_providers": {
          "schema": "auth",
          "name": "sso_providers",
          "owner": "supabase_auth_admin",
          "hasIndexes": true,
          "hasRules": false,
          "hasTriggers": true,
          "rowCount": 0,
          "columns": [
            {
              "column_name": "id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "resource_id",
              "data_type": "text",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "created_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "updated_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            }
          ]
        },
        "auth.users": {
          "schema": "auth",
          "name": "users",
          "owner": "supabase_auth_admin",
          "hasIndexes": true,
          "hasRules": false,
          "hasTriggers": true,
          "rowCount": 3,
          "columns": [
            {
              "column_name": "instance_id",
              "data_type": "uuid",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "aud",
              "data_type": "character varying",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": 255
            },
            {
              "column_name": "role",
              "data_type": "character varying",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": 255
            },
            {
              "column_name": "email",
              "data_type": "character varying",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": 255
            },
            {
              "column_name": "encrypted_password",
              "data_type": "character varying",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": 255
            },
            {
              "column_name": "email_confirmed_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "invited_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "confirmation_token",
              "data_type": "character varying",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": 255
            },
            {
              "column_name": "confirmation_sent_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "recovery_token",
              "data_type": "character varying",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": 255
            },
            {
              "column_name": "recovery_sent_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "email_change_token_new",
              "data_type": "character varying",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": 255
            },
            {
              "column_name": "email_change",
              "data_type": "character varying",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": 255
            },
            {
              "column_name": "email_change_sent_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "last_sign_in_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "raw_app_meta_data",
              "data_type": "jsonb",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "raw_user_meta_data",
              "data_type": "jsonb",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "is_super_admin",
              "data_type": "boolean",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "created_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "updated_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "phone",
              "data_type": "text",
              "is_nullable": "YES",
              "column_default": "NULL::character varying",
              "character_maximum_length": null
            },
            {
              "column_name": "phone_confirmed_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "phone_change",
              "data_type": "text",
              "is_nullable": "YES",
              "column_default": "''::character varying",
              "character_maximum_length": null
            },
            {
              "column_name": "phone_change_token",
              "data_type": "character varying",
              "is_nullable": "YES",
              "column_default": "''::character varying",
              "character_maximum_length": 255
            },
            {
              "column_name": "phone_change_sent_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "confirmed_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "email_change_token_current",
              "data_type": "character varying",
              "is_nullable": "YES",
              "column_default": "''::character varying",
              "character_maximum_length": 255
            },
            {
              "column_name": "email_change_confirm_status",
              "data_type": "smallint",
              "is_nullable": "YES",
              "column_default": "0",
              "character_maximum_length": null
            },
            {
              "column_name": "banned_until",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "reauthentication_token",
              "data_type": "character varying",
              "is_nullable": "YES",
              "column_default": "''::character varying",
              "character_maximum_length": 255
            },
            {
              "column_name": "reauthentication_sent_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "is_sso_user",
              "data_type": "boolean",
              "is_nullable": "NO",
              "column_default": "false",
              "character_maximum_length": null
            },
            {
              "column_name": "deleted_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "is_anonymous",
              "data_type": "boolean",
              "is_nullable": "NO",
              "column_default": "false",
              "character_maximum_length": null
            }
          ]
        },
        "public.card_categories": {
          "schema": "public",
          "name": "card_categories",
          "owner": "postgres",
          "hasIndexes": true,
          "hasRules": false,
          "hasTriggers": true,
          "rowCount": 0,
          "columns": [
            {
              "column_name": "id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": "uuid_generate_v4()",
              "character_maximum_length": null
            },
            {
              "column_name": "card_id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "category_id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "created_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": "now()",
              "character_maximum_length": null
            }
          ]
        },
        "public.card_interactions": {
          "schema": "public",
          "name": "card_interactions",
          "owner": "postgres",
          "hasIndexes": true,
          "hasRules": false,
          "hasTriggers": true,
          "rowCount": 0,
          "columns": [
            {
              "column_name": "id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": "uuid_generate_v4()",
              "character_maximum_length": null
            },
            {
              "column_name": "session_id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "card_id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "direction",
              "data_type": "text",
              "is_nullable": "NO",
              "column_default": "'hu-en'::text",
              "character_maximum_length": null
            },
            {
              "column_name": "reaction_time",
              "data_type": "integer",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "feedback_type",
              "data_type": "text",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "interaction_type",
              "data_type": "text",
              "is_nullable": "YES",
              "column_default": "'view'::text",
              "character_maximum_length": null
            },
            {
              "column_name": "timestamp",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": "now()",
              "character_maximum_length": null
            },
            {
              "column_name": "created_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": "now()",
              "character_maximum_length": null
            }
          ]
        },
        "public.cards": {
          "schema": "public",
          "name": "cards",
          "owner": "postgres",
          "hasIndexes": true,
          "hasRules": false,
          "hasTriggers": true,
          "rowCount": 5,
          "columns": [
            {
              "column_name": "id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": "uuid_generate_v4()",
              "character_maximum_length": null
            },
            {
              "column_name": "title",
              "data_type": "text",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "english_title",
              "data_type": "text",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "title_formatted",
              "data_type": "text",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "english_title_formatted",
              "data_type": "text",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "image_url",
              "data_type": "text",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "image_alt",
              "data_type": "text",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "media_type",
              "data_type": "text",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "media_url",
              "data_type": "text",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "category",
              "data_type": "text",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "difficulty_level",
              "data_type": "integer",
              "is_nullable": "YES",
              "column_default": "1",
              "character_maximum_length": null
            },
            {
              "column_name": "user_id",
              "data_type": "uuid",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "is_public",
              "data_type": "boolean",
              "is_nullable": "YES",
              "column_default": "false",
              "character_maximum_length": null
            },
            {
              "column_name": "created_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": "now()",
              "character_maximum_length": null
            },
            {
              "column_name": "updated_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": "now()",
              "character_maximum_length": null
            }
          ]
        },
        "public.categories": {
          "schema": "public",
          "name": "categories",
          "owner": "postgres",
          "hasIndexes": true,
          "hasRules": false,
          "hasTriggers": true,
          "rowCount": 0,
          "columns": [
            {
              "column_name": "id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": "uuid_generate_v4()",
              "character_maximum_length": null
            },
            {
              "column_name": "name",
              "data_type": "text",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "color",
              "data_type": "text",
              "is_nullable": "YES",
              "column_default": "'#3B82F6'::text",
              "character_maximum_length": null
            },
            {
              "column_name": "description",
              "data_type": "text",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "is_active",
              "data_type": "boolean",
              "is_nullable": "YES",
              "column_default": "true",
              "character_maximum_length": null
            },
            {
              "column_name": "created_by",
              "data_type": "uuid",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "is_mock",
              "data_type": "boolean",
              "is_nullable": "YES",
              "column_default": "false",
              "character_maximum_length": null
            },
            {
              "column_name": "created_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": "now()",
              "character_maximum_length": null
            },
            {
              "column_name": "updated_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": "now()",
              "character_maximum_length": null
            }
          ]
        },
        "public.classroom_details": {
          "schema": "public",
          "name": "classroom_details",
          "owner": "postgres",
          "hasIndexes": true,
          "hasRules": false,
          "hasTriggers": true,
          "rowCount": 0,
          "columns": [
            {
              "column_name": "id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": "uuid_generate_v4()",
              "character_maximum_length": null
            },
            {
              "column_name": "classroom_id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "subject",
              "data_type": "text",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "grade_level",
              "data_type": "text",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "academic_year",
              "data_type": "text",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "meeting_schedule",
              "data_type": "text",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "additional_info",
              "data_type": "jsonb",
              "is_nullable": "YES",
              "column_default": "'{}'::jsonb",
              "character_maximum_length": null
            },
            {
              "column_name": "is_mock",
              "data_type": "boolean",
              "is_nullable": "YES",
              "column_default": "false",
              "character_maximum_length": null
            },
            {
              "column_name": "created_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": "now()",
              "character_maximum_length": null
            },
            {
              "column_name": "updated_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": "now()",
              "character_maximum_length": null
            }
          ]
        },
        "public.classroom_members": {
          "schema": "public",
          "name": "classroom_members",
          "owner": "postgres",
          "hasIndexes": true,
          "hasRules": false,
          "hasTriggers": true,
          "rowCount": 0,
          "columns": [
            {
              "column_name": "id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": "uuid_generate_v4()",
              "character_maximum_length": null
            },
            {
              "column_name": "classroom_id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "user_id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "role",
              "data_type": "text",
              "is_nullable": "YES",
              "column_default": "'student'::text",
              "character_maximum_length": null
            },
            {
              "column_name": "joined_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": "now()",
              "character_maximum_length": null
            },
            {
              "column_name": "is_active",
              "data_type": "boolean",
              "is_nullable": "YES",
              "column_default": "true",
              "character_maximum_length": null
            },
            {
              "column_name": "is_mock",
              "data_type": "boolean",
              "is_nullable": "YES",
              "column_default": "false",
              "character_maximum_length": null
            },
            {
              "column_name": "created_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": "now()",
              "character_maximum_length": null
            }
          ]
        },
        "public.classroom_sets": {
          "schema": "public",
          "name": "classroom_sets",
          "owner": "postgres",
          "hasIndexes": true,
          "hasRules": false,
          "hasTriggers": true,
          "rowCount": 0,
          "columns": [
            {
              "column_name": "id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": "uuid_generate_v4()",
              "character_maximum_length": null
            },
            {
              "column_name": "classroom_id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "set_id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "assigned_by",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "assigned_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": "now()",
              "character_maximum_length": null
            },
            {
              "column_name": "due_date",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "is_required",
              "data_type": "boolean",
              "is_nullable": "YES",
              "column_default": "true",
              "character_maximum_length": null
            },
            {
              "column_name": "is_mock",
              "data_type": "boolean",
              "is_nullable": "YES",
              "column_default": "false",
              "character_maximum_length": null
            },
            {
              "column_name": "created_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": "now()",
              "character_maximum_length": null
            }
          ]
        },
        "public.classrooms": {
          "schema": "public",
          "name": "classrooms",
          "owner": "postgres",
          "hasIndexes": true,
          "hasRules": false,
          "hasTriggers": true,
          "rowCount": 0,
          "columns": [
            {
              "column_name": "id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": "uuid_generate_v4()",
              "character_maximum_length": null
            },
            {
              "column_name": "name",
              "data_type": "text",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "description",
              "data_type": "text",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "teacher_id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "school_id",
              "data_type": "uuid",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "access_code",
              "data_type": "text",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "is_active",
              "data_type": "boolean",
              "is_nullable": "YES",
              "column_default": "true",
              "character_maximum_length": null
            },
            {
              "column_name": "max_students",
              "data_type": "integer",
              "is_nullable": "YES",
              "column_default": "30",
              "character_maximum_length": null
            },
            {
              "column_name": "is_mock",
              "data_type": "boolean",
              "is_nullable": "YES",
              "column_default": "false",
              "character_maximum_length": null
            },
            {
              "column_name": "created_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": "now()",
              "character_maximum_length": null
            },
            {
              "column_name": "updated_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": "now()",
              "character_maximum_length": null
            }
          ]
        },
        "public.favicons": {
          "schema": "public",
          "name": "favicons",
          "owner": "postgres",
          "hasIndexes": true,
          "hasRules": false,
          "hasTriggers": false,
          "rowCount": 1,
          "columns": [
            {
              "column_name": "id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": "uuid_generate_v4()",
              "character_maximum_length": null
            },
            {
              "column_name": "domain",
              "data_type": "text",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "favicon_url",
              "data_type": "text",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "last_updated",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": "now()",
              "character_maximum_length": null
            },
            {
              "column_name": "is_active",
              "data_type": "boolean",
              "is_nullable": "YES",
              "column_default": "true",
              "character_maximum_length": null
            },
            {
              "column_name": "fetch_attempts",
              "data_type": "integer",
              "is_nullable": "YES",
              "column_default": "0",
              "character_maximum_length": null
            },
            {
              "column_name": "last_fetch_attempt",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": "now()",
              "character_maximum_length": null
            },
            {
              "column_name": "created_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": "now()",
              "character_maximum_length": null
            }
          ]
        },
        "public.flashcard_set_cards": {
          "schema": "public",
          "name": "flashcard_set_cards",
          "owner": "postgres",
          "hasIndexes": true,
          "hasRules": false,
          "hasTriggers": true,
          "rowCount": 5,
          "columns": [
            {
              "column_name": "id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": "uuid_generate_v4()",
              "character_maximum_length": null
            },
            {
              "column_name": "set_id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "card_id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "position",
              "data_type": "integer",
              "is_nullable": "YES",
              "column_default": "0",
              "character_maximum_length": null
            },
            {
              "column_name": "created_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": "now()",
              "character_maximum_length": null
            }
          ]
        },
        "public.flashcard_set_categories": {
          "schema": "public",
          "name": "flashcard_set_categories",
          "owner": "postgres",
          "hasIndexes": true,
          "hasRules": false,
          "hasTriggers": true,
          "rowCount": 0,
          "columns": [
            {
              "column_name": "id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": "uuid_generate_v4()",
              "character_maximum_length": null
            },
            {
              "column_name": "set_id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "category_id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "created_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": "now()",
              "character_maximum_length": null
            }
          ]
        },
        "public.flashcard_sets": {
          "schema": "public",
          "name": "flashcard_sets",
          "owner": "postgres",
          "hasIndexes": true,
          "hasRules": false,
          "hasTriggers": true,
          "rowCount": 1,
          "columns": [
            {
              "column_name": "id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": "uuid_generate_v4()",
              "character_maximum_length": null
            },
            {
              "column_name": "title",
              "data_type": "text",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "description",
              "data_type": "text",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "language_a",
              "data_type": "text",
              "is_nullable": "YES",
              "column_default": "'Hungarian'::text",
              "character_maximum_length": null
            },
            {
              "column_name": "language_b",
              "data_type": "text",
              "is_nullable": "YES",
              "column_default": "'English'::text",
              "character_maximum_length": null
            },
            {
              "column_name": "category",
              "data_type": "text",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "difficulty_level",
              "data_type": "integer",
              "is_nullable": "YES",
              "column_default": "1",
              "character_maximum_length": null
            },
            {
              "column_name": "is_public",
              "data_type": "boolean",
              "is_nullable": "YES",
              "column_default": "false",
              "character_maximum_length": null
            },
            {
              "column_name": "user_id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "created_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": "now()",
              "character_maximum_length": null
            },
            {
              "column_name": "updated_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": "now()",
              "character_maximum_length": null
            }
          ]
        },
        "public.schools": {
          "schema": "public",
          "name": "schools",
          "owner": "postgres",
          "hasIndexes": true,
          "hasRules": false,
          "hasTriggers": true,
          "rowCount": 1,
          "columns": [
            {
              "column_name": "id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": "uuid_generate_v4()",
              "character_maximum_length": null
            },
            {
              "column_name": "name",
              "data_type": "text",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "address",
              "data_type": "text",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "phone",
              "data_type": "text",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "contact_email",
              "data_type": "text",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "admin_user_id",
              "data_type": "uuid",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "description",
              "data_type": "text",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "is_active",
              "data_type": "boolean",
              "is_nullable": "YES",
              "column_default": "true",
              "character_maximum_length": null
            },
            {
              "column_name": "is_mock",
              "data_type": "boolean",
              "is_nullable": "YES",
              "column_default": "false",
              "character_maximum_length": null
            },
            {
              "column_name": "created_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": "now()",
              "character_maximum_length": null
            },
            {
              "column_name": "updated_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": "now()",
              "character_maximum_length": null
            }
          ]
        },
        "public.study_logs": {
          "schema": "public",
          "name": "study_logs",
          "owner": "postgres",
          "hasIndexes": true,
          "hasRules": false,
          "hasTriggers": true,
          "rowCount": 0,
          "columns": [
            {
              "column_name": "id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": "uuid_generate_v4()",
              "character_maximum_length": null
            },
            {
              "column_name": "user_id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "card_id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "set_id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "session_id",
              "data_type": "uuid",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "feedback_type",
              "data_type": "text",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "direction",
              "data_type": "text",
              "is_nullable": "NO",
              "column_default": "'hu-en'::text",
              "character_maximum_length": null
            },
            {
              "column_name": "reaction_time",
              "data_type": "integer",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "mastery_level_before",
              "data_type": "integer",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "mastery_level_after",
              "data_type": "integer",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "review_interval",
              "data_type": "integer",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "created_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": "now()",
              "character_maximum_length": null
            }
          ]
        },
        "public.study_sessions": {
          "schema": "public",
          "name": "study_sessions",
          "owner": "postgres",
          "hasIndexes": true,
          "hasRules": false,
          "hasTriggers": true,
          "rowCount": 0,
          "columns": [
            {
              "column_name": "id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": "uuid_generate_v4()",
              "character_maximum_length": null
            },
            {
              "column_name": "user_id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "set_id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "classroom_id",
              "data_type": "uuid",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "direction",
              "data_type": "text",
              "is_nullable": "NO",
              "column_default": "'hu-en'::text",
              "character_maximum_length": null
            },
            {
              "column_name": "session_type",
              "data_type": "text",
              "is_nullable": "YES",
              "column_default": "'study'::text",
              "character_maximum_length": null
            },
            {
              "column_name": "cards_studied",
              "data_type": "integer",
              "is_nullable": "YES",
              "column_default": "0",
              "character_maximum_length": null
            },
            {
              "column_name": "cards_correct",
              "data_type": "integer",
              "is_nullable": "YES",
              "column_default": "0",
              "character_maximum_length": null
            },
            {
              "column_name": "cards_incorrect",
              "data_type": "integer",
              "is_nullable": "YES",
              "column_default": "0",
              "character_maximum_length": null
            },
            {
              "column_name": "total_time",
              "data_type": "integer",
              "is_nullable": "YES",
              "column_default": "0",
              "character_maximum_length": null
            },
            {
              "column_name": "started_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": "now()",
              "character_maximum_length": null
            },
            {
              "column_name": "completed_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "is_completed",
              "data_type": "boolean",
              "is_nullable": "YES",
              "column_default": "false",
              "character_maximum_length": null
            },
            {
              "column_name": "is_mock",
              "data_type": "boolean",
              "is_nullable": "YES",
              "column_default": "false",
              "character_maximum_length": null
            },
            {
              "column_name": "created_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": "now()",
              "character_maximum_length": null
            }
          ]
        },
        "public.user_card_progress": {
          "schema": "public",
          "name": "user_card_progress",
          "owner": "postgres",
          "hasIndexes": true,
          "hasRules": false,
          "hasTriggers": true,
          "rowCount": 0,
          "columns": [
            {
              "column_name": "id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": "uuid_generate_v4()",
              "character_maximum_length": null
            },
            {
              "column_name": "user_id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "card_id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "set_id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "direction",
              "data_type": "text",
              "is_nullable": "NO",
              "column_default": "'hu-en'::text",
              "character_maximum_length": null
            },
            {
              "column_name": "mastery_level",
              "data_type": "integer",
              "is_nullable": "YES",
              "column_default": "1",
              "character_maximum_length": null
            },
            {
              "column_name": "last_reviewed",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": "now()",
              "character_maximum_length": null
            },
            {
              "column_name": "next_review",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "review_count",
              "data_type": "integer",
              "is_nullable": "YES",
              "column_default": "1",
              "character_maximum_length": null
            },
            {
              "column_name": "correct_count",
              "data_type": "integer",
              "is_nullable": "YES",
              "column_default": "0",
              "character_maximum_length": null
            },
            {
              "column_name": "is_mock",
              "data_type": "boolean",
              "is_nullable": "YES",
              "column_default": "false",
              "character_maximum_length": null
            },
            {
              "column_name": "created_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": "now()",
              "character_maximum_length": null
            },
            {
              "column_name": "updated_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": "now()",
              "character_maximum_length": null
            }
          ]
        },
        "public.user_profiles": {
          "schema": "public",
          "name": "user_profiles",
          "owner": "postgres",
          "hasIndexes": true,
          "hasRules": false,
          "hasTriggers": true,
          "rowCount": 3,
          "columns": [
            {
              "column_name": "id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "first_name",
              "data_type": "text",
              "is_nullable": "NO",
              "column_default": "''::text",
              "character_maximum_length": null
            },
            {
              "column_name": "last_name",
              "data_type": "text",
              "is_nullable": "YES",
              "column_default": "''::text",
              "character_maximum_length": null
            },
            {
              "column_name": "email",
              "data_type": "text",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "user_role",
              "data_type": "text",
              "is_nullable": "NO",
              "column_default": "'student'::text",
              "character_maximum_length": null
            },
            {
              "column_name": "school_id",
              "data_type": "uuid",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "language",
              "data_type": "text",
              "is_nullable": "YES",
              "column_default": "'hu'::text",
              "character_maximum_length": null
            },
            {
              "column_name": "country",
              "data_type": "text",
              "is_nullable": "YES",
              "column_default": "'HU'::text",
              "character_maximum_length": null
            },
            {
              "column_name": "phone",
              "data_type": "text",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "status",
              "data_type": "text",
              "is_nullable": "YES",
              "column_default": "'active'::text",
              "character_maximum_length": null
            },
            {
              "column_name": "note",
              "data_type": "text",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "is_mock",
              "data_type": "boolean",
              "is_nullable": "YES",
              "column_default": "false",
              "character_maximum_length": null
            },
            {
              "column_name": "created_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": "now()",
              "character_maximum_length": null
            },
            {
              "column_name": "updated_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": "now()",
              "character_maximum_length": null
            }
          ]
        },
        "public.user_set_progress": {
          "schema": "public",
          "name": "user_set_progress",
          "owner": "postgres",
          "hasIndexes": true,
          "hasRules": false,
          "hasTriggers": true,
          "rowCount": 0,
          "columns": [
            {
              "column_name": "id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": "uuid_generate_v4()",
              "character_maximum_length": null
            },
            {
              "column_name": "user_id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "set_id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "total_time_spent",
              "data_type": "integer",
              "is_nullable": "YES",
              "column_default": "0",
              "character_maximum_length": null
            },
            {
              "column_name": "last_studied",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": "now()",
              "character_maximum_length": null
            },
            {
              "column_name": "cards_studied",
              "data_type": "integer",
              "is_nullable": "YES",
              "column_default": "0",
              "character_maximum_length": null
            },
            {
              "column_name": "cards_mastered",
              "data_type": "integer",
              "is_nullable": "YES",
              "column_default": "0",
              "character_maximum_length": null
            },
            {
              "column_name": "session_count",
              "data_type": "integer",
              "is_nullable": "YES",
              "column_default": "0",
              "character_maximum_length": null
            },
            {
              "column_name": "is_mock",
              "data_type": "boolean",
              "is_nullable": "YES",
              "column_default": "false",
              "character_maximum_length": null
            },
            {
              "column_name": "created_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": "now()",
              "character_maximum_length": null
            },
            {
              "column_name": "updated_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": "now()",
              "character_maximum_length": null
            }
          ]
        },
        "public.waitlist": {
          "schema": "public",
          "name": "waitlist",
          "owner": "postgres",
          "hasIndexes": true,
          "hasRules": false,
          "hasTriggers": true,
          "rowCount": 2,
          "columns": [
            {
              "column_name": "id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": "uuid_generate_v4()",
              "character_maximum_length": null
            },
            {
              "column_name": "email",
              "data_type": "text",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "first_name",
              "data_type": "text",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "language",
              "data_type": "text",
              "is_nullable": "YES",
              "column_default": "'hu'::text",
              "character_maximum_length": null
            },
            {
              "column_name": "source",
              "data_type": "text",
              "is_nullable": "YES",
              "column_default": "'landing_page'::text",
              "character_maximum_length": null
            },
            {
              "column_name": "status",
              "data_type": "text",
              "is_nullable": "YES",
              "column_default": "'pending'::text",
              "character_maximum_length": null
            },
            {
              "column_name": "invite_sent_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "registered_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "is_mock",
              "data_type": "boolean",
              "is_nullable": "YES",
              "column_default": "false",
              "character_maximum_length": null
            },
            {
              "column_name": "created_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": "now()",
              "character_maximum_length": null
            },
            {
              "column_name": "updated_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": "now()",
              "character_maximum_length": null
            }
          ]
        },
        "realtime.messages": {
          "schema": "realtime",
          "name": "messages",
          "owner": "supabase_realtime_admin",
          "hasIndexes": true,
          "hasRules": false,
          "hasTriggers": false,
          "rowCount": 0,
          "columns": [
            {
              "column_name": "topic",
              "data_type": "text",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "extension",
              "data_type": "text",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "payload",
              "data_type": "jsonb",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "event",
              "data_type": "text",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "private",
              "data_type": "boolean",
              "is_nullable": "YES",
              "column_default": "false",
              "character_maximum_length": null
            },
            {
              "column_name": "updated_at",
              "data_type": "timestamp without time zone",
              "is_nullable": "NO",
              "column_default": "now()",
              "character_maximum_length": null
            },
            {
              "column_name": "inserted_at",
              "data_type": "timestamp without time zone",
              "is_nullable": "NO",
              "column_default": "now()",
              "character_maximum_length": null
            },
            {
              "column_name": "id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": "gen_random_uuid()",
              "character_maximum_length": null
            }
          ]
        },
        "realtime.schema_migrations": {
          "schema": "realtime",
          "name": "schema_migrations",
          "owner": "supabase_admin",
          "hasIndexes": true,
          "hasRules": false,
          "hasTriggers": false,
          "rowCount": 63,
          "columns": [
            {
              "column_name": "version",
              "data_type": "bigint",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "inserted_at",
              "data_type": "timestamp without time zone",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            }
          ]
        },
        "realtime.subscription": {
          "schema": "realtime",
          "name": "subscription",
          "owner": "supabase_admin",
          "hasIndexes": true,
          "hasRules": false,
          "hasTriggers": true,
          "rowCount": 0,
          "columns": [
            {
              "column_name": "id",
              "data_type": "bigint",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "subscription_id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "entity",
              "data_type": "regclass",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "filters",
              "data_type": "ARRAY",
              "is_nullable": "NO",
              "column_default": "'{}'::realtime.user_defined_filter[]",
              "character_maximum_length": null
            },
            {
              "column_name": "claims",
              "data_type": "jsonb",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "claims_role",
              "data_type": "regrole",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "created_at",
              "data_type": "timestamp without time zone",
              "is_nullable": "NO",
              "column_default": "timezone('utc'::text, now())",
              "character_maximum_length": null
            }
          ]
        },
        "storage.buckets": {
          "schema": "storage",
          "name": "buckets",
          "owner": "supabase_storage_admin",
          "hasIndexes": true,
          "hasRules": false,
          "hasTriggers": true,
          "rowCount": 0,
          "columns": [
            {
              "column_name": "id",
              "data_type": "text",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "name",
              "data_type": "text",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "owner",
              "data_type": "uuid",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "created_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": "now()",
              "character_maximum_length": null
            },
            {
              "column_name": "updated_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": "now()",
              "character_maximum_length": null
            },
            {
              "column_name": "public",
              "data_type": "boolean",
              "is_nullable": "YES",
              "column_default": "false",
              "character_maximum_length": null
            },
            {
              "column_name": "avif_autodetection",
              "data_type": "boolean",
              "is_nullable": "YES",
              "column_default": "false",
              "character_maximum_length": null
            },
            {
              "column_name": "file_size_limit",
              "data_type": "bigint",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "allowed_mime_types",
              "data_type": "ARRAY",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "owner_id",
              "data_type": "text",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "type",
              "data_type": "USER-DEFINED",
              "is_nullable": "NO",
              "column_default": "'STANDARD'::storage.buckettype",
              "character_maximum_length": null
            }
          ]
        },
        "storage.buckets_analytics": {
          "schema": "storage",
          "name": "buckets_analytics",
          "owner": "supabase_storage_admin",
          "hasIndexes": true,
          "hasRules": false,
          "hasTriggers": false,
          "rowCount": 0,
          "columns": [
            {
              "column_name": "id",
              "data_type": "text",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "type",
              "data_type": "USER-DEFINED",
              "is_nullable": "NO",
              "column_default": "'ANALYTICS'::storage.buckettype",
              "character_maximum_length": null
            },
            {
              "column_name": "format",
              "data_type": "text",
              "is_nullable": "NO",
              "column_default": "'ICEBERG'::text",
              "character_maximum_length": null
            },
            {
              "column_name": "created_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "NO",
              "column_default": "now()",
              "character_maximum_length": null
            },
            {
              "column_name": "updated_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "NO",
              "column_default": "now()",
              "character_maximum_length": null
            }
          ]
        },
        "storage.migrations": {
          "schema": "storage",
          "name": "migrations",
          "owner": "supabase_storage_admin",
          "hasIndexes": true,
          "hasRules": false,
          "hasTriggers": false,
          "rowCount": 39,
          "columns": [
            {
              "column_name": "id",
              "data_type": "integer",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "name",
              "data_type": "character varying",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": 100
            },
            {
              "column_name": "hash",
              "data_type": "character varying",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": 40
            },
            {
              "column_name": "executed_at",
              "data_type": "timestamp without time zone",
              "is_nullable": "YES",
              "column_default": "CURRENT_TIMESTAMP",
              "character_maximum_length": null
            }
          ]
        },
        "storage.objects": {
          "schema": "storage",
          "name": "objects",
          "owner": "supabase_storage_admin",
          "hasIndexes": true,
          "hasRules": false,
          "hasTriggers": true,
          "rowCount": 0,
          "columns": [
            {
              "column_name": "id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": "gen_random_uuid()",
              "character_maximum_length": null
            },
            {
              "column_name": "bucket_id",
              "data_type": "text",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "name",
              "data_type": "text",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "owner",
              "data_type": "uuid",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "created_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": "now()",
              "character_maximum_length": null
            },
            {
              "column_name": "updated_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": "now()",
              "character_maximum_length": null
            },
            {
              "column_name": "last_accessed_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": "now()",
              "character_maximum_length": null
            },
            {
              "column_name": "metadata",
              "data_type": "jsonb",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "path_tokens",
              "data_type": "ARRAY",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "version",
              "data_type": "text",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "owner_id",
              "data_type": "text",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "user_metadata",
              "data_type": "jsonb",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "level",
              "data_type": "integer",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            }
          ]
        },
        "storage.prefixes": {
          "schema": "storage",
          "name": "prefixes",
          "owner": "supabase_storage_admin",
          "hasIndexes": true,
          "hasRules": false,
          "hasTriggers": true,
          "rowCount": 0,
          "columns": [
            {
              "column_name": "bucket_id",
              "data_type": "text",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "name",
              "data_type": "text",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "level",
              "data_type": "integer",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "created_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": "now()",
              "character_maximum_length": null
            },
            {
              "column_name": "updated_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "YES",
              "column_default": "now()",
              "character_maximum_length": null
            }
          ]
        },
        "storage.s3_multipart_uploads": {
          "schema": "storage",
          "name": "s3_multipart_uploads",
          "owner": "supabase_storage_admin",
          "hasIndexes": true,
          "hasRules": false,
          "hasTriggers": true,
          "rowCount": 0,
          "columns": [
            {
              "column_name": "id",
              "data_type": "text",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "in_progress_size",
              "data_type": "bigint",
              "is_nullable": "NO",
              "column_default": "0",
              "character_maximum_length": null
            },
            {
              "column_name": "upload_signature",
              "data_type": "text",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "bucket_id",
              "data_type": "text",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "key",
              "data_type": "text",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "version",
              "data_type": "text",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "owner_id",
              "data_type": "text",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "created_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "NO",
              "column_default": "now()",
              "character_maximum_length": null
            },
            {
              "column_name": "user_metadata",
              "data_type": "jsonb",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            }
          ]
        },
        "storage.s3_multipart_uploads_parts": {
          "schema": "storage",
          "name": "s3_multipart_uploads_parts",
          "owner": "supabase_storage_admin",
          "hasIndexes": true,
          "hasRules": false,
          "hasTriggers": true,
          "rowCount": 0,
          "columns": [
            {
              "column_name": "id",
              "data_type": "uuid",
              "is_nullable": "NO",
              "column_default": "gen_random_uuid()",
              "character_maximum_length": null
            },
            {
              "column_name": "upload_id",
              "data_type": "text",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "size",
              "data_type": "bigint",
              "is_nullable": "NO",
              "column_default": "0",
              "character_maximum_length": null
            },
            {
              "column_name": "part_number",
              "data_type": "integer",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "bucket_id",
              "data_type": "text",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "key",
              "data_type": "text",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "etag",
              "data_type": "text",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "owner_id",
              "data_type": "text",
              "is_nullable": "YES",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "version",
              "data_type": "text",
              "is_nullable": "NO",
              "column_default": null,
              "character_maximum_length": null
            },
            {
              "column_name": "created_at",
              "data_type": "timestamp with time zone",
              "is_nullable": "NO",
              "column_default": "now()",
              "character_maximum_length": null
            }
          ]
        }
      },
      "comparison": [
        {
          "type": "different",
          "path": "auth.audit_log_entries.rowCount",
          "oldValue": 222,
          "newValue": 31
        },
        {
          "type": "different",
          "path": "auth.instances.rowCount",
          "oldValue": 1,
          "newValue": 0
        },
        {
          "type": "different",
          "path": "auth.mfa_amr_claims.rowCount",
          "oldValue": 0,
          "newValue": 2
        },
        {
          "type": "different",
          "path": "auth.one_time_tokens.rowCount",
          "oldValue": 0,
          "newValue": 3
        },
        {
          "type": "different",
          "path": "auth.refresh_tokens.rowCount",
          "oldValue": 0,
          "newValue": 3
        },
        {
          "type": "different",
          "path": "auth.sessions.rowCount",
          "oldValue": 0,
          "newValue": 2
        },
        {
          "type": "different",
          "path": "public.card_interactions.columns.0.column_default",
          "oldValue": "gen_random_uuid()",
          "newValue": "uuid_generate_v4()"
        },
        {
          "type": "different",
          "path": "public.card_interactions.columns.3.data_type",
          "oldValue": "character varying",
          "newValue": "text"
        },
        {
          "type": "different",
          "path": "public.card_interactions.columns.3.column_default",
          "oldValue": null,
          "newValue": "'hu-en'::text"
        },
        {
          "type": "different",
          "path": "public.card_interactions.columns.3.character_maximum_length",
          "oldValue": 10,
          "newValue": null
        },
        {
          "type": "different",
          "path": "public.card_interactions.columns.5.column_name",
          "oldValue": "feedback",
          "newValue": "feedback_type"
        },
        {
          "type": "different",
          "path": "public.card_interactions.columns.5.data_type",
          "oldValue": "character varying",
          "newValue": "text"
        },
        {
          "type": "different",
          "path": "public.card_interactions.columns.5.character_maximum_length",
          "oldValue": 20,
          "newValue": null
        },
        {
          "type": "different",
          "path": "public.card_interactions.columns.6.column_name",
          "oldValue": "created_at",
          "newValue": "interaction_type"
        },
        {
          "type": "different",
          "path": "public.card_interactions.columns.6.data_type",
          "oldValue": "timestamp with time zone",
          "newValue": "text"
        },
        {
          "type": "different",
          "path": "public.card_interactions.columns.6.column_default",
          "oldValue": "now()",
          "newValue": "'view'::text"
        },
        {
          "type": "missing_in_old",
          "path": "public.card_interactions.columns.7",
          "value": {
            "column_name": "timestamp",
            "data_type": "timestamp with time zone",
            "is_nullable": "YES",
            "column_default": "now()",
            "character_maximum_length": null
          }
        },
        {
          "type": "missing_in_old",
          "path": "public.card_interactions.columns.8",
          "value": {
            "column_name": "created_at",
            "data_type": "timestamp with time zone",
            "is_nullable": "YES",
            "column_default": "now()",
            "character_maximum_length": null
          }
        },
        {
          "type": "different",
          "path": "public.cards.rowCount",
          "oldValue": 0,
          "newValue": 5
        },
        {
          "type": "different",
          "path": "public.cards.columns.0.column_default",
          "oldValue": "gen_random_uuid()",
          "newValue": "uuid_generate_v4()"
        },
        {
          "type": "different",
          "path": "public.cards.columns.1.column_name",
          "oldValue": "created_at",
          "newValue": "title"
        },
        {
          "type": "different",
          "path": "public.cards.columns.1.data_type",
          "oldValue": "timestamp with time zone",
          "newValue": "text"
        },
        {
          "type": "different",
          "path": "public.cards.columns.1.is_nullable",
          "oldValue": "YES",
          "newValue": "NO"
        },
        {
          "type": "different",
          "path": "public.cards.columns.1.column_default",
          "oldValue": "now()",
          "newValue": null
        },
        {
          "type": "different",
          "path": "public.cards.columns.2.column_name",
          "oldValue": "title",
          "newValue": "english_title"
        },
        {
          "type": "different",
          "path": "public.cards.columns.3.column_name",
          "oldValue": "english_title",
          "newValue": "title_formatted"
        },
        {
          "type": "different",
          "path": "public.cards.columns.3.is_nullable",
          "oldValue": "NO",
          "newValue": "YES"
        },
        {
          "type": "different",
          "path": "public.cards.columns.4.column_name",
          "oldValue": "image_url",
          "newValue": "english_title_formatted"
        },
        {
          "type": "different",
          "path": "public.cards.columns.4.is_nullable",
          "oldValue": "NO",
          "newValue": "YES"
        },
        {
          "type": "different",
          "path": "public.cards.columns.5.column_name",
          "oldValue": "category",
          "newValue": "image_url"
        },
        {
          "type": "different",
          "path": "public.cards.columns.5.is_nullable",
          "oldValue": "NO",
          "newValue": "YES"
        },
        {
          "type": "different",
          "path": "public.cards.columns.5.column_default",
          "oldValue": "'general'::text",
          "newValue": null
        },
        {
          "type": "different",
          "path": "public.cards.columns.6.column_name",
          "oldValue": "difficulty_level",
          "newValue": "image_alt"
        },
        {
          "type": "different",
          "path": "public.cards.columns.6.data_type",
          "oldValue": "integer",
          "newValue": "text"
        },
        {
          "type": "different",
          "path": "public.cards.columns.6.column_default",
          "oldValue": "1",
          "newValue": null
        },
        {
          "type": "different",
          "path": "public.cards.columns.7.column_name",
          "oldValue": "set_id",
          "newValue": "media_type"
        },
        {
          "type": "different",
          "path": "public.cards.columns.7.data_type",
          "oldValue": "uuid",
          "newValue": "text"
        },
        {
          "type": "different",
          "path": "public.cards.columns.8.column_name",
          "oldValue": "media_type",
          "newValue": "media_url"
        },
        {
          "type": "different",
          "path": "public.cards.columns.8.data_type",
          "oldValue": "character varying",
          "newValue": "text"
        },
        {
          "type": "different",
          "path": "public.cards.columns.8.column_default",
          "oldValue": "'image'::character varying",
          "newValue": null
        },
        {
          "type": "different",
          "path": "public.cards.columns.8.character_maximum_length",
          "oldValue": 20,
          "newValue": null
        },
        {
          "type": "different",
          "path": "public.cards.columns.9.column_name",
          "oldValue": "media_url",
          "newValue": "category"
        },
        {
          "type": "different",
          "path": "public.cards.columns.10.column_name",
          "oldValue": "title_formatted",
          "newValue": "difficulty_level"
        },
        {
          "type": "different",
          "path": "public.cards.columns.10.data_type",
          "oldValue": "text",
          "newValue": "integer"
        },
        {
          "type": "different",
          "path": "public.cards.columns.10.column_default",
          "oldValue": null,
          "newValue": "1"
        },
        {
          "type": "different",
          "path": "public.cards.columns.11.column_name",
          "oldValue": "english_title_formatted",
          "newValue": "user_id"
        },
        {
          "type": "different",
          "path": "public.cards.columns.11.data_type",
          "oldValue": "text",
          "newValue": "uuid"
        },
        {
          "type": "different",
          "path": "public.cards.columns.12.column_name",
          "oldValue": "category_id",
          "newValue": "is_public"
        },
        {
          "type": "different",
          "path": "public.cards.columns.12.data_type",
          "oldValue": "uuid",
          "newValue": "boolean"
        },
        {
          "type": "different",
          "path": "public.cards.columns.12.column_default",
          "oldValue": null,
          "newValue": "false"
        },
        {
          "type": "missing_in_old",
          "path": "public.cards.columns.13",
          "value": {
            "column_name": "created_at",
            "data_type": "timestamp with time zone",
            "is_nullable": "YES",
            "column_default": "now()",
            "character_maximum_length": null
          }
        },
        {
          "type": "missing_in_old",
          "path": "public.cards.columns.14",
          "value": {
            "column_name": "updated_at",
            "data_type": "timestamp with time zone",
            "is_nullable": "YES",
            "column_default": "now()",
            "character_maximum_length": null
          }
        },
        {
          "type": "different",
          "path": "public.categories.columns.0.column_default",
          "oldValue": "gen_random_uuid()",
          "newValue": "uuid_generate_v4()"
        },
        {
          "type": "different",
          "path": "public.categories.columns.1.data_type",
          "oldValue": "character varying",
          "newValue": "text"
        },
        {
          "type": "different",
          "path": "public.categories.columns.1.character_maximum_length",
          "oldValue": 100,
          "newValue": null
        },
        {
          "type": "different",
          "path": "public.categories.columns.2.column_name",
          "oldValue": "description",
          "newValue": "color"
        },
        {
          "type": "different",
          "path": "public.categories.columns.2.column_default",
          "oldValue": null,
          "newValue": "'#3B82F6'::text"
        },
        {
          "type": "different",
          "path": "public.categories.columns.3.column_name",
          "oldValue": "color",
          "newValue": "description"
        },
        {
          "type": "different",
          "path": "public.categories.columns.3.data_type",
          "oldValue": "character varying",
          "newValue": "text"
        },
        {
          "type": "different",
          "path": "public.categories.columns.3.character_maximum_length",
          "oldValue": 7,
          "newValue": null
        },
        {
          "type": "different",
          "path": "public.categories.columns.4.column_name",
          "oldValue": "created_at",
          "newValue": "is_active"
        },
        {
          "type": "different",
          "path": "public.categories.columns.4.data_type",
          "oldValue": "timestamp with time zone",
          "newValue": "boolean"
        },
        {
          "type": "different",
          "path": "public.categories.columns.4.column_default",
          "oldValue": "now()",
          "newValue": "true"
        },
        {
          "type": "different",
          "path": "public.categories.columns.5.column_name",
          "oldValue": "updated_at",
          "newValue": "created_by"
        },
        {
          "type": "different",
          "path": "public.categories.columns.5.data_type",
          "oldValue": "timestamp with time zone",
          "newValue": "uuid"
        },
        {
          "type": "different",
          "path": "public.categories.columns.5.column_default",
          "oldValue": "now()",
          "newValue": null
        },
        {
          "type": "missing_in_old",
          "path": "public.categories.columns.6",
          "value": {
            "column_name": "is_mock",
            "data_type": "boolean",
            "is_nullable": "YES",
            "column_default": "false",
            "character_maximum_length": null
          }
        },
        {
          "type": "missing_in_old",
          "path": "public.categories.columns.7",
          "value": {
            "column_name": "created_at",
            "data_type": "timestamp with time zone",
            "is_nullable": "YES",
            "column_default": "now()",
            "character_maximum_length": null
          }
        },
        {
          "type": "missing_in_old",
          "path": "public.categories.columns.8",
          "value": {
            "column_name": "updated_at",
            "data_type": "timestamp with time zone",
            "is_nullable": "YES",
            "column_default": "now()",
            "character_maximum_length": null
          }
        },
        {
          "type": "different",
          "path": "public.classroom_members.columns.0.column_default",
          "oldValue": "gen_random_uuid()",
          "newValue": "uuid_generate_v4()"
        },
        {
          "type": "different",
          "path": "public.classroom_members.columns.2.column_name",
          "oldValue": "student_id",
          "newValue": "user_id"
        },
        {
          "type": "different",
          "path": "public.classroom_members.columns.3.column_name",
          "oldValue": "joined_at",
          "newValue": "role"
        },
        {
          "type": "different",
          "path": "public.classroom_members.columns.3.data_type",
          "oldValue": "timestamp with time zone",
          "newValue": "text"
        },
        {
          "type": "different",
          "path": "public.classroom_members.columns.3.column_default",
          "oldValue": "now()",
          "newValue": "'student'::text"
        },
        {
          "type": "different",
          "path": "public.classroom_members.columns.4.column_name",
          "oldValue": "is_active",
          "newValue": "joined_at"
        },
        {
          "type": "different",
          "path": "public.classroom_members.columns.4.data_type",
          "oldValue": "boolean",
          "newValue": "timestamp with time zone"
        },
        {
          "type": "different",
          "path": "public.classroom_members.columns.4.column_default",
          "oldValue": "true",
          "newValue": "now()"
        },
        {
          "type": "missing_in_old",
          "path": "public.classroom_members.columns.5",
          "value": {
            "column_name": "is_active",
            "data_type": "boolean",
            "is_nullable": "YES",
            "column_default": "true",
            "character_maximum_length": null
          }
        },
        {
          "type": "missing_in_old",
          "path": "public.classroom_members.columns.6",
          "value": {
            "column_name": "is_mock",
            "data_type": "boolean",
            "is_nullable": "YES",
            "column_default": "false",
            "character_maximum_length": null
          }
        },
        {
          "type": "missing_in_old",
          "path": "public.classroom_members.columns.7",
          "value": {
            "column_name": "created_at",
            "data_type": "timestamp with time zone",
            "is_nullable": "YES",
            "column_default": "now()",
            "character_maximum_length": null
          }
        },
        {
          "type": "different",
          "path": "public.classroom_sets.columns.0.column_default",
          "oldValue": "gen_random_uuid()",
          "newValue": "uuid_generate_v4()"
        },
        {
          "type": "different",
          "path": "public.classroom_sets.columns.3.column_name",
          "oldValue": "assigned_at",
          "newValue": "assigned_by"
        },
        {
          "type": "different",
          "path": "public.classroom_sets.columns.3.data_type",
          "oldValue": "timestamp with time zone",
          "newValue": "uuid"
        },
        {
          "type": "different",
          "path": "public.classroom_sets.columns.3.is_nullable",
          "oldValue": "YES",
          "newValue": "NO"
        },
        {
          "type": "different",
          "path": "public.classroom_sets.columns.3.column_default",
          "oldValue": "now()",
          "newValue": null
        },
        {
          "type": "different",
          "path": "public.classroom_sets.columns.4.column_name",
          "oldValue": "assigned_by",
          "newValue": "assigned_at"
        },
        {
          "type": "different",
          "path": "public.classroom_sets.columns.4.data_type",
          "oldValue": "uuid",
          "newValue": "timestamp with time zone"
        },
        {
          "type": "different",
          "path": "public.classroom_sets.columns.4.column_default",
          "oldValue": null,
          "newValue": "now()"
        },
        {
          "type": "different",
          "path": "public.classroom_sets.columns.5.column_name",
          "oldValue": "created_at",
          "newValue": "due_date"
        },
        {
          "type": "different",
          "path": "public.classroom_sets.columns.5.column_default",
          "oldValue": "now()",
          "newValue": null
        },
        {
          "type": "missing_in_old",
          "path": "public.classroom_sets.columns.6",
          "value": {
            "column_name": "is_required",
            "data_type": "boolean",
            "is_nullable": "YES",
            "column_default": "true",
            "character_maximum_length": null
          }
        },
        {
          "type": "missing_in_old",
          "path": "public.classroom_sets.columns.7",
          "value": {
            "column_name": "is_mock",
            "data_type": "boolean",
            "is_nullable": "YES",
            "column_default": "false",
            "character_maximum_length": null
          }
        },
        {
          "type": "missing_in_old",
          "path": "public.classroom_sets.columns.8",
          "value": {
            "column_name": "created_at",
            "data_type": "timestamp with time zone",
            "is_nullable": "YES",
            "column_default": "now()",
            "character_maximum_length": null
          }
        },
        {
          "type": "different",
          "path": "public.classrooms.columns.0.column_default",
          "oldValue": "gen_random_uuid()",
          "newValue": "uuid_generate_v4()"
        },
        {
          "type": "different",
          "path": "public.classrooms.columns.4.column_name",
          "oldValue": "invite_code",
          "newValue": "school_id"
        },
        {
          "type": "different",
          "path": "public.classrooms.columns.4.data_type",
          "oldValue": "text",
          "newValue": "uuid"
        },
        {
          "type": "different",
          "path": "public.classrooms.columns.4.is_nullable",
          "oldValue": "NO",
          "newValue": "YES"
        },
        {
          "type": "different",
          "path": "public.classrooms.columns.5.column_name",
          "oldValue": "is_active",
          "newValue": "access_code"
        },
        {
          "type": "different",
          "path": "public.classrooms.columns.5.data_type",
          "oldValue": "boolean",
          "newValue": "text"
        },
        {
          "type": "different",
          "path": "public.classrooms.columns.5.column_default",
          "oldValue": "true",
          "newValue": null
        },
        {
          "type": "different",
          "path": "public.classrooms.columns.6.column_name",
          "oldValue": "created_at",
          "newValue": "is_active"
        },
        {
          "type": "different",
          "path": "public.classrooms.columns.6.data_type",
          "oldValue": "timestamp with time zone",
          "newValue": "boolean"
        },
        {
          "type": "different",
          "path": "public.classrooms.columns.6.column_default",
          "oldValue": "now()",
          "newValue": "true"
        },
        {
          "type": "different",
          "path": "public.classrooms.columns.7.column_name",
          "oldValue": "updated_at",
          "newValue": "max_students"
        },
        {
          "type": "different",
          "path": "public.classrooms.columns.7.data_type",
          "oldValue": "timestamp with time zone",
          "newValue": "integer"
        },
        {
          "type": "different",
          "path": "public.classrooms.columns.7.column_default",
          "oldValue": "now()",
          "newValue": "30"
        },
        {
          "type": "different",
          "path": "public.classrooms.columns.8.column_name",
          "oldValue": "school_id",
          "newValue": "is_mock"
        },
        {
          "type": "different",
          "path": "public.classrooms.columns.8.data_type",
          "oldValue": "uuid",
          "newValue": "boolean"
        },
        {
          "type": "different",
          "path": "public.classrooms.columns.8.column_default",
          "oldValue": null,
          "newValue": "false"
        },
        {
          "type": "missing_in_old",
          "path": "public.classrooms.columns.9",
          "value": {
            "column_name": "created_at",
            "data_type": "timestamp with time zone",
            "is_nullable": "YES",
            "column_default": "now()",
            "character_maximum_length": null
          }
        },
        {
          "type": "missing_in_old",
          "path": "public.classrooms.columns.10",
          "value": {
            "column_name": "updated_at",
            "data_type": "timestamp with time zone",
            "is_nullable": "YES",
            "column_default": "now()",
            "character_maximum_length": null
          }
        },
        {
          "type": "different",
          "path": "public.favicons.columns.0.column_default",
          "oldValue": "gen_random_uuid()",
          "newValue": "uuid_generate_v4()"
        },
        {
          "type": "different",
          "path": "public.favicons.columns.1.column_name",
          "oldValue": "name",
          "newValue": "domain"
        },
        {
          "type": "different",
          "path": "public.favicons.columns.1.data_type",
          "oldValue": "character varying",
          "newValue": "text"
        },
        {
          "type": "different",
          "path": "public.favicons.columns.1.character_maximum_length",
          "oldValue": 100,
          "newValue": null
        },
        {
          "type": "different",
          "path": "public.favicons.columns.2.column_name",
          "oldValue": "data_url",
          "newValue": "favicon_url"
        },
        {
          "type": "different",
          "path": "public.favicons.columns.3.column_name",
          "oldValue": "mime_type",
          "newValue": "last_updated"
        },
        {
          "type": "different",
          "path": "public.favicons.columns.3.data_type",
          "oldValue": "character varying",
          "newValue": "timestamp with time zone"
        },
        {
          "type": "different",
          "path": "public.favicons.columns.3.is_nullable",
          "oldValue": "NO",
          "newValue": "YES"
        },
        {
          "type": "different",
          "path": "public.favicons.columns.3.column_default",
          "oldValue": "'image/x-icon'::character varying",
          "newValue": "now()"
        },
        {
          "type": "different",
          "path": "public.favicons.columns.3.character_maximum_length",
          "oldValue": 50,
          "newValue": null
        },
        {
          "type": "different",
          "path": "public.favicons.columns.4.column_name",
          "oldValue": "created_at",
          "newValue": "is_active"
        },
        {
          "type": "different",
          "path": "public.favicons.columns.4.data_type",
          "oldValue": "timestamp with time zone",
          "newValue": "boolean"
        },
        {
          "type": "different",
          "path": "public.favicons.columns.4.column_default",
          "oldValue": "now()",
          "newValue": "true"
        },
        {
          "type": "different",
          "path": "public.favicons.columns.5.column_name",
          "oldValue": "is_active",
          "newValue": "fetch_attempts"
        },
        {
          "type": "different",
          "path": "public.favicons.columns.5.data_type",
          "oldValue": "boolean",
          "newValue": "integer"
        },
        {
          "type": "different",
          "path": "public.favicons.columns.5.column_default",
          "oldValue": "false",
          "newValue": "0"
        },
        {
          "type": "missing_in_old",
          "path": "public.favicons.columns.6",
          "value": {
            "column_name": "last_fetch_attempt",
            "data_type": "timestamp with time zone",
            "is_nullable": "YES",
            "column_default": "now()",
            "character_maximum_length": null
          }
        },
        {
          "type": "missing_in_old",
          "path": "public.favicons.columns.7",
          "value": {
            "column_name": "created_at",
            "data_type": "timestamp with time zone",
            "is_nullable": "YES",
            "column_default": "now()",
            "character_maximum_length": null
          }
        },
        {
          "type": "different",
          "path": "public.flashcard_set_cards.rowCount",
          "oldValue": 0,
          "newValue": 5
        },
        {
          "type": "different",
          "path": "public.flashcard_set_cards.columns.0.column_default",
          "oldValue": "gen_random_uuid()",
          "newValue": "uuid_generate_v4()"
        },
        {
          "type": "different",
          "path": "public.flashcard_set_cards.columns.1.is_nullable",
          "oldValue": "YES",
          "newValue": "NO"
        },
        {
          "type": "different",
          "path": "public.flashcard_set_cards.columns.2.is_nullable",
          "oldValue": "YES",
          "newValue": "NO"
        },
        {
          "type": "different",
          "path": "public.flashcard_set_categories.columns.0.column_default",
          "oldValue": "gen_random_uuid()",
          "newValue": "uuid_generate_v4()"
        },
        {
          "type": "different",
          "path": "public.flashcard_sets.rowCount",
          "oldValue": 0,
          "newValue": 1
        },
        {
          "type": "different",
          "path": "public.flashcard_sets.columns.0.column_default",
          "oldValue": "gen_random_uuid()",
          "newValue": "uuid_generate_v4()"
        },
        {
          "type": "different",
          "path": "public.flashcard_sets.columns.3.column_name",
          "oldValue": "creator_id",
          "newValue": "language_a"
        },
        {
          "type": "different",
          "path": "public.flashcard_sets.columns.3.data_type",
          "oldValue": "uuid",
          "newValue": "text"
        },
        {
          "type": "different",
          "path": "public.flashcard_sets.columns.3.column_default",
          "oldValue": null,
          "newValue": "'Hungarian'::text"
        },
        {
          "type": "different",
          "path": "public.flashcard_sets.columns.4.column_name",
          "oldValue": "is_public",
          "newValue": "language_b"
        },
        {
          "type": "different",
          "path": "public.flashcard_sets.columns.4.data_type",
          "oldValue": "boolean",
          "newValue": "text"
        },
        {
          "type": "different",
          "path": "public.flashcard_sets.columns.4.column_default",
          "oldValue": "false",
          "newValue": "'English'::text"
        },
        {
          "type": "different",
          "path": "public.flashcard_sets.columns.5.column_name",
          "oldValue": "created_at",
          "newValue": "category"
        },
        {
          "type": "different",
          "path": "public.flashcard_sets.columns.5.data_type",
          "oldValue": "timestamp with time zone",
          "newValue": "text"
        },
        {
          "type": "different",
          "path": "public.flashcard_sets.columns.5.column_default",
          "oldValue": "now()",
          "newValue": null
        },
        {
          "type": "different",
          "path": "public.flashcard_sets.columns.6.column_name",
          "oldValue": "updated_at",
          "newValue": "difficulty_level"
        },
        {
          "type": "different",
          "path": "public.flashcard_sets.columns.6.data_type",
          "oldValue": "timestamp with time zone",
          "newValue": "integer"
        },
        {
          "type": "different",
          "path": "public.flashcard_sets.columns.6.column_default",
          "oldValue": "now()",
          "newValue": "1"
        },
        {
          "type": "different",
          "path": "public.flashcard_sets.columns.7.column_name",
          "oldValue": "language_a",
          "newValue": "is_public"
        },
        {
          "type": "different",
          "path": "public.flashcard_sets.columns.7.data_type",
          "oldValue": "character varying",
          "newValue": "boolean"
        },
        {
          "type": "different",
          "path": "public.flashcard_sets.columns.7.column_default",
          "oldValue": "'Magyar'::character varying",
          "newValue": "false"
        },
        {
          "type": "different",
          "path": "public.flashcard_sets.columns.7.character_maximum_length",
          "oldValue": 50,
          "newValue": null
        },
        {
          "type": "different",
          "path": "public.flashcard_sets.columns.8.column_name",
          "oldValue": "language_b",
          "newValue": "user_id"
        },
        {
          "type": "different",
          "path": "public.flashcard_sets.columns.8.data_type",
          "oldValue": "character varying",
          "newValue": "uuid"
        },
        {
          "type": "different",
          "path": "public.flashcard_sets.columns.8.is_nullable",
          "oldValue": "YES",
          "newValue": "NO"
        },
        {
          "type": "different",
          "path": "public.flashcard_sets.columns.8.column_default",
          "oldValue": "'English'::character varying",
          "newValue": null
        },
        {
          "type": "different",
          "path": "public.flashcard_sets.columns.8.character_maximum_length",
          "oldValue": 50,
          "newValue": null
        },
        {
          "type": "different",
          "path": "public.flashcard_sets.columns.9.column_name",
          "oldValue": "language_a_code",
          "newValue": "created_at"
        },
        {
          "type": "different",
          "path": "public.flashcard_sets.columns.9.data_type",
          "oldValue": "character varying",
          "newValue": "timestamp with time zone"
        },
        {
          "type": "different",
          "path": "public.flashcard_sets.columns.9.column_default",
          "oldValue": "'hu'::character varying",
          "newValue": "now()"
        },
        {
          "type": "different",
          "path": "public.flashcard_sets.columns.9.character_maximum_length",
          "oldValue": 5,
          "newValue": null
        },
        {
          "type": "different",
          "path": "public.flashcard_sets.columns.10.column_name",
          "oldValue": "language_b_code",
          "newValue": "updated_at"
        },
        {
          "type": "different",
          "path": "public.flashcard_sets.columns.10.data_type",
          "oldValue": "character varying",
          "newValue": "timestamp with time zone"
        },
        {
          "type": "different",
          "path": "public.flashcard_sets.columns.10.column_default",
          "oldValue": "'en'::character varying",
          "newValue": "now()"
        },
        {
          "type": "different",
          "path": "public.flashcard_sets.columns.10.character_maximum_length",
          "oldValue": 5,
          "newValue": null
        },
        {
          "type": "different",
          "path": "public.schools.columns.0.column_default",
          "oldValue": "gen_random_uuid()",
          "newValue": "uuid_generate_v4()"
        },
        {
          "type": "different",
          "path": "public.schools.columns.2.column_name",
          "oldValue": "description",
          "newValue": "address"
        },
        {
          "type": "different",
          "path": "public.schools.columns.3.column_name",
          "oldValue": "contact_email",
          "newValue": "phone"
        },
        {
          "type": "different",
          "path": "public.schools.columns.4.column_name",
          "oldValue": "is_active",
          "newValue": "contact_email"
        },
        {
          "type": "different",
          "path": "public.schools.columns.4.data_type",
          "oldValue": "boolean",
          "newValue": "text"
        },
        {
          "type": "different",
          "path": "public.schools.columns.4.column_default",
          "oldValue": "true",
          "newValue": null
        },
        {
          "type": "different",
          "path": "public.schools.columns.5.column_name",
          "oldValue": "created_at",
          "newValue": "admin_user_id"
        },
        {
          "type": "different",
          "path": "public.schools.columns.5.data_type",
          "oldValue": "timestamp with time zone",
          "newValue": "uuid"
        },
        {
          "type": "different",
          "path": "public.schools.columns.5.column_default",
          "oldValue": "now()",
          "newValue": null
        },
        {
          "type": "different",
          "path": "public.schools.columns.6.column_name",
          "oldValue": "updated_at",
          "newValue": "description"
        },
        {
          "type": "different",
          "path": "public.schools.columns.6.data_type",
          "oldValue": "timestamp with time zone",
          "newValue": "text"
        },
        {
          "type": "different",
          "path": "public.schools.columns.6.column_default",
          "oldValue": "now()",
          "newValue": null
        },
        {
          "type": "different",
          "path": "public.schools.columns.7.column_name",
          "oldValue": "address",
          "newValue": "is_active"
        },
        {
          "type": "different",
          "path": "public.schools.columns.7.data_type",
          "oldValue": "text",
          "newValue": "boolean"
        },
        {
          "type": "different",
          "path": "public.schools.columns.7.column_default",
          "oldValue": null,
          "newValue": "true"
        },
        {
          "type": "different",
          "path": "public.schools.columns.8.column_name",
          "oldValue": "phone",
          "newValue": "is_mock"
        },
        {
          "type": "different",
          "path": "public.schools.columns.8.data_type",
          "oldValue": "text",
          "newValue": "boolean"
        },
        {
          "type": "different",
          "path": "public.schools.columns.8.column_default",
          "oldValue": null,
          "newValue": "false"
        },
        {
          "type": "missing_in_old",
          "path": "public.schools.columns.9",
          "value": {
            "column_name": "created_at",
            "data_type": "timestamp with time zone",
            "is_nullable": "YES",
            "column_default": "now()",
            "character_maximum_length": null
          }
        },
        {
          "type": "missing_in_old",
          "path": "public.schools.columns.10",
          "value": {
            "column_name": "updated_at",
            "data_type": "timestamp with time zone",
            "is_nullable": "YES",
            "column_default": "now()",
            "character_maximum_length": null
          }
        },
        {
          "type": "different",
          "path": "public.study_logs.columns.0.column_default",
          "oldValue": "gen_random_uuid()",
          "newValue": "uuid_generate_v4()"
        },
        {
          "type": "different",
          "path": "public.study_logs.columns.1.is_nullable",
          "oldValue": "YES",
          "newValue": "NO"
        },
        {
          "type": "different",
          "path": "public.study_logs.columns.2.is_nullable",
          "oldValue": "YES",
          "newValue": "NO"
        },
        {
          "type": "different",
          "path": "public.study_logs.columns.3.is_nullable",
          "oldValue": "YES",
          "newValue": "NO"
        },
        {
          "type": "different",
          "path": "public.study_logs.columns.4.column_name",
          "oldValue": "feedback_type",
          "newValue": "session_id"
        },
        {
          "type": "different",
          "path": "public.study_logs.columns.4.data_type",
          "oldValue": "text",
          "newValue": "uuid"
        },
        {
          "type": "different",
          "path": "public.study_logs.columns.4.is_nullable",
          "oldValue": "NO",
          "newValue": "YES"
        },
        {
          "type": "different",
          "path": "public.study_logs.columns.5.column_name",
          "oldValue": "study_time",
          "newValue": "feedback_type"
        },
        {
          "type": "different",
          "path": "public.study_logs.columns.5.data_type",
          "oldValue": "timestamp with time zone",
          "newValue": "text"
        },
        {
          "type": "different",
          "path": "public.study_logs.columns.5.is_nullable",
          "oldValue": "YES",
          "newValue": "NO"
        },
        {
          "type": "different",
          "path": "public.study_logs.columns.5.column_default",
          "oldValue": "now()",
          "newValue": null
        },
        {
          "type": "different",
          "path": "public.study_logs.columns.6.column_name",
          "oldValue": "session_duration",
          "newValue": "direction"
        },
        {
          "type": "different",
          "path": "public.study_logs.columns.6.data_type",
          "oldValue": "integer",
          "newValue": "text"
        },
        {
          "type": "different",
          "path": "public.study_logs.columns.6.is_nullable",
          "oldValue": "YES",
          "newValue": "NO"
        },
        {
          "type": "different",
          "path": "public.study_logs.columns.6.column_default",
          "oldValue": "0",
          "newValue": "'hu-en'::text"
        },
        {
          "type": "different",
          "path": "public.study_logs.columns.7.column_name",
          "oldValue": "device_type",
          "newValue": "reaction_time"
        },
        {
          "type": "different",
          "path": "public.study_logs.columns.7.data_type",
          "oldValue": "text",
          "newValue": "integer"
        },
        {
          "type": "different",
          "path": "public.study_logs.columns.7.column_default",
          "oldValue": "'web'::text",
          "newValue": null
        },
        {
          "type": "different",
          "path": "public.study_logs.columns.8.column_name",
          "oldValue": "created_at",
          "newValue": "mastery_level_before"
        },
        {
          "type": "different",
          "path": "public.study_logs.columns.8.data_type",
          "oldValue": "timestamp with time zone",
          "newValue": "integer"
        },
        {
          "type": "different",
          "path": "public.study_logs.columns.8.column_default",
          "oldValue": "now()",
          "newValue": null
        },
        {
          "type": "missing_in_old",
          "path": "public.study_logs.columns.9",
          "value": {
            "column_name": "mastery_level_after",
            "data_type": "integer",
            "is_nullable": "YES",
            "column_default": null,
            "character_maximum_length": null
          }
        },
        {
          "type": "missing_in_old",
          "path": "public.study_logs.columns.10",
          "value": {
            "column_name": "review_interval",
            "data_type": "integer",
            "is_nullable": "YES",
            "column_default": null,
            "character_maximum_length": null
          }
        },
        {
          "type": "missing_in_old",
          "path": "public.study_logs.columns.11",
          "value": {
            "column_name": "created_at",
            "data_type": "timestamp with time zone",
            "is_nullable": "YES",
            "column_default": "now()",
            "character_maximum_length": null
          }
        },
        {
          "type": "different",
          "path": "public.study_sessions.columns.0.column_default",
          "oldValue": "gen_random_uuid()",
          "newValue": "uuid_generate_v4()"
        },
        {
          "type": "different",
          "path": "public.study_sessions.columns.1.column_name",
          "oldValue": "created_at",
          "newValue": "user_id"
        },
        {
          "type": "different",
          "path": "public.study_sessions.columns.1.data_type",
          "oldValue": "timestamp with time zone",
          "newValue": "uuid"
        },
        {
          "type": "different",
          "path": "public.study_sessions.columns.1.is_nullable",
          "oldValue": "YES",
          "newValue": "NO"
        },
        {
          "type": "different",
          "path": "public.study_sessions.columns.1.column_default",
          "oldValue": "now()",
          "newValue": null
        },
        {
          "type": "different",
          "path": "public.study_sessions.columns.2.column_name",
          "oldValue": "updated_at",
          "newValue": "set_id"
        },
        {
          "type": "different",
          "path": "public.study_sessions.columns.2.data_type",
          "oldValue": "timestamp with time zone",
          "newValue": "uuid"
        },
        {
          "type": "different",
          "path": "public.study_sessions.columns.2.is_nullable",
          "oldValue": "YES",
          "newValue": "NO"
        },
        {
          "type": "different",
          "path": "public.study_sessions.columns.2.column_default",
          "oldValue": "now()",
          "newValue": null
        },
        {
          "type": "different",
          "path": "public.study_sessions.columns.3.column_name",
          "oldValue": "user_id",
          "newValue": "classroom_id"
        },
        {
          "type": "different",
          "path": "public.study_sessions.columns.4.column_name",
          "oldValue": "session_data",
          "newValue": "direction"
        },
        {
          "type": "different",
          "path": "public.study_sessions.columns.4.data_type",
          "oldValue": "jsonb",
          "newValue": "text"
        },
        {
          "type": "different",
          "path": "public.study_sessions.columns.4.column_default",
          "oldValue": null,
          "newValue": "'hu-en'::text"
        },
        {
          "type": "different",
          "path": "public.study_sessions.columns.5.column_name",
          "oldValue": "total_time",
          "newValue": "session_type"
        },
        {
          "type": "different",
          "path": "public.study_sessions.columns.5.data_type",
          "oldValue": "integer",
          "newValue": "text"
        },
        {
          "type": "different",
          "path": "public.study_sessions.columns.5.is_nullable",
          "oldValue": "NO",
          "newValue": "YES"
        },
        {
          "type": "different",
          "path": "public.study_sessions.columns.5.column_default",
          "oldValue": "0",
          "newValue": "'study'::text"
        },
        {
          "type": "different",
          "path": "public.study_sessions.columns.6.is_nullable",
          "oldValue": "NO",
          "newValue": "YES"
        },
        {
          "type": "different",
          "path": "public.study_sessions.columns.7.column_name",
          "oldValue": "correct_answers",
          "newValue": "cards_correct"
        },
        {
          "type": "different",
          "path": "public.study_sessions.columns.7.is_nullable",
          "oldValue": "NO",
          "newValue": "YES"
        },
        {
          "type": "different",
          "path": "public.study_sessions.columns.8.column_name",
          "oldValue": "uncertain_answers",
          "newValue": "cards_incorrect"
        },
        {
          "type": "different",
          "path": "public.study_sessions.columns.8.is_nullable",
          "oldValue": "NO",
          "newValue": "YES"
        },
        {
          "type": "different",
          "path": "public.study_sessions.columns.9.column_name",
          "oldValue": "need_to_learn",
          "newValue": "total_time"
        },
        {
          "type": "different",
          "path": "public.study_sessions.columns.9.is_nullable",
          "oldValue": "NO",
          "newValue": "YES"
        },
        {
          "type": "different",
          "path": "public.study_sessions.columns.10.column_name",
          "oldValue": "set_id",
          "newValue": "started_at"
        },
        {
          "type": "different",
          "path": "public.study_sessions.columns.10.data_type",
          "oldValue": "uuid",
          "newValue": "timestamp with time zone"
        },
        {
          "type": "different",
          "path": "public.study_sessions.columns.10.column_default",
          "oldValue": null,
          "newValue": "now()"
        },
        {
          "type": "different",
          "path": "public.study_sessions.columns.11.column_name",
          "oldValue": "direction",
          "newValue": "completed_at"
        },
        {
          "type": "different",
          "path": "public.study_sessions.columns.11.data_type",
          "oldValue": "character varying",
          "newValue": "timestamp with time zone"
        },
        {
          "type": "different",
          "path": "public.study_sessions.columns.11.column_default",
          "oldValue": "'AtoB'::character varying",
          "newValue": null
        },
        {
          "type": "different",
          "path": "public.study_sessions.columns.11.character_maximum_length",
          "oldValue": 10,
          "newValue": null
        },
        {
          "type": "different",
          "path": "public.study_sessions.columns.12.column_name",
          "oldValue": "started_at",
          "newValue": "is_completed"
        },
        {
          "type": "different",
          "path": "public.study_sessions.columns.12.data_type",
          "oldValue": "timestamp with time zone",
          "newValue": "boolean"
        },
        {
          "type": "different",
          "path": "public.study_sessions.columns.12.column_default",
          "oldValue": "now()",
          "newValue": "false"
        },
        {
          "type": "different",
          "path": "public.study_sessions.columns.13.column_name",
          "oldValue": "ended_at",
          "newValue": "is_mock"
        },
        {
          "type": "different",
          "path": "public.study_sessions.columns.13.data_type",
          "oldValue": "timestamp with time zone",
          "newValue": "boolean"
        },
        {
          "type": "different",
          "path": "public.study_sessions.columns.13.column_default",
          "oldValue": null,
          "newValue": "false"
        },
        {
          "type": "different",
          "path": "public.study_sessions.columns.14.column_name",
          "oldValue": "status",
          "newValue": "created_at"
        },
        {
          "type": "different",
          "path": "public.study_sessions.columns.14.data_type",
          "oldValue": "character varying",
          "newValue": "timestamp with time zone"
        },
        {
          "type": "different",
          "path": "public.study_sessions.columns.14.column_default",
          "oldValue": "'active'::character varying",
          "newValue": "now()"
        },
        {
          "type": "different",
          "path": "public.study_sessions.columns.14.character_maximum_length",
          "oldValue": 20,
          "newValue": null
        },
        {
          "type": "different",
          "path": "public.user_card_progress.columns.0.column_default",
          "oldValue": "gen_random_uuid()",
          "newValue": "uuid_generate_v4()"
        },
        {
          "type": "different",
          "path": "public.user_card_progress.columns.1.is_nullable",
          "oldValue": "YES",
          "newValue": "NO"
        },
        {
          "type": "different",
          "path": "public.user_card_progress.columns.2.is_nullable",
          "oldValue": "YES",
          "newValue": "NO"
        },
        {
          "type": "different",
          "path": "public.user_card_progress.columns.3.is_nullable",
          "oldValue": "YES",
          "newValue": "NO"
        },
        {
          "type": "different",
          "path": "public.user_card_progress.columns.4.column_name",
          "oldValue": "mastery_level",
          "newValue": "direction"
        },
        {
          "type": "different",
          "path": "public.user_card_progress.columns.4.data_type",
          "oldValue": "integer",
          "newValue": "text"
        },
        {
          "type": "different",
          "path": "public.user_card_progress.columns.4.is_nullable",
          "oldValue": "YES",
          "newValue": "NO"
        },
        {
          "type": "different",
          "path": "public.user_card_progress.columns.4.column_default",
          "oldValue": "0",
          "newValue": "'hu-en'::text"
        },
        {
          "type": "different",
          "path": "public.user_card_progress.columns.5.column_name",
          "oldValue": "last_reviewed",
          "newValue": "mastery_level"
        },
        {
          "type": "different",
          "path": "public.user_card_progress.columns.5.data_type",
          "oldValue": "timestamp with time zone",
          "newValue": "integer"
        },
        {
          "type": "different",
          "path": "public.user_card_progress.columns.5.column_default",
          "oldValue": "now()",
          "newValue": "1"
        },
        {
          "type": "different",
          "path": "public.user_card_progress.columns.6.column_name",
          "oldValue": "next_review",
          "newValue": "last_reviewed"
        },
        {
          "type": "different",
          "path": "public.user_card_progress.columns.7.column_name",
          "oldValue": "review_count",
          "newValue": "next_review"
        },
        {
          "type": "different",
          "path": "public.user_card_progress.columns.7.data_type",
          "oldValue": "integer",
          "newValue": "timestamp with time zone"
        },
        {
          "type": "different",
          "path": "public.user_card_progress.columns.7.column_default",
          "oldValue": "0",
          "newValue": null
        },
        {
          "type": "different",
          "path": "public.user_card_progress.columns.8.column_name",
          "oldValue": "correct_count",
          "newValue": "review_count"
        },
        {
          "type": "different",
          "path": "public.user_card_progress.columns.8.column_default",
          "oldValue": "0",
          "newValue": "1"
        },
        {
          "type": "different",
          "path": "public.user_card_progress.columns.9.column_name",
          "oldValue": "created_at",
          "newValue": "correct_count"
        },
        {
          "type": "different",
          "path": "public.user_card_progress.columns.9.data_type",
          "oldValue": "timestamp with time zone",
          "newValue": "integer"
        },
        {
          "type": "different",
          "path": "public.user_card_progress.columns.9.column_default",
          "oldValue": "now()",
          "newValue": "0"
        },
        {
          "type": "different",
          "path": "public.user_card_progress.columns.10.column_name",
          "oldValue": "updated_at",
          "newValue": "is_mock"
        },
        {
          "type": "different",
          "path": "public.user_card_progress.columns.10.data_type",
          "oldValue": "timestamp with time zone",
          "newValue": "boolean"
        },
        {
          "type": "different",
          "path": "public.user_card_progress.columns.10.column_default",
          "oldValue": "now()",
          "newValue": "false"
        },
        {
          "type": "different",
          "path": "public.user_card_progress.columns.11.column_name",
          "oldValue": "direction",
          "newValue": "created_at"
        },
        {
          "type": "different",
          "path": "public.user_card_progress.columns.11.data_type",
          "oldValue": "character varying",
          "newValue": "timestamp with time zone"
        },
        {
          "type": "different",
          "path": "public.user_card_progress.columns.11.column_default",
          "oldValue": "'AtoB'::character varying",
          "newValue": "now()"
        },
        {
          "type": "different",
          "path": "public.user_card_progress.columns.11.character_maximum_length",
          "oldValue": 10,
          "newValue": null
        },
        {
          "type": "different",
          "path": "public.user_card_progress.columns.12.column_name",
          "oldValue": "last_session_id",
          "newValue": "updated_at"
        },
        {
          "type": "different",
          "path": "public.user_card_progress.columns.12.data_type",
          "oldValue": "uuid",
          "newValue": "timestamp with time zone"
        },
        {
          "type": "different",
          "path": "public.user_card_progress.columns.12.column_default",
          "oldValue": null,
          "newValue": "now()"
        },
        {
          "type": "different",
          "path": "public.user_profiles.columns.1.is_nullable",
          "oldValue": "YES",
          "newValue": "NO"
        },
        {
          "type": "different",
          "path": "public.user_profiles.columns.1.column_default",
          "oldValue": null,
          "newValue": "''::text"
        },
        {
          "type": "different",
          "path": "public.user_profiles.columns.2.column_default",
          "oldValue": null,
          "newValue": "''::text"
        },
        {
          "type": "different",
          "path": "public.user_profiles.columns.3.column_name",
          "oldValue": "user_role",
          "newValue": "email"
        },
        {
          "type": "different",
          "path": "public.user_profiles.columns.3.column_default",
          "oldValue": "'student'::text",
          "newValue": null
        },
        {
          "type": "different",
          "path": "public.user_profiles.columns.4.column_name",
          "oldValue": "created_at",
          "newValue": "user_role"
        },
        {
          "type": "different",
          "path": "public.user_profiles.columns.4.data_type",
          "oldValue": "timestamp with time zone",
          "newValue": "text"
        },
        {
          "type": "different",
          "path": "public.user_profiles.columns.4.is_nullable",
          "oldValue": "YES",
          "newValue": "NO"
        },
        {
          "type": "different",
          "path": "public.user_profiles.columns.4.column_default",
          "oldValue": "now()",
          "newValue": "'student'::text"
        },
        {
          "type": "different",
          "path": "public.user_profiles.columns.5.column_name",
          "oldValue": "updated_at",
          "newValue": "school_id"
        },
        {
          "type": "different",
          "path": "public.user_profiles.columns.5.data_type",
          "oldValue": "timestamp with time zone",
          "newValue": "uuid"
        },
        {
          "type": "different",
          "path": "public.user_profiles.columns.5.column_default",
          "oldValue": "now()",
          "newValue": null
        },
        {
          "type": "different",
          "path": "public.user_profiles.columns.6.column_name",
          "oldValue": "school_id",
          "newValue": "language"
        },
        {
          "type": "different",
          "path": "public.user_profiles.columns.6.data_type",
          "oldValue": "uuid",
          "newValue": "text"
        },
        {
          "type": "different",
          "path": "public.user_profiles.columns.6.column_default",
          "oldValue": null,
          "newValue": "'hu'::text"
        },
        {
          "type": "different",
          "path": "public.user_profiles.columns.7.column_name",
          "oldValue": "phone",
          "newValue": "country"
        },
        {
          "type": "different",
          "path": "public.user_profiles.columns.7.column_default",
          "oldValue": null,
          "newValue": "'HU'::text"
        },
        {
          "type": "different",
          "path": "public.user_profiles.columns.8.column_name",
          "oldValue": "note",
          "newValue": "phone"
        },
        {
          "type": "different",
          "path": "public.user_profiles.columns.9.column_name",
          "oldValue": "email",
          "newValue": "status"
        },
        {
          "type": "different",
          "path": "public.user_profiles.columns.9.column_default",
          "oldValue": null,
          "newValue": "'active'::text"
        },
        {
          "type": "different",
          "path": "public.user_profiles.columns.10.column_name",
          "oldValue": "stored_password",
          "newValue": "note"
        },
        {
          "type": "missing_in_old",
          "path": "public.user_profiles.columns.11",
          "value": {
            "column_name": "is_mock",
            "data_type": "boolean",
            "is_nullable": "YES",
            "column_default": "false",
            "character_maximum_length": null
          }
        },
        {
          "type": "missing_in_old",
          "path": "public.user_profiles.columns.12",
          "value": {
            "column_name": "created_at",
            "data_type": "timestamp with time zone",
            "is_nullable": "YES",
            "column_default": "now()",
            "character_maximum_length": null
          }
        },
        {
          "type": "missing_in_old",
          "path": "public.user_profiles.columns.13",
          "value": {
            "column_name": "updated_at",
            "data_type": "timestamp with time zone",
            "is_nullable": "YES",
            "column_default": "now()",
            "character_maximum_length": null
          }
        },
        {
          "type": "different",
          "path": "public.user_set_progress.columns.0.column_default",
          "oldValue": "gen_random_uuid()",
          "newValue": "uuid_generate_v4()"
        },
        {
          "type": "different",
          "path": "public.user_set_progress.columns.1.is_nullable",
          "oldValue": "YES",
          "newValue": "NO"
        },
        {
          "type": "different",
          "path": "public.user_set_progress.columns.2.is_nullable",
          "oldValue": "YES",
          "newValue": "NO"
        },
        {
          "type": "different",
          "path": "public.user_set_progress.columns.3.column_name",
          "oldValue": "last_studied",
          "newValue": "total_time_spent"
        },
        {
          "type": "different",
          "path": "public.user_set_progress.columns.3.data_type",
          "oldValue": "timestamp with time zone",
          "newValue": "integer"
        },
        {
          "type": "different",
          "path": "public.user_set_progress.columns.3.column_default",
          "oldValue": "now()",
          "newValue": "0"
        },
        {
          "type": "different",
          "path": "public.user_set_progress.columns.4.column_name",
          "oldValue": "created_at",
          "newValue": "last_studied"
        },
        {
          "type": "different",
          "path": "public.user_set_progress.columns.5.column_name",
          "oldValue": "updated_at",
          "newValue": "cards_studied"
        },
        {
          "type": "different",
          "path": "public.user_set_progress.columns.5.data_type",
          "oldValue": "timestamp with time zone",
          "newValue": "integer"
        },
        {
          "type": "different",
          "path": "public.user_set_progress.columns.5.column_default",
          "oldValue": "now()",
          "newValue": "0"
        },
        {
          "type": "different",
          "path": "public.user_set_progress.columns.6.column_name",
          "oldValue": "total_time_spent",
          "newValue": "cards_mastered"
        },
        {
          "type": "missing_in_old",
          "path": "public.user_set_progress.columns.7",
          "value": {
            "column_name": "session_count",
            "data_type": "integer",
            "is_nullable": "YES",
            "column_default": "0",
            "character_maximum_length": null
          }
        },
        {
          "type": "missing_in_old",
          "path": "public.user_set_progress.columns.8",
          "value": {
            "column_name": "is_mock",
            "data_type": "boolean",
            "is_nullable": "YES",
            "column_default": "false",
            "character_maximum_length": null
          }
        },
        {
          "type": "missing_in_old",
          "path": "public.user_set_progress.columns.9",
          "value": {
            "column_name": "created_at",
            "data_type": "timestamp with time zone",
            "is_nullable": "YES",
            "column_default": "now()",
            "character_maximum_length": null
          }
        },
        {
          "type": "missing_in_old",
          "path": "public.user_set_progress.columns.10",
          "value": {
            "column_name": "updated_at",
            "data_type": "timestamp with time zone",
            "is_nullable": "YES",
            "column_default": "now()",
            "character_maximum_length": null
          }
        },
        {
          "type": "different",
          "path": "public.waitlist.hasTriggers",
          "oldValue": false,
          "newValue": true
        },
        {
          "type": "different",
          "path": "public.waitlist.rowCount",
          "oldValue": 1,
          "newValue": 2
        },
        {
          "type": "different",
          "path": "public.waitlist.columns.0.data_type",
          "oldValue": "integer",
          "newValue": "uuid"
        },
        {
          "type": "different",
          "path": "public.waitlist.columns.0.column_default",
          "oldValue": "nextval('waitlist_id_seq'::regclass)",
          "newValue": "uuid_generate_v4()"
        },
        {
          "type": "different",
          "path": "public.waitlist.columns.1.data_type",
          "oldValue": "character varying",
          "newValue": "text"
        },
        {
          "type": "different",
          "path": "public.waitlist.columns.1.character_maximum_length",
          "oldValue": 255,
          "newValue": null
        },
        {
          "type": "different",
          "path": "public.waitlist.columns.2.column_name",
          "oldValue": "created_at",
          "newValue": "first_name"
        },
        {
          "type": "different",
          "path": "public.waitlist.columns.2.data_type",
          "oldValue": "timestamp with time zone",
          "newValue": "text"
        },
        {
          "type": "different",
          "path": "public.waitlist.columns.2.column_default",
          "oldValue": "now()",
          "newValue": null
        },
        {
          "type": "different",
          "path": "public.waitlist.columns.3.column_name",
          "oldValue": "confirmed",
          "newValue": "language"
        },
        {
          "type": "different",
          "path": "public.waitlist.columns.3.data_type",
          "oldValue": "boolean",
          "newValue": "text"
        },
        {
          "type": "different",
          "path": "public.waitlist.columns.3.column_default",
          "oldValue": "false",
          "newValue": "'hu'::text"
        },
        {
          "type": "different",
          "path": "public.waitlist.columns.4.column_name",
          "oldValue": "confirmation_token",
          "newValue": "source"
        },
        {
          "type": "different",
          "path": "public.waitlist.columns.4.data_type",
          "oldValue": "character varying",
          "newValue": "text"
        },
        {
          "type": "different",
          "path": "public.waitlist.columns.4.column_default",
          "oldValue": null,
          "newValue": "'landing_page'::text"
        },
        {
          "type": "different",
          "path": "public.waitlist.columns.4.character_maximum_length",
          "oldValue": 255,
          "newValue": null
        },
        {
          "type": "different",
          "path": "public.waitlist.columns.5.column_name",
          "oldValue": "confirmed_at",
          "newValue": "status"
        },
        {
          "type": "different",
          "path": "public.waitlist.columns.5.data_type",
          "oldValue": "timestamp with time zone",
          "newValue": "text"
        },
        {
          "type": "different",
          "path": "public.waitlist.columns.5.column_default",
          "oldValue": null,
          "newValue": "'pending'::text"
        },
        {
          "type": "missing_in_old",
          "path": "public.waitlist.columns.6",
          "value": {
            "column_name": "invite_sent_at",
            "data_type": "timestamp with time zone",
            "is_nullable": "YES",
            "column_default": null,
            "character_maximum_length": null
          }
        },
        {
          "type": "missing_in_old",
          "path": "public.waitlist.columns.7",
          "value": {
            "column_name": "registered_at",
            "data_type": "timestamp with time zone",
            "is_nullable": "YES",
            "column_default": null,
            "character_maximum_length": null
          }
        },
        {
          "type": "missing_in_old",
          "path": "public.waitlist.columns.8",
          "value": {
            "column_name": "is_mock",
            "data_type": "boolean",
            "is_nullable": "YES",
            "column_default": "false",
            "character_maximum_length": null
          }
        },
        {
          "type": "missing_in_old",
          "path": "public.waitlist.columns.9",
          "value": {
            "column_name": "created_at",
            "data_type": "timestamp with time zone",
            "is_nullable": "YES",
            "column_default": "now()",
            "character_maximum_length": null
          }
        },
        {
          "type": "missing_in_old",
          "path": "public.waitlist.columns.10",
          "value": {
            "column_name": "updated_at",
            "data_type": "timestamp with time zone",
            "is_nullable": "YES",
            "column_default": "now()",
            "character_maximum_length": null
          }
        },
        {
          "type": "different",
          "path": "storage.buckets.rowCount",
          "oldValue": 1,
          "newValue": 0
        },
        {
          "type": "missing_in_old",
          "path": "storage.buckets.columns.10",
          "value": {
            "column_name": "type",
            "data_type": "USER-DEFINED",
            "is_nullable": "NO",
            "column_default": "'STANDARD'::storage.buckettype",
            "character_maximum_length": null
          }
        },
        {
          "type": "different",
          "path": "storage.migrations.rowCount",
          "oldValue": 26,
          "newValue": 39
        },
        {
          "type": "different",
          "path": "storage.objects.rowCount",
          "oldValue": 44,
          "newValue": 0
        },
        {
          "type": "missing_in_old",
          "path": "storage.objects.columns.12",
          "value": {
            "column_name": "level",
            "data_type": "integer",
            "is_nullable": "YES",
            "column_default": null,
            "character_maximum_length": null
          }
        },
        {
          "type": "missing_in_old",
          "path": "public.classroom_details",
          "value": {
            "schema": "public",
            "name": "classroom_details",
            "owner": "postgres",
            "hasIndexes": true,
            "hasRules": false,
            "hasTriggers": true,
            "rowCount": 0,
            "columns": [
              {
                "column_name": "id",
                "data_type": "uuid",
                "is_nullable": "NO",
                "column_default": "uuid_generate_v4()",
                "character_maximum_length": null
              },
              {
                "column_name": "classroom_id",
                "data_type": "uuid",
                "is_nullable": "NO",
                "column_default": null,
                "character_maximum_length": null
              },
              {
                "column_name": "subject",
                "data_type": "text",
                "is_nullable": "YES",
                "column_default": null,
                "character_maximum_length": null
              },
              {
                "column_name": "grade_level",
                "data_type": "text",
                "is_nullable": "YES",
                "column_default": null,
                "character_maximum_length": null
              },
              {
                "column_name": "academic_year",
                "data_type": "text",
                "is_nullable": "YES",
                "column_default": null,
                "character_maximum_length": null
              },
              {
                "column_name": "meeting_schedule",
                "data_type": "text",
                "is_nullable": "YES",
                "column_default": null,
                "character_maximum_length": null
              },
              {
                "column_name": "additional_info",
                "data_type": "jsonb",
                "is_nullable": "YES",
                "column_default": "'{}'::jsonb",
                "character_maximum_length": null
              },
              {
                "column_name": "is_mock",
                "data_type": "boolean",
                "is_nullable": "YES",
                "column_default": "false",
                "character_maximum_length": null
              },
              {
                "column_name": "created_at",
                "data_type": "timestamp with time zone",
                "is_nullable": "YES",
                "column_default": "now()",
                "character_maximum_length": null
              },
              {
                "column_name": "updated_at",
                "data_type": "timestamp with time zone",
                "is_nullable": "YES",
                "column_default": "now()",
                "character_maximum_length": null
              }
            ]
          }
        },
        {
          "type": "missing_in_old",
          "path": "storage.buckets_analytics",
          "value": {
            "schema": "storage",
            "name": "buckets_analytics",
            "owner": "supabase_storage_admin",
            "hasIndexes": true,
            "hasRules": false,
            "hasTriggers": false,
            "rowCount": 0,
            "columns": [
              {
                "column_name": "id",
                "data_type": "text",
                "is_nullable": "NO",
                "column_default": null,
                "character_maximum_length": null
              },
              {
                "column_name": "type",
                "data_type": "USER-DEFINED",
                "is_nullable": "NO",
                "column_default": "'ANALYTICS'::storage.buckettype",
                "character_maximum_length": null
              },
              {
                "column_name": "format",
                "data_type": "text",
                "is_nullable": "NO",
                "column_default": "'ICEBERG'::text",
                "character_maximum_length": null
              },
              {
                "column_name": "created_at",
                "data_type": "timestamp with time zone",
                "is_nullable": "NO",
                "column_default": "now()",
                "character_maximum_length": null
              },
              {
                "column_name": "updated_at",
                "data_type": "timestamp with time zone",
                "is_nullable": "NO",
                "column_default": "now()",
                "character_maximum_length": null
              }
            ]
          }
        },
        {
          "type": "missing_in_old",
          "path": "storage.prefixes",
          "value": {
            "schema": "storage",
            "name": "prefixes",
            "owner": "supabase_storage_admin",
            "hasIndexes": true,
            "hasRules": false,
            "hasTriggers": true,
            "rowCount": 0,
            "columns": [
              {
                "column_name": "bucket_id",
                "data_type": "text",
                "is_nullable": "NO",
                "column_default": null,
                "character_maximum_length": null
              },
              {
                "column_name": "name",
                "data_type": "text",
                "is_nullable": "NO",
                "column_default": null,
                "character_maximum_length": null
              },
              {
                "column_name": "level",
                "data_type": "integer",
                "is_nullable": "NO",
                "column_default": null,
                "character_maximum_length": null
              },
              {
                "column_name": "created_at",
                "data_type": "timestamp with time zone",
                "is_nullable": "YES",
                "column_default": "now()",
                "character_maximum_length": null
              },
              {
                "column_name": "updated_at",
                "data_type": "timestamp with time zone",
                "is_nullable": "YES",
                "column_default": "now()",
                "character_maximum_length": null
              }
            ]
          }
        }
      ]
    },
    "functions": {
      "old": [
        {
          "schema_name": "auth",
          "function_name": "email",
          "return_type": "text",
          "arguments": "",
          "definition": "CREATE OR REPLACE FUNCTION auth.email()\n RETURNS text\n LANGUAGE sql\n STABLE\nAS $function$\n  select \n  coalesce(\n    nullif(current_setting('request.jwt.claim.email', true), ''),\n    (nullif(current_setting('request.jwt.claims', true), '')::jsonb ->> 'email')\n  )::text\n$function$\n",
          "language": "sql"
        },
        {
          "schema_name": "auth",
          "function_name": "jwt",
          "return_type": "jsonb",
          "arguments": "",
          "definition": "CREATE OR REPLACE FUNCTION auth.jwt()\n RETURNS jsonb\n LANGUAGE sql\n STABLE\nAS $function$\n  select \n    coalesce(\n        nullif(current_setting('request.jwt.claim', true), ''),\n        nullif(current_setting('request.jwt.claims', true), '')\n    )::jsonb\n$function$\n",
          "language": "sql"
        },
        {
          "schema_name": "auth",
          "function_name": "role",
          "return_type": "text",
          "arguments": "",
          "definition": "CREATE OR REPLACE FUNCTION auth.role()\n RETURNS text\n LANGUAGE sql\n STABLE\nAS $function$\n  select \n  coalesce(\n    nullif(current_setting('request.jwt.claim.role', true), ''),\n    (nullif(current_setting('request.jwt.claims', true), '')::jsonb ->> 'role')\n  )::text\n$function$\n",
          "language": "sql"
        },
        {
          "schema_name": "auth",
          "function_name": "uid",
          "return_type": "uuid",
          "arguments": "",
          "definition": "CREATE OR REPLACE FUNCTION auth.uid()\n RETURNS uuid\n LANGUAGE sql\n STABLE\nAS $function$\n  select \n  coalesce(\n    nullif(current_setting('request.jwt.claim.sub', true), ''),\n    (nullif(current_setting('request.jwt.claims', true), '')::jsonb ->> 'sub')\n  )::uuid\n$function$\n",
          "language": "sql"
        },
        {
          "schema_name": "public",
          "function_name": "create_classroom",
          "return_type": "TABLE(classroom_id uuid, invite_code text)",
          "arguments": "classroom_name text, description text DEFAULT NULL::text",
          "definition": "CREATE OR REPLACE FUNCTION public.create_classroom(classroom_name text, description text DEFAULT NULL::text)\n RETURNS TABLE(classroom_id uuid, invite_code text)\n LANGUAGE plpgsql\n SECURITY DEFINER\nAS $function$\nDECLARE\n    new_classroom_id UUID;\n    new_invite_code TEXT;\n    attempts INTEGER := 0;\n    teacher_role TEXT;\nBEGIN\n    -- Check if user is teacher\n    SELECT up.user_role INTO teacher_role \n    FROM public.user_profiles up \n    WHERE up.id = auth.uid();\n    \n    IF teacher_role != 'teacher' THEN\n        RAISE EXCEPTION 'Only teachers can create classrooms';\n    END IF;\n    \n    -- Generate unique invite code (max 10 attempts)\n    LOOP\n        new_invite_code := generate_invite_code();\n        attempts := attempts + 1;\n        \n        -- Check if code is unique\n        IF NOT EXISTS (SELECT 1 FROM public.classrooms WHERE classrooms.invite_code = new_invite_code) THEN\n            EXIT;\n        END IF;\n        \n        IF attempts >= 10 THEN\n            RAISE EXCEPTION 'Could not generate unique invite code';\n        END IF;\n    END LOOP;\n    \n    -- Create classroom\n    INSERT INTO public.classrooms (name, description, teacher_id, invite_code)\n    VALUES (classroom_name, description, auth.uid(), new_invite_code)\n    RETURNING id INTO new_classroom_id;\n    \n    RETURN QUERY SELECT new_classroom_id, new_invite_code;\nEND;\n$function$\n",
          "language": "plpgsql"
        },
        {
          "schema_name": "public",
          "function_name": "generate_invite_code",
          "return_type": "text",
          "arguments": "length integer DEFAULT 6",
          "definition": "CREATE OR REPLACE FUNCTION public.generate_invite_code(length integer DEFAULT 6)\n RETURNS text\n LANGUAGE plpgsql\nAS $function$\nDECLARE\n    chars TEXT := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n    result TEXT := '';\n    i INTEGER;\nBEGIN\n    FOR i IN 1..length LOOP\n        result := result || substr(chars, floor(random() * length(chars) + 1)::INTEGER, 1);\n    END LOOP;\n    RETURN result;\nEND;\n$function$\n",
          "language": "plpgsql"
        },
        {
          "schema_name": "public",
          "function_name": "handle_new_user",
          "return_type": "trigger",
          "arguments": "",
          "definition": "CREATE OR REPLACE FUNCTION public.handle_new_user()\n RETURNS trigger\n LANGUAGE plpgsql\n SECURITY DEFINER\nAS $function$\nBEGIN\n    INSERT INTO public.user_profiles (id, first_name, user_role)\n    VALUES (\n        NEW.id, \n        COALESCE(NEW.raw_user_meta_data->>'first_name', ''), \n        COALESCE(NEW.raw_user_meta_data->>'user_role', 'student')\n    );\n    RETURN NEW;\nEND;\n$function$\n",
          "language": "plpgsql"
        },
        {
          "schema_name": "public",
          "function_name": "join_classroom_with_code",
          "return_type": "TABLE(success boolean, message text, classroom_name text)",
          "arguments": "code text",
          "definition": "CREATE OR REPLACE FUNCTION public.join_classroom_with_code(code text)\n RETURNS TABLE(success boolean, message text, classroom_name text)\n LANGUAGE plpgsql\n SECURITY DEFINER\nAS $function$\nDECLARE\n    target_classroom_id UUID;\n    target_classroom_name TEXT;\n    student_role TEXT;\nBEGIN\n    -- Check if user is student\n    SELECT up.user_role INTO student_role \n    FROM public.user_profiles up \n    WHERE up.id = auth.uid();\n    \n    IF student_role != 'student' THEN\n        RETURN QUERY SELECT false, 'Only students can join classrooms', NULL::TEXT;\n        RETURN;\n    END IF;\n    \n    -- Find classroom by invite code\n    SELECT c.id, c.name INTO target_classroom_id, target_classroom_name\n    FROM public.classrooms c\n    WHERE c.invite_code = code AND c.is_active = true;\n    \n    IF target_classroom_id IS NULL THEN\n        RETURN QUERY SELECT false, 'Invalid or expired invite code', NULL::TEXT;\n        RETURN;\n    END IF;\n    \n    -- Check if already a member\n    IF EXISTS (\n        SELECT 1 FROM public.classroom_members cm \n        WHERE cm.classroom_id = target_classroom_id \n        AND cm.student_id = auth.uid() \n        AND cm.is_active = true\n    ) THEN\n        RETURN QUERY SELECT false, 'Already a member of this classroom', target_classroom_name;\n        RETURN;\n    END IF;\n    \n    -- Join classroom\n    INSERT INTO public.classroom_members (classroom_id, student_id)\n    VALUES (target_classroom_id, auth.uid())\n    ON CONFLICT (classroom_id, student_id) \n    DO UPDATE SET is_active = true, joined_at = NOW();\n    \n    RETURN QUERY SELECT true, 'Successfully joined classroom', target_classroom_name;\nEND;\n$function$\n",
          "language": "plpgsql"
        },
        {
          "schema_name": "public",
          "function_name": "update_updated_at_column",
          "return_type": "trigger",
          "arguments": "",
          "definition": "CREATE OR REPLACE FUNCTION public.update_updated_at_column()\n RETURNS trigger\n LANGUAGE plpgsql\nAS $function$\nBEGIN\n    NEW.updated_at = NOW();\n    RETURN NEW;\nEND;\n$function$\n",
          "language": "plpgsql"
        },
        {
          "schema_name": "storage",
          "function_name": "can_insert_object",
          "return_type": "void",
          "arguments": "bucketid text, name text, owner uuid, metadata jsonb",
          "definition": "CREATE OR REPLACE FUNCTION storage.can_insert_object(bucketid text, name text, owner uuid, metadata jsonb)\n RETURNS void\n LANGUAGE plpgsql\nAS $function$\nBEGIN\n  INSERT INTO \"storage\".\"objects\" (\"bucket_id\", \"name\", \"owner\", \"metadata\") VALUES (bucketid, name, owner, metadata);\n  -- hack to rollback the successful insert\n  RAISE sqlstate 'PT200' using\n  message = 'ROLLBACK',\n  detail = 'rollback successful insert';\nEND\n$function$\n",
          "language": "plpgsql"
        },
        {
          "schema_name": "storage",
          "function_name": "extension",
          "return_type": "text",
          "arguments": "name text",
          "definition": "CREATE OR REPLACE FUNCTION storage.extension(name text)\n RETURNS text\n LANGUAGE plpgsql\nAS $function$\nDECLARE\n_parts text[];\n_filename text;\nBEGIN\n\tselect string_to_array(name, '/') into _parts;\n\tselect _parts[array_length(_parts,1)] into _filename;\n\t-- @todo return the last part instead of 2\n\treturn reverse(split_part(reverse(_filename), '.', 1));\nEND\n$function$\n",
          "language": "plpgsql"
        },
        {
          "schema_name": "storage",
          "function_name": "filename",
          "return_type": "text",
          "arguments": "name text",
          "definition": "CREATE OR REPLACE FUNCTION storage.filename(name text)\n RETURNS text\n LANGUAGE plpgsql\nAS $function$\nDECLARE\n_parts text[];\nBEGIN\n\tselect string_to_array(name, '/') into _parts;\n\treturn _parts[array_length(_parts,1)];\nEND\n$function$\n",
          "language": "plpgsql"
        },
        {
          "schema_name": "storage",
          "function_name": "foldername",
          "return_type": "text[]",
          "arguments": "name text",
          "definition": "CREATE OR REPLACE FUNCTION storage.foldername(name text)\n RETURNS text[]\n LANGUAGE plpgsql\nAS $function$\nDECLARE\n_parts text[];\nBEGIN\n\tselect string_to_array(name, '/') into _parts;\n\treturn _parts[1:array_length(_parts,1)-1];\nEND\n$function$\n",
          "language": "plpgsql"
        },
        {
          "schema_name": "storage",
          "function_name": "get_size_by_bucket",
          "return_type": "TABLE(size bigint, bucket_id text)",
          "arguments": "",
          "definition": "CREATE OR REPLACE FUNCTION storage.get_size_by_bucket()\n RETURNS TABLE(size bigint, bucket_id text)\n LANGUAGE plpgsql\nAS $function$\nBEGIN\n    return query\n        select sum((metadata->>'size')::int) as size, obj.bucket_id\n        from \"storage\".objects as obj\n        group by obj.bucket_id;\nEND\n$function$\n",
          "language": "plpgsql"
        },
        {
          "schema_name": "storage",
          "function_name": "list_multipart_uploads_with_delimiter",
          "return_type": "TABLE(key text, id text, created_at timestamp with time zone)",
          "arguments": "bucket_id text, prefix_param text, delimiter_param text, max_keys integer DEFAULT 100, next_key_token text DEFAULT ''::text, next_upload_token text DEFAULT ''::text",
          "definition": "CREATE OR REPLACE FUNCTION storage.list_multipart_uploads_with_delimiter(bucket_id text, prefix_param text, delimiter_param text, max_keys integer DEFAULT 100, next_key_token text DEFAULT ''::text, next_upload_token text DEFAULT ''::text)\n RETURNS TABLE(key text, id text, created_at timestamp with time zone)\n LANGUAGE plpgsql\nAS $function$\nBEGIN\n    RETURN QUERY EXECUTE\n        'SELECT DISTINCT ON(key COLLATE \"C\") * from (\n            SELECT\n                CASE\n                    WHEN position($2 IN substring(key from length($1) + 1)) > 0 THEN\n                        substring(key from 1 for length($1) + position($2 IN substring(key from length($1) + 1)))\n                    ELSE\n                        key\n                END AS key, id, created_at\n            FROM\n                storage.s3_multipart_uploads\n            WHERE\n                bucket_id = $5 AND\n                key ILIKE $1 || ''%'' AND\n                CASE\n                    WHEN $4 != '''' AND $6 = '''' THEN\n                        CASE\n                            WHEN position($2 IN substring(key from length($1) + 1)) > 0 THEN\n                                substring(key from 1 for length($1) + position($2 IN substring(key from length($1) + 1))) COLLATE \"C\" > $4\n                            ELSE\n                                key COLLATE \"C\" > $4\n                            END\n                    ELSE\n                        true\n                END AND\n                CASE\n                    WHEN $6 != '''' THEN\n                        id COLLATE \"C\" > $6\n                    ELSE\n                        true\n                    END\n            ORDER BY\n                key COLLATE \"C\" ASC, created_at ASC) as e order by key COLLATE \"C\" LIMIT $3'\n        USING prefix_param, delimiter_param, max_keys, next_key_token, bucket_id, next_upload_token;\nEND;\n$function$\n",
          "language": "plpgsql"
        },
        {
          "schema_name": "storage",
          "function_name": "list_objects_with_delimiter",
          "return_type": "TABLE(name text, id uuid, metadata jsonb, updated_at timestamp with time zone)",
          "arguments": "bucket_id text, prefix_param text, delimiter_param text, max_keys integer DEFAULT 100, start_after text DEFAULT ''::text, next_token text DEFAULT ''::text",
          "definition": "CREATE OR REPLACE FUNCTION storage.list_objects_with_delimiter(bucket_id text, prefix_param text, delimiter_param text, max_keys integer DEFAULT 100, start_after text DEFAULT ''::text, next_token text DEFAULT ''::text)\n RETURNS TABLE(name text, id uuid, metadata jsonb, updated_at timestamp with time zone)\n LANGUAGE plpgsql\nAS $function$\nBEGIN\n    RETURN QUERY EXECUTE\n        'SELECT DISTINCT ON(name COLLATE \"C\") * from (\n            SELECT\n                CASE\n                    WHEN position($2 IN substring(name from length($1) + 1)) > 0 THEN\n                        substring(name from 1 for length($1) + position($2 IN substring(name from length($1) + 1)))\n                    ELSE\n                        name\n                END AS name, id, metadata, updated_at\n            FROM\n                storage.objects\n            WHERE\n                bucket_id = $5 AND\n                name ILIKE $1 || ''%'' AND\n                CASE\n                    WHEN $6 != '''' THEN\n                    name COLLATE \"C\" > $6\n                ELSE true END\n                AND CASE\n                    WHEN $4 != '''' THEN\n                        CASE\n                            WHEN position($2 IN substring(name from length($1) + 1)) > 0 THEN\n                                substring(name from 1 for length($1) + position($2 IN substring(name from length($1) + 1))) COLLATE \"C\" > $4\n                            ELSE\n                                name COLLATE \"C\" > $4\n                            END\n                    ELSE\n                        true\n                END\n            ORDER BY\n                name COLLATE \"C\" ASC) as e order by name COLLATE \"C\" LIMIT $3'\n        USING prefix_param, delimiter_param, max_keys, next_token, bucket_id, start_after;\nEND;\n$function$\n",
          "language": "plpgsql"
        },
        {
          "schema_name": "storage",
          "function_name": "operation",
          "return_type": "text",
          "arguments": "",
          "definition": "CREATE OR REPLACE FUNCTION storage.operation()\n RETURNS text\n LANGUAGE plpgsql\n STABLE\nAS $function$\nBEGIN\n    RETURN current_setting('storage.operation', true);\nEND;\n$function$\n",
          "language": "plpgsql"
        },
        {
          "schema_name": "storage",
          "function_name": "search",
          "return_type": "TABLE(name text, id uuid, updated_at timestamp with time zone, created_at timestamp with time zone, last_accessed_at timestamp with time zone, metadata jsonb)",
          "arguments": "prefix text, bucketname text, limits integer DEFAULT 100, levels integer DEFAULT 1, offsets integer DEFAULT 0, search text DEFAULT ''::text, sortcolumn text DEFAULT 'name'::text, sortorder text DEFAULT 'asc'::text",
          "definition": "CREATE OR REPLACE FUNCTION storage.search(prefix text, bucketname text, limits integer DEFAULT 100, levels integer DEFAULT 1, offsets integer DEFAULT 0, search text DEFAULT ''::text, sortcolumn text DEFAULT 'name'::text, sortorder text DEFAULT 'asc'::text)\n RETURNS TABLE(name text, id uuid, updated_at timestamp with time zone, created_at timestamp with time zone, last_accessed_at timestamp with time zone, metadata jsonb)\n LANGUAGE plpgsql\n STABLE\nAS $function$\ndeclare\n  v_order_by text;\n  v_sort_order text;\nbegin\n  case\n    when sortcolumn = 'name' then\n      v_order_by = 'name';\n    when sortcolumn = 'updated_at' then\n      v_order_by = 'updated_at';\n    when sortcolumn = 'created_at' then\n      v_order_by = 'created_at';\n    when sortcolumn = 'last_accessed_at' then\n      v_order_by = 'last_accessed_at';\n    else\n      v_order_by = 'name';\n  end case;\n\n  case\n    when sortorder = 'asc' then\n      v_sort_order = 'asc';\n    when sortorder = 'desc' then\n      v_sort_order = 'desc';\n    else\n      v_sort_order = 'asc';\n  end case;\n\n  v_order_by = v_order_by || ' ' || v_sort_order;\n\n  return query execute\n    'with folders as (\n       select path_tokens[$1] as folder\n       from storage.objects\n         where objects.name ilike $2 || $3 || ''%''\n           and bucket_id = $4\n           and array_length(objects.path_tokens, 1) <> $1\n       group by folder\n       order by folder ' || v_sort_order || '\n     )\n     (select folder as \"name\",\n            null as id,\n            null as updated_at,\n            null as created_at,\n            null as last_accessed_at,\n            null as metadata from folders)\n     union all\n     (select path_tokens[$1] as \"name\",\n            id,\n            updated_at,\n            created_at,\n            last_accessed_at,\n            metadata\n     from storage.objects\n     where objects.name ilike $2 || $3 || ''%''\n       and bucket_id = $4\n       and array_length(objects.path_tokens, 1) = $1\n     order by ' || v_order_by || ')\n     limit $5\n     offset $6' using levels, prefix, search, bucketname, limits, offsets;\nend;\n$function$\n",
          "language": "plpgsql"
        },
        {
          "schema_name": "storage",
          "function_name": "update_updated_at_column",
          "return_type": "trigger",
          "arguments": "",
          "definition": "CREATE OR REPLACE FUNCTION storage.update_updated_at_column()\n RETURNS trigger\n LANGUAGE plpgsql\nAS $function$\nBEGIN\n    NEW.updated_at = now();\n    RETURN NEW; \nEND;\n$function$\n",
          "language": "plpgsql"
        }
      ],
      "new": [
        {
          "schema_name": "auth",
          "function_name": "email",
          "return_type": "text",
          "arguments": "",
          "definition": "CREATE OR REPLACE FUNCTION auth.email()\n RETURNS text\n LANGUAGE sql\n STABLE\nAS $function$\n  select \n  coalesce(\n    nullif(current_setting('request.jwt.claim.email', true), ''),\n    (nullif(current_setting('request.jwt.claims', true), '')::jsonb ->> 'email')\n  )::text\n$function$\n",
          "language": "sql"
        },
        {
          "schema_name": "auth",
          "function_name": "jwt",
          "return_type": "jsonb",
          "arguments": "",
          "definition": "CREATE OR REPLACE FUNCTION auth.jwt()\n RETURNS jsonb\n LANGUAGE sql\n STABLE\nAS $function$\n  select \n    coalesce(\n        nullif(current_setting('request.jwt.claim', true), ''),\n        nullif(current_setting('request.jwt.claims', true), '')\n    )::jsonb\n$function$\n",
          "language": "sql"
        },
        {
          "schema_name": "auth",
          "function_name": "role",
          "return_type": "text",
          "arguments": "",
          "definition": "CREATE OR REPLACE FUNCTION auth.role()\n RETURNS text\n LANGUAGE sql\n STABLE\nAS $function$\n  select \n  coalesce(\n    nullif(current_setting('request.jwt.claim.role', true), ''),\n    (nullif(current_setting('request.jwt.claims', true), '')::jsonb ->> 'role')\n  )::text\n$function$\n",
          "language": "sql"
        },
        {
          "schema_name": "auth",
          "function_name": "uid",
          "return_type": "uuid",
          "arguments": "",
          "definition": "CREATE OR REPLACE FUNCTION auth.uid()\n RETURNS uuid\n LANGUAGE sql\n STABLE\nAS $function$\n  select \n  coalesce(\n    nullif(current_setting('request.jwt.claim.sub', true), ''),\n    (nullif(current_setting('request.jwt.claims', true), '')::jsonb ->> 'sub')\n  )::uuid\n$function$\n",
          "language": "sql"
        },
        {
          "schema_name": "public",
          "function_name": "create_user_profile",
          "return_type": "trigger",
          "arguments": "",
          "definition": "CREATE OR REPLACE FUNCTION public.create_user_profile()\n RETURNS trigger\n LANGUAGE plpgsql\n SECURITY DEFINER\nAS $function$\n  BEGIN\n      INSERT INTO user_profiles (id, email, first_name, last_name, user_role, language, country)\n      VALUES (\n          NEW.id,\n          NEW.email,\n          COALESCE(NEW.raw_user_meta_data->>'first_name', ''),\n          COALESCE(NEW.raw_user_meta_data->>'last_name', ''),\n          COALESCE(NEW.raw_user_meta_data->>'user_role', 'student'),\n          COALESCE(NEW.raw_user_meta_data->>'language', 'hu'),\n          COALESCE(NEW.raw_user_meta_data->>'country', 'HU')\n      );\n      RETURN NEW;\n  END;\n  $function$\n",
          "language": "plpgsql"
        },
        {
          "schema_name": "public",
          "function_name": "update_updated_at_column",
          "return_type": "trigger",
          "arguments": "",
          "definition": "CREATE OR REPLACE FUNCTION public.update_updated_at_column()\n RETURNS trigger\n LANGUAGE plpgsql\nAS $function$\nBEGIN\n    NEW.updated_at = NOW();\n    RETURN NEW;\nEND;\n$function$\n",
          "language": "plpgsql"
        },
        {
          "schema_name": "storage",
          "function_name": "add_prefixes",
          "return_type": "void",
          "arguments": "_bucket_id text, _name text",
          "definition": "CREATE OR REPLACE FUNCTION storage.add_prefixes(_bucket_id text, _name text)\n RETURNS void\n LANGUAGE plpgsql\n SECURITY DEFINER\nAS $function$\nDECLARE\n    prefixes text[];\nBEGIN\n    prefixes := \"storage\".\"get_prefixes\"(\"_name\");\n\n    IF array_length(prefixes, 1) > 0 THEN\n        INSERT INTO storage.prefixes (name, bucket_id)\n        SELECT UNNEST(prefixes) as name, \"_bucket_id\" ON CONFLICT DO NOTHING;\n    END IF;\nEND;\n$function$\n",
          "language": "plpgsql"
        },
        {
          "schema_name": "storage",
          "function_name": "can_insert_object",
          "return_type": "void",
          "arguments": "bucketid text, name text, owner uuid, metadata jsonb",
          "definition": "CREATE OR REPLACE FUNCTION storage.can_insert_object(bucketid text, name text, owner uuid, metadata jsonb)\n RETURNS void\n LANGUAGE plpgsql\nAS $function$\nBEGIN\n  INSERT INTO \"storage\".\"objects\" (\"bucket_id\", \"name\", \"owner\", \"metadata\") VALUES (bucketid, name, owner, metadata);\n  -- hack to rollback the successful insert\n  RAISE sqlstate 'PT200' using\n  message = 'ROLLBACK',\n  detail = 'rollback successful insert';\nEND\n$function$\n",
          "language": "plpgsql"
        },
        {
          "schema_name": "storage",
          "function_name": "delete_prefix",
          "return_type": "boolean",
          "arguments": "_bucket_id text, _name text",
          "definition": "CREATE OR REPLACE FUNCTION storage.delete_prefix(_bucket_id text, _name text)\n RETURNS boolean\n LANGUAGE plpgsql\n SECURITY DEFINER\nAS $function$\nBEGIN\n    -- Check if we can delete the prefix\n    IF EXISTS(\n        SELECT FROM \"storage\".\"prefixes\"\n        WHERE \"prefixes\".\"bucket_id\" = \"_bucket_id\"\n          AND level = \"storage\".\"get_level\"(\"_name\") + 1\n          AND \"prefixes\".\"name\" COLLATE \"C\" LIKE \"_name\" || '/%'\n        LIMIT 1\n    )\n    OR EXISTS(\n        SELECT FROM \"storage\".\"objects\"\n        WHERE \"objects\".\"bucket_id\" = \"_bucket_id\"\n          AND \"storage\".\"get_level\"(\"objects\".\"name\") = \"storage\".\"get_level\"(\"_name\") + 1\n          AND \"objects\".\"name\" COLLATE \"C\" LIKE \"_name\" || '/%'\n        LIMIT 1\n    ) THEN\n    -- There are sub-objects, skip deletion\n    RETURN false;\n    ELSE\n        DELETE FROM \"storage\".\"prefixes\"\n        WHERE \"prefixes\".\"bucket_id\" = \"_bucket_id\"\n          AND level = \"storage\".\"get_level\"(\"_name\")\n          AND \"prefixes\".\"name\" = \"_name\";\n        RETURN true;\n    END IF;\nEND;\n$function$\n",
          "language": "plpgsql"
        },
        {
          "schema_name": "storage",
          "function_name": "delete_prefix_hierarchy_trigger",
          "return_type": "trigger",
          "arguments": "",
          "definition": "CREATE OR REPLACE FUNCTION storage.delete_prefix_hierarchy_trigger()\n RETURNS trigger\n LANGUAGE plpgsql\nAS $function$\nDECLARE\n    prefix text;\nBEGIN\n    prefix := \"storage\".\"get_prefix\"(OLD.\"name\");\n\n    IF coalesce(prefix, '') != '' THEN\n        PERFORM \"storage\".\"delete_prefix\"(OLD.\"bucket_id\", prefix);\n    END IF;\n\n    RETURN OLD;\nEND;\n$function$\n",
          "language": "plpgsql"
        },
        {
          "schema_name": "storage",
          "function_name": "enforce_bucket_name_length",
          "return_type": "trigger",
          "arguments": "",
          "definition": "CREATE OR REPLACE FUNCTION storage.enforce_bucket_name_length()\n RETURNS trigger\n LANGUAGE plpgsql\nAS $function$\nbegin\n    if length(new.name) > 100 then\n        raise exception 'bucket name \"%\" is too long (% characters). Max is 100.', new.name, length(new.name);\n    end if;\n    return new;\nend;\n$function$\n",
          "language": "plpgsql"
        },
        {
          "schema_name": "storage",
          "function_name": "extension",
          "return_type": "text",
          "arguments": "name text",
          "definition": "CREATE OR REPLACE FUNCTION storage.extension(name text)\n RETURNS text\n LANGUAGE plpgsql\n IMMUTABLE\nAS $function$\nDECLARE\n    _parts text[];\n    _filename text;\nBEGIN\n    SELECT string_to_array(name, '/') INTO _parts;\n    SELECT _parts[array_length(_parts,1)] INTO _filename;\n    RETURN reverse(split_part(reverse(_filename), '.', 1));\nEND\n$function$\n",
          "language": "plpgsql"
        },
        {
          "schema_name": "storage",
          "function_name": "filename",
          "return_type": "text",
          "arguments": "name text",
          "definition": "CREATE OR REPLACE FUNCTION storage.filename(name text)\n RETURNS text\n LANGUAGE plpgsql\nAS $function$\nDECLARE\n_parts text[];\nBEGIN\n\tselect string_to_array(name, '/') into _parts;\n\treturn _parts[array_length(_parts,1)];\nEND\n$function$\n",
          "language": "plpgsql"
        },
        {
          "schema_name": "storage",
          "function_name": "foldername",
          "return_type": "text[]",
          "arguments": "name text",
          "definition": "CREATE OR REPLACE FUNCTION storage.foldername(name text)\n RETURNS text[]\n LANGUAGE plpgsql\n IMMUTABLE\nAS $function$\nDECLARE\n    _parts text[];\nBEGIN\n    -- Split on \"/\" to get path segments\n    SELECT string_to_array(name, '/') INTO _parts;\n    -- Return everything except the last segment\n    RETURN _parts[1 : array_length(_parts,1) - 1];\nEND\n$function$\n",
          "language": "plpgsql"
        },
        {
          "schema_name": "storage",
          "function_name": "get_level",
          "return_type": "integer",
          "arguments": "name text",
          "definition": "CREATE OR REPLACE FUNCTION storage.get_level(name text)\n RETURNS integer\n LANGUAGE sql\n IMMUTABLE STRICT\nAS $function$\nSELECT array_length(string_to_array(\"name\", '/'), 1);\n$function$\n",
          "language": "sql"
        },
        {
          "schema_name": "storage",
          "function_name": "get_prefix",
          "return_type": "text",
          "arguments": "name text",
          "definition": "CREATE OR REPLACE FUNCTION storage.get_prefix(name text)\n RETURNS text\n LANGUAGE sql\n IMMUTABLE STRICT\nAS $function$\nSELECT\n    CASE WHEN strpos(\"name\", '/') > 0 THEN\n             regexp_replace(\"name\", '[\\/]{1}[^\\/]+\\/?$', '')\n         ELSE\n             ''\n        END;\n$function$\n",
          "language": "sql"
        },
        {
          "schema_name": "storage",
          "function_name": "get_prefixes",
          "return_type": "text[]",
          "arguments": "name text",
          "definition": "CREATE OR REPLACE FUNCTION storage.get_prefixes(name text)\n RETURNS text[]\n LANGUAGE plpgsql\n IMMUTABLE STRICT\nAS $function$\nDECLARE\n    parts text[];\n    prefixes text[];\n    prefix text;\nBEGIN\n    -- Split the name into parts by '/'\n    parts := string_to_array(\"name\", '/');\n    prefixes := '{}';\n\n    -- Construct the prefixes, stopping one level below the last part\n    FOR i IN 1..array_length(parts, 1) - 1 LOOP\n            prefix := array_to_string(parts[1:i], '/');\n            prefixes := array_append(prefixes, prefix);\n    END LOOP;\n\n    RETURN prefixes;\nEND;\n$function$\n",
          "language": "plpgsql"
        },
        {
          "schema_name": "storage",
          "function_name": "get_size_by_bucket",
          "return_type": "TABLE(size bigint, bucket_id text)",
          "arguments": "",
          "definition": "CREATE OR REPLACE FUNCTION storage.get_size_by_bucket()\n RETURNS TABLE(size bigint, bucket_id text)\n LANGUAGE plpgsql\n STABLE\nAS $function$\nBEGIN\n    return query\n        select sum((metadata->>'size')::bigint) as size, obj.bucket_id\n        from \"storage\".objects as obj\n        group by obj.bucket_id;\nEND\n$function$\n",
          "language": "plpgsql"
        },
        {
          "schema_name": "storage",
          "function_name": "list_multipart_uploads_with_delimiter",
          "return_type": "TABLE(key text, id text, created_at timestamp with time zone)",
          "arguments": "bucket_id text, prefix_param text, delimiter_param text, max_keys integer DEFAULT 100, next_key_token text DEFAULT ''::text, next_upload_token text DEFAULT ''::text",
          "definition": "CREATE OR REPLACE FUNCTION storage.list_multipart_uploads_with_delimiter(bucket_id text, prefix_param text, delimiter_param text, max_keys integer DEFAULT 100, next_key_token text DEFAULT ''::text, next_upload_token text DEFAULT ''::text)\n RETURNS TABLE(key text, id text, created_at timestamp with time zone)\n LANGUAGE plpgsql\nAS $function$\nBEGIN\n    RETURN QUERY EXECUTE\n        'SELECT DISTINCT ON(key COLLATE \"C\") * from (\n            SELECT\n                CASE\n                    WHEN position($2 IN substring(key from length($1) + 1)) > 0 THEN\n                        substring(key from 1 for length($1) + position($2 IN substring(key from length($1) + 1)))\n                    ELSE\n                        key\n                END AS key, id, created_at\n            FROM\n                storage.s3_multipart_uploads\n            WHERE\n                bucket_id = $5 AND\n                key ILIKE $1 || ''%'' AND\n                CASE\n                    WHEN $4 != '''' AND $6 = '''' THEN\n                        CASE\n                            WHEN position($2 IN substring(key from length($1) + 1)) > 0 THEN\n                                substring(key from 1 for length($1) + position($2 IN substring(key from length($1) + 1))) COLLATE \"C\" > $4\n                            ELSE\n                                key COLLATE \"C\" > $4\n                            END\n                    ELSE\n                        true\n                END AND\n                CASE\n                    WHEN $6 != '''' THEN\n                        id COLLATE \"C\" > $6\n                    ELSE\n                        true\n                    END\n            ORDER BY\n                key COLLATE \"C\" ASC, created_at ASC) as e order by key COLLATE \"C\" LIMIT $3'\n        USING prefix_param, delimiter_param, max_keys, next_key_token, bucket_id, next_upload_token;\nEND;\n$function$\n",
          "language": "plpgsql"
        },
        {
          "schema_name": "storage",
          "function_name": "list_objects_with_delimiter",
          "return_type": "TABLE(name text, id uuid, metadata jsonb, updated_at timestamp with time zone)",
          "arguments": "bucket_id text, prefix_param text, delimiter_param text, max_keys integer DEFAULT 100, start_after text DEFAULT ''::text, next_token text DEFAULT ''::text",
          "definition": "CREATE OR REPLACE FUNCTION storage.list_objects_with_delimiter(bucket_id text, prefix_param text, delimiter_param text, max_keys integer DEFAULT 100, start_after text DEFAULT ''::text, next_token text DEFAULT ''::text)\n RETURNS TABLE(name text, id uuid, metadata jsonb, updated_at timestamp with time zone)\n LANGUAGE plpgsql\nAS $function$\nBEGIN\n    RETURN QUERY EXECUTE\n        'SELECT DISTINCT ON(name COLLATE \"C\") * from (\n            SELECT\n                CASE\n                    WHEN position($2 IN substring(name from length($1) + 1)) > 0 THEN\n                        substring(name from 1 for length($1) + position($2 IN substring(name from length($1) + 1)))\n                    ELSE\n                        name\n                END AS name, id, metadata, updated_at\n            FROM\n                storage.objects\n            WHERE\n                bucket_id = $5 AND\n                name ILIKE $1 || ''%'' AND\n                CASE\n                    WHEN $6 != '''' THEN\n                    name COLLATE \"C\" > $6\n                ELSE true END\n                AND CASE\n                    WHEN $4 != '''' THEN\n                        CASE\n                            WHEN position($2 IN substring(name from length($1) + 1)) > 0 THEN\n                                substring(name from 1 for length($1) + position($2 IN substring(name from length($1) + 1))) COLLATE \"C\" > $4\n                            ELSE\n                                name COLLATE \"C\" > $4\n                            END\n                    ELSE\n                        true\n                END\n            ORDER BY\n                name COLLATE \"C\" ASC) as e order by name COLLATE \"C\" LIMIT $3'\n        USING prefix_param, delimiter_param, max_keys, next_token, bucket_id, start_after;\nEND;\n$function$\n",
          "language": "plpgsql"
        },
        {
          "schema_name": "storage",
          "function_name": "objects_insert_prefix_trigger",
          "return_type": "trigger",
          "arguments": "",
          "definition": "CREATE OR REPLACE FUNCTION storage.objects_insert_prefix_trigger()\n RETURNS trigger\n LANGUAGE plpgsql\nAS $function$\nBEGIN\n    PERFORM \"storage\".\"add_prefixes\"(NEW.\"bucket_id\", NEW.\"name\");\n    NEW.level := \"storage\".\"get_level\"(NEW.\"name\");\n\n    RETURN NEW;\nEND;\n$function$\n",
          "language": "plpgsql"
        },
        {
          "schema_name": "storage",
          "function_name": "objects_update_prefix_trigger",
          "return_type": "trigger",
          "arguments": "",
          "definition": "CREATE OR REPLACE FUNCTION storage.objects_update_prefix_trigger()\n RETURNS trigger\n LANGUAGE plpgsql\nAS $function$\nDECLARE\n    old_prefixes TEXT[];\nBEGIN\n    -- Ensure this is an update operation and the name has changed\n    IF TG_OP = 'UPDATE' AND (NEW.\"name\" <> OLD.\"name\" OR NEW.\"bucket_id\" <> OLD.\"bucket_id\") THEN\n        -- Retrieve old prefixes\n        old_prefixes := \"storage\".\"get_prefixes\"(OLD.\"name\");\n\n        -- Remove old prefixes that are only used by this object\n        WITH all_prefixes as (\n            SELECT unnest(old_prefixes) as prefix\n        ),\n        can_delete_prefixes as (\n             SELECT prefix\n             FROM all_prefixes\n             WHERE NOT EXISTS (\n                 SELECT 1 FROM \"storage\".\"objects\"\n                 WHERE \"bucket_id\" = OLD.\"bucket_id\"\n                   AND \"name\" <> OLD.\"name\"\n                   AND \"name\" LIKE (prefix || '%')\n             )\n         )\n        DELETE FROM \"storage\".\"prefixes\" WHERE name IN (SELECT prefix FROM can_delete_prefixes);\n\n        -- Add new prefixes\n        PERFORM \"storage\".\"add_prefixes\"(NEW.\"bucket_id\", NEW.\"name\");\n    END IF;\n    -- Set the new level\n    NEW.\"level\" := \"storage\".\"get_level\"(NEW.\"name\");\n\n    RETURN NEW;\nEND;\n$function$\n",
          "language": "plpgsql"
        },
        {
          "schema_name": "storage",
          "function_name": "operation",
          "return_type": "text",
          "arguments": "",
          "definition": "CREATE OR REPLACE FUNCTION storage.operation()\n RETURNS text\n LANGUAGE plpgsql\n STABLE\nAS $function$\nBEGIN\n    RETURN current_setting('storage.operation', true);\nEND;\n$function$\n",
          "language": "plpgsql"
        },
        {
          "schema_name": "storage",
          "function_name": "prefixes_insert_trigger",
          "return_type": "trigger",
          "arguments": "",
          "definition": "CREATE OR REPLACE FUNCTION storage.prefixes_insert_trigger()\n RETURNS trigger\n LANGUAGE plpgsql\nAS $function$\nBEGIN\n    PERFORM \"storage\".\"add_prefixes\"(NEW.\"bucket_id\", NEW.\"name\");\n    RETURN NEW;\nEND;\n$function$\n",
          "language": "plpgsql"
        },
        {
          "schema_name": "storage",
          "function_name": "search",
          "return_type": "TABLE(name text, id uuid, updated_at timestamp with time zone, created_at timestamp with time zone, last_accessed_at timestamp with time zone, metadata jsonb)",
          "arguments": "prefix text, bucketname text, limits integer DEFAULT 100, levels integer DEFAULT 1, offsets integer DEFAULT 0, search text DEFAULT ''::text, sortcolumn text DEFAULT 'name'::text, sortorder text DEFAULT 'asc'::text",
          "definition": "CREATE OR REPLACE FUNCTION storage.search(prefix text, bucketname text, limits integer DEFAULT 100, levels integer DEFAULT 1, offsets integer DEFAULT 0, search text DEFAULT ''::text, sortcolumn text DEFAULT 'name'::text, sortorder text DEFAULT 'asc'::text)\n RETURNS TABLE(name text, id uuid, updated_at timestamp with time zone, created_at timestamp with time zone, last_accessed_at timestamp with time zone, metadata jsonb)\n LANGUAGE plpgsql\nAS $function$\ndeclare\n    can_bypass_rls BOOLEAN;\nbegin\n    SELECT rolbypassrls\n    INTO can_bypass_rls\n    FROM pg_roles\n    WHERE rolname = coalesce(nullif(current_setting('role', true), 'none'), current_user);\n\n    IF can_bypass_rls THEN\n        RETURN QUERY SELECT * FROM storage.search_v1_optimised(prefix, bucketname, limits, levels, offsets, search, sortcolumn, sortorder);\n    ELSE\n        RETURN QUERY SELECT * FROM storage.search_legacy_v1(prefix, bucketname, limits, levels, offsets, search, sortcolumn, sortorder);\n    END IF;\nend;\n$function$\n",
          "language": "plpgsql"
        },
        {
          "schema_name": "storage",
          "function_name": "search_legacy_v1",
          "return_type": "TABLE(name text, id uuid, updated_at timestamp with time zone, created_at timestamp with time zone, last_accessed_at timestamp with time zone, metadata jsonb)",
          "arguments": "prefix text, bucketname text, limits integer DEFAULT 100, levels integer DEFAULT 1, offsets integer DEFAULT 0, search text DEFAULT ''::text, sortcolumn text DEFAULT 'name'::text, sortorder text DEFAULT 'asc'::text",
          "definition": "CREATE OR REPLACE FUNCTION storage.search_legacy_v1(prefix text, bucketname text, limits integer DEFAULT 100, levels integer DEFAULT 1, offsets integer DEFAULT 0, search text DEFAULT ''::text, sortcolumn text DEFAULT 'name'::text, sortorder text DEFAULT 'asc'::text)\n RETURNS TABLE(name text, id uuid, updated_at timestamp with time zone, created_at timestamp with time zone, last_accessed_at timestamp with time zone, metadata jsonb)\n LANGUAGE plpgsql\n STABLE\nAS $function$\ndeclare\n    v_order_by text;\n    v_sort_order text;\nbegin\n    case\n        when sortcolumn = 'name' then\n            v_order_by = 'name';\n        when sortcolumn = 'updated_at' then\n            v_order_by = 'updated_at';\n        when sortcolumn = 'created_at' then\n            v_order_by = 'created_at';\n        when sortcolumn = 'last_accessed_at' then\n            v_order_by = 'last_accessed_at';\n        else\n            v_order_by = 'name';\n        end case;\n\n    case\n        when sortorder = 'asc' then\n            v_sort_order = 'asc';\n        when sortorder = 'desc' then\n            v_sort_order = 'desc';\n        else\n            v_sort_order = 'asc';\n        end case;\n\n    v_order_by = v_order_by || ' ' || v_sort_order;\n\n    return query execute\n        'with folders as (\n           select path_tokens[$1] as folder\n           from storage.objects\n             where objects.name ilike $2 || $3 || ''%''\n               and bucket_id = $4\n               and array_length(objects.path_tokens, 1) <> $1\n           group by folder\n           order by folder ' || v_sort_order || '\n     )\n     (select folder as \"name\",\n            null as id,\n            null as updated_at,\n            null as created_at,\n            null as last_accessed_at,\n            null as metadata from folders)\n     union all\n     (select path_tokens[$1] as \"name\",\n            id,\n            updated_at,\n            created_at,\n            last_accessed_at,\n            metadata\n     from storage.objects\n     where objects.name ilike $2 || $3 || ''%''\n       and bucket_id = $4\n       and array_length(objects.path_tokens, 1) = $1\n     order by ' || v_order_by || ')\n     limit $5\n     offset $6' using levels, prefix, search, bucketname, limits, offsets;\nend;\n$function$\n",
          "language": "plpgsql"
        },
        {
          "schema_name": "storage",
          "function_name": "search_v1_optimised",
          "return_type": "TABLE(name text, id uuid, updated_at timestamp with time zone, created_at timestamp with time zone, last_accessed_at timestamp with time zone, metadata jsonb)",
          "arguments": "prefix text, bucketname text, limits integer DEFAULT 100, levels integer DEFAULT 1, offsets integer DEFAULT 0, search text DEFAULT ''::text, sortcolumn text DEFAULT 'name'::text, sortorder text DEFAULT 'asc'::text",
          "definition": "CREATE OR REPLACE FUNCTION storage.search_v1_optimised(prefix text, bucketname text, limits integer DEFAULT 100, levels integer DEFAULT 1, offsets integer DEFAULT 0, search text DEFAULT ''::text, sortcolumn text DEFAULT 'name'::text, sortorder text DEFAULT 'asc'::text)\n RETURNS TABLE(name text, id uuid, updated_at timestamp with time zone, created_at timestamp with time zone, last_accessed_at timestamp with time zone, metadata jsonb)\n LANGUAGE plpgsql\n STABLE\nAS $function$\ndeclare\n    v_order_by text;\n    v_sort_order text;\nbegin\n    case\n        when sortcolumn = 'name' then\n            v_order_by = 'name';\n        when sortcolumn = 'updated_at' then\n            v_order_by = 'updated_at';\n        when sortcolumn = 'created_at' then\n            v_order_by = 'created_at';\n        when sortcolumn = 'last_accessed_at' then\n            v_order_by = 'last_accessed_at';\n        else\n            v_order_by = 'name';\n        end case;\n\n    case\n        when sortorder = 'asc' then\n            v_sort_order = 'asc';\n        when sortorder = 'desc' then\n            v_sort_order = 'desc';\n        else\n            v_sort_order = 'asc';\n        end case;\n\n    v_order_by = v_order_by || ' ' || v_sort_order;\n\n    return query execute\n        'with folders as (\n           select (string_to_array(name, ''/''))[level] as name\n           from storage.prefixes\n             where lower(prefixes.name) like lower($2 || $3) || ''%''\n               and bucket_id = $4\n               and level = $1\n           order by name ' || v_sort_order || '\n     )\n     (select name,\n            null as id,\n            null as updated_at,\n            null as created_at,\n            null as last_accessed_at,\n            null as metadata from folders)\n     union all\n     (select path_tokens[level] as \"name\",\n            id,\n            updated_at,\n            created_at,\n            last_accessed_at,\n            metadata\n     from storage.objects\n     where lower(objects.name) like lower($2 || $3) || ''%''\n       and bucket_id = $4\n       and level = $1\n     order by ' || v_order_by || ')\n     limit $5\n     offset $6' using levels, prefix, search, bucketname, limits, offsets;\nend;\n$function$\n",
          "language": "plpgsql"
        },
        {
          "schema_name": "storage",
          "function_name": "search_v2",
          "return_type": "TABLE(key text, name text, id uuid, updated_at timestamp with time zone, created_at timestamp with time zone, metadata jsonb)",
          "arguments": "prefix text, bucket_name text, limits integer DEFAULT 100, levels integer DEFAULT 1, start_after text DEFAULT ''::text",
          "definition": "CREATE OR REPLACE FUNCTION storage.search_v2(prefix text, bucket_name text, limits integer DEFAULT 100, levels integer DEFAULT 1, start_after text DEFAULT ''::text)\n RETURNS TABLE(key text, name text, id uuid, updated_at timestamp with time zone, created_at timestamp with time zone, metadata jsonb)\n LANGUAGE plpgsql\n STABLE\nAS $function$\nBEGIN\n    RETURN query EXECUTE\n        $sql$\n        SELECT * FROM (\n            (\n                SELECT\n                    split_part(name, '/', $4) AS key,\n                    name || '/' AS name,\n                    NULL::uuid AS id,\n                    NULL::timestamptz AS updated_at,\n                    NULL::timestamptz AS created_at,\n                    NULL::jsonb AS metadata\n                FROM storage.prefixes\n                WHERE name COLLATE \"C\" LIKE $1 || '%'\n                AND bucket_id = $2\n                AND level = $4\n                AND name COLLATE \"C\" > $5\n                ORDER BY prefixes.name COLLATE \"C\" LIMIT $3\n            )\n            UNION ALL\n            (SELECT split_part(name, '/', $4) AS key,\n                name,\n                id,\n                updated_at,\n                created_at,\n                metadata\n            FROM storage.objects\n            WHERE name COLLATE \"C\" LIKE $1 || '%'\n                AND bucket_id = $2\n                AND level = $4\n                AND name COLLATE \"C\" > $5\n            ORDER BY name COLLATE \"C\" LIMIT $3)\n        ) obj\n        ORDER BY name COLLATE \"C\" LIMIT $3;\n        $sql$\n        USING prefix, bucket_name, limits, levels, start_after;\nEND;\n$function$\n",
          "language": "plpgsql"
        },
        {
          "schema_name": "storage",
          "function_name": "update_updated_at_column",
          "return_type": "trigger",
          "arguments": "",
          "definition": "CREATE OR REPLACE FUNCTION storage.update_updated_at_column()\n RETURNS trigger\n LANGUAGE plpgsql\nAS $function$\nBEGIN\n    NEW.updated_at = now();\n    RETURN NEW; \nEND;\n$function$\n",
          "language": "plpgsql"
        }
      ],
      "missing": [
        {
          "schema_name": "public",
          "function_name": "create_classroom",
          "return_type": "TABLE(classroom_id uuid, invite_code text)",
          "arguments": "classroom_name text, description text DEFAULT NULL::text",
          "definition": "CREATE OR REPLACE FUNCTION public.create_classroom(classroom_name text, description text DEFAULT NULL::text)\n RETURNS TABLE(classroom_id uuid, invite_code text)\n LANGUAGE plpgsql\n SECURITY DEFINER\nAS $function$\nDECLARE\n    new_classroom_id UUID;\n    new_invite_code TEXT;\n    attempts INTEGER := 0;\n    teacher_role TEXT;\nBEGIN\n    -- Check if user is teacher\n    SELECT up.user_role INTO teacher_role \n    FROM public.user_profiles up \n    WHERE up.id = auth.uid();\n    \n    IF teacher_role != 'teacher' THEN\n        RAISE EXCEPTION 'Only teachers can create classrooms';\n    END IF;\n    \n    -- Generate unique invite code (max 10 attempts)\n    LOOP\n        new_invite_code := generate_invite_code();\n        attempts := attempts + 1;\n        \n        -- Check if code is unique\n        IF NOT EXISTS (SELECT 1 FROM public.classrooms WHERE classrooms.invite_code = new_invite_code) THEN\n            EXIT;\n        END IF;\n        \n        IF attempts >= 10 THEN\n            RAISE EXCEPTION 'Could not generate unique invite code';\n        END IF;\n    END LOOP;\n    \n    -- Create classroom\n    INSERT INTO public.classrooms (name, description, teacher_id, invite_code)\n    VALUES (classroom_name, description, auth.uid(), new_invite_code)\n    RETURNING id INTO new_classroom_id;\n    \n    RETURN QUERY SELECT new_classroom_id, new_invite_code;\nEND;\n$function$\n",
          "language": "plpgsql"
        },
        {
          "schema_name": "public",
          "function_name": "generate_invite_code",
          "return_type": "text",
          "arguments": "length integer DEFAULT 6",
          "definition": "CREATE OR REPLACE FUNCTION public.generate_invite_code(length integer DEFAULT 6)\n RETURNS text\n LANGUAGE plpgsql\nAS $function$\nDECLARE\n    chars TEXT := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n    result TEXT := '';\n    i INTEGER;\nBEGIN\n    FOR i IN 1..length LOOP\n        result := result || substr(chars, floor(random() * length(chars) + 1)::INTEGER, 1);\n    END LOOP;\n    RETURN result;\nEND;\n$function$\n",
          "language": "plpgsql"
        },
        {
          "schema_name": "public",
          "function_name": "handle_new_user",
          "return_type": "trigger",
          "arguments": "",
          "definition": "CREATE OR REPLACE FUNCTION public.handle_new_user()\n RETURNS trigger\n LANGUAGE plpgsql\n SECURITY DEFINER\nAS $function$\nBEGIN\n    INSERT INTO public.user_profiles (id, first_name, user_role)\n    VALUES (\n        NEW.id, \n        COALESCE(NEW.raw_user_meta_data->>'first_name', ''), \n        COALESCE(NEW.raw_user_meta_data->>'user_role', 'student')\n    );\n    RETURN NEW;\nEND;\n$function$\n",
          "language": "plpgsql"
        },
        {
          "schema_name": "public",
          "function_name": "join_classroom_with_code",
          "return_type": "TABLE(success boolean, message text, classroom_name text)",
          "arguments": "code text",
          "definition": "CREATE OR REPLACE FUNCTION public.join_classroom_with_code(code text)\n RETURNS TABLE(success boolean, message text, classroom_name text)\n LANGUAGE plpgsql\n SECURITY DEFINER\nAS $function$\nDECLARE\n    target_classroom_id UUID;\n    target_classroom_name TEXT;\n    student_role TEXT;\nBEGIN\n    -- Check if user is student\n    SELECT up.user_role INTO student_role \n    FROM public.user_profiles up \n    WHERE up.id = auth.uid();\n    \n    IF student_role != 'student' THEN\n        RETURN QUERY SELECT false, 'Only students can join classrooms', NULL::TEXT;\n        RETURN;\n    END IF;\n    \n    -- Find classroom by invite code\n    SELECT c.id, c.name INTO target_classroom_id, target_classroom_name\n    FROM public.classrooms c\n    WHERE c.invite_code = code AND c.is_active = true;\n    \n    IF target_classroom_id IS NULL THEN\n        RETURN QUERY SELECT false, 'Invalid or expired invite code', NULL::TEXT;\n        RETURN;\n    END IF;\n    \n    -- Check if already a member\n    IF EXISTS (\n        SELECT 1 FROM public.classroom_members cm \n        WHERE cm.classroom_id = target_classroom_id \n        AND cm.student_id = auth.uid() \n        AND cm.is_active = true\n    ) THEN\n        RETURN QUERY SELECT false, 'Already a member of this classroom', target_classroom_name;\n        RETURN;\n    END IF;\n    \n    -- Join classroom\n    INSERT INTO public.classroom_members (classroom_id, student_id)\n    VALUES (target_classroom_id, auth.uid())\n    ON CONFLICT (classroom_id, student_id) \n    DO UPDATE SET is_active = true, joined_at = NOW();\n    \n    RETURN QUERY SELECT true, 'Successfully joined classroom', target_classroom_name;\nEND;\n$function$\n",
          "language": "plpgsql"
        }
      ]
    },
    "triggers": {
      "old": [
        {
          "trigger_name": "on_auth_user_created",
          "event_manipulation": "INSERT",
          "event_object_schema": "auth",
          "event_object_table": "users",
          "trigger_schema": "auth",
          "action_timing": "AFTER",
          "action_condition": null,
          "action_statement": "EXECUTE FUNCTION handle_new_user()"
        },
        {
          "trigger_name": "update_classrooms_updated_at",
          "event_manipulation": "UPDATE",
          "event_object_schema": "public",
          "event_object_table": "classrooms",
          "trigger_schema": "public",
          "action_timing": "BEFORE",
          "action_condition": null,
          "action_statement": "EXECUTE FUNCTION update_updated_at_column()"
        },
        {
          "trigger_name": "update_user_profiles_updated_at",
          "event_manipulation": "UPDATE",
          "event_object_schema": "public",
          "event_object_table": "user_profiles",
          "trigger_schema": "public",
          "action_timing": "BEFORE",
          "action_condition": null,
          "action_statement": "EXECUTE FUNCTION update_updated_at_column()"
        },
        {
          "trigger_name": "update_objects_updated_at",
          "event_manipulation": "UPDATE",
          "event_object_schema": "storage",
          "event_object_table": "objects",
          "trigger_schema": "storage",
          "action_timing": "BEFORE",
          "action_condition": null,
          "action_statement": "EXECUTE FUNCTION storage.update_updated_at_column()"
        }
      ],
      "new": [
        {
          "trigger_name": "create_user_profile_trigger",
          "event_manipulation": "INSERT",
          "event_object_schema": "auth",
          "event_object_table": "users",
          "trigger_schema": "auth",
          "action_timing": "AFTER",
          "action_condition": null,
          "action_statement": "EXECUTE FUNCTION create_user_profile()"
        },
        {
          "trigger_name": "update_categories_updated_at",
          "event_manipulation": "UPDATE",
          "event_object_schema": "public",
          "event_object_table": "categories",
          "trigger_schema": "public",
          "action_timing": "BEFORE",
          "action_condition": null,
          "action_statement": "EXECUTE FUNCTION update_updated_at_column()"
        },
        {
          "trigger_name": "update_classroom_details_updated_at",
          "event_manipulation": "UPDATE",
          "event_object_schema": "public",
          "event_object_table": "classroom_details",
          "trigger_schema": "public",
          "action_timing": "BEFORE",
          "action_condition": null,
          "action_statement": "EXECUTE FUNCTION update_updated_at_column()"
        },
        {
          "trigger_name": "update_classrooms_updated_at",
          "event_manipulation": "UPDATE",
          "event_object_schema": "public",
          "event_object_table": "classrooms",
          "trigger_schema": "public",
          "action_timing": "BEFORE",
          "action_condition": null,
          "action_statement": "EXECUTE FUNCTION update_updated_at_column()"
        },
        {
          "trigger_name": "update_user_set_progress_updated_at",
          "event_manipulation": "UPDATE",
          "event_object_schema": "public",
          "event_object_table": "user_set_progress",
          "trigger_schema": "public",
          "action_timing": "BEFORE",
          "action_condition": null,
          "action_statement": "EXECUTE FUNCTION update_updated_at_column()"
        },
        {
          "trigger_name": "update_waitlist_updated_at",
          "event_manipulation": "UPDATE",
          "event_object_schema": "public",
          "event_object_table": "waitlist",
          "trigger_schema": "public",
          "action_timing": "BEFORE",
          "action_condition": null,
          "action_statement": "EXECUTE FUNCTION update_updated_at_column()"
        },
        {
          "trigger_name": "enforce_bucket_name_length_trigger",
          "event_manipulation": "INSERT",
          "event_object_schema": "storage",
          "event_object_table": "buckets",
          "trigger_schema": "storage",
          "action_timing": "BEFORE",
          "action_condition": null,
          "action_statement": "EXECUTE FUNCTION storage.enforce_bucket_name_length()"
        },
        {
          "trigger_name": "enforce_bucket_name_length_trigger",
          "event_manipulation": "UPDATE",
          "event_object_schema": "storage",
          "event_object_table": "buckets",
          "trigger_schema": "storage",
          "action_timing": "BEFORE",
          "action_condition": null,
          "action_statement": "EXECUTE FUNCTION storage.enforce_bucket_name_length()"
        },
        {
          "trigger_name": "objects_delete_delete_prefix",
          "event_manipulation": "DELETE",
          "event_object_schema": "storage",
          "event_object_table": "objects",
          "trigger_schema": "storage",
          "action_timing": "AFTER",
          "action_condition": null,
          "action_statement": "EXECUTE FUNCTION storage.delete_prefix_hierarchy_trigger()"
        },
        {
          "trigger_name": "objects_insert_create_prefix",
          "event_manipulation": "INSERT",
          "event_object_schema": "storage",
          "event_object_table": "objects",
          "trigger_schema": "storage",
          "action_timing": "BEFORE",
          "action_condition": null,
          "action_statement": "EXECUTE FUNCTION storage.objects_insert_prefix_trigger()"
        },
        {
          "trigger_name": "objects_update_create_prefix",
          "event_manipulation": "UPDATE",
          "event_object_schema": "storage",
          "event_object_table": "objects",
          "trigger_schema": "storage",
          "action_timing": "BEFORE",
          "action_condition": null,
          "action_statement": "EXECUTE FUNCTION storage.objects_update_prefix_trigger()"
        },
        {
          "trigger_name": "update_objects_updated_at",
          "event_manipulation": "UPDATE",
          "event_object_schema": "storage",
          "event_object_table": "objects",
          "trigger_schema": "storage",
          "action_timing": "BEFORE",
          "action_condition": null,
          "action_statement": "EXECUTE FUNCTION storage.update_updated_at_column()"
        },
        {
          "trigger_name": "prefixes_create_hierarchy",
          "event_manipulation": "INSERT",
          "event_object_schema": "storage",
          "event_object_table": "prefixes",
          "trigger_schema": "storage",
          "action_timing": "BEFORE",
          "action_condition": null,
          "action_statement": "EXECUTE FUNCTION storage.prefixes_insert_trigger()"
        },
        {
          "trigger_name": "prefixes_delete_hierarchy",
          "event_manipulation": "DELETE",
          "event_object_schema": "storage",
          "event_object_table": "prefixes",
          "trigger_schema": "storage",
          "action_timing": "AFTER",
          "action_condition": null,
          "action_statement": "EXECUTE FUNCTION storage.delete_prefix_hierarchy_trigger()"
        }
      ],
      "missing": [
        {
          "trigger_name": "on_auth_user_created",
          "event_manipulation": "INSERT",
          "event_object_schema": "auth",
          "event_object_table": "users",
          "trigger_schema": "auth",
          "action_timing": "AFTER",
          "action_condition": null,
          "action_statement": "EXECUTE FUNCTION handle_new_user()"
        },
        {
          "trigger_name": "update_user_profiles_updated_at",
          "event_manipulation": "UPDATE",
          "event_object_schema": "public",
          "event_object_table": "user_profiles",
          "trigger_schema": "public",
          "action_timing": "BEFORE",
          "action_condition": null,
          "action_statement": "EXECUTE FUNCTION update_updated_at_column()"
        }
      ]
    },
    "views": {
      "old": [
        {
          "table_schema": "public",
          "table_name": "classroom_details",
          "view_definition": " SELECT c.id,\n    c.name,\n    c.description,\n    c.invite_code,\n    c.is_active,\n    c.created_at,\n    c.updated_at,\n    t.email AS teacher_email,\n    tp.first_name AS teacher_first_name,\n    tp.last_name AS teacher_last_name,\n    count(cm.student_id) AS student_count\n   FROM (((classrooms c\n     JOIN auth.users t ON ((c.teacher_id = t.id)))\n     JOIN user_profiles tp ON ((t.id = tp.id)))\n     LEFT JOIN classroom_members cm ON (((c.id = cm.classroom_id) AND (cm.is_active = true))))\n  GROUP BY c.id, c.name, c.description, c.invite_code, c.is_active, c.created_at, c.updated_at, t.email, tp.first_name, tp.last_name;"
        }
      ],
      "new": [],
      "missing": [
        {
          "table_schema": "public",
          "table_name": "classroom_details",
          "view_definition": " SELECT c.id,\n    c.name,\n    c.description,\n    c.invite_code,\n    c.is_active,\n    c.created_at,\n    c.updated_at,\n    t.email AS teacher_email,\n    tp.first_name AS teacher_first_name,\n    tp.last_name AS teacher_last_name,\n    count(cm.student_id) AS student_count\n   FROM (((classrooms c\n     JOIN auth.users t ON ((c.teacher_id = t.id)))\n     JOIN user_profiles tp ON ((t.id = tp.id)))\n     LEFT JOIN classroom_members cm ON (((c.id = cm.classroom_id) AND (cm.is_active = true))))\n  GROUP BY c.id, c.name, c.description, c.invite_code, c.is_active, c.created_at, c.updated_at, t.email, tp.first_name, tp.last_name;"
        }
      ]
    },
    "policies": {
      "old": [
        {
          "schemaname": "auth",
          "tablename": "identities",
          "policyname": "auth_identities_access_policy",
          "permissive": "PERMISSIVE",
          "roles": "{postgres,service_role,supabase_auth_admin}",
          "cmd": "ALL",
          "qual": "true",
          "with_check": null
        },
        {
          "schemaname": "auth",
          "tablename": "refresh_tokens",
          "policyname": "auth_refresh_tokens_access_policy",
          "permissive": "PERMISSIVE",
          "roles": "{postgres,service_role,supabase_auth_admin}",
          "cmd": "ALL",
          "qual": "true",
          "with_check": null
        },
        {
          "schemaname": "auth",
          "tablename": "sessions",
          "policyname": "auth_sessions_access_policy",
          "permissive": "PERMISSIVE",
          "roles": "{postgres,service_role,supabase_auth_admin}",
          "cmd": "ALL",
          "qual": "true",
          "with_check": null
        },
        {
          "schemaname": "auth",
          "tablename": "users",
          "policyname": "auth_users_access_policy",
          "permissive": "PERMISSIVE",
          "roles": "{postgres,service_role,supabase_auth_admin}",
          "cmd": "ALL",
          "qual": "true",
          "with_check": null
        },
        {
          "schemaname": "public",
          "tablename": "card_categories",
          "policyname": "card_categories_delete_policy",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "DELETE",
          "qual": "true",
          "with_check": null
        },
        {
          "schemaname": "public",
          "tablename": "card_categories",
          "policyname": "card_categories_insert_policy",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "INSERT",
          "qual": null,
          "with_check": "true"
        },
        {
          "schemaname": "public",
          "tablename": "card_categories",
          "policyname": "card_categories_select_policy",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "SELECT",
          "qual": "true",
          "with_check": null
        },
        {
          "schemaname": "public",
          "tablename": "card_categories",
          "policyname": "card_categories_update_policy",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "UPDATE",
          "qual": "true",
          "with_check": null
        },
        {
          "schemaname": "public",
          "tablename": "cards",
          "policyname": "Anyone can create cards",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "INSERT",
          "qual": null,
          "with_check": "true"
        },
        {
          "schemaname": "public",
          "tablename": "cards",
          "policyname": "Anyone can delete cards",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "DELETE",
          "qual": "true",
          "with_check": null
        },
        {
          "schemaname": "public",
          "tablename": "cards",
          "policyname": "Anyone can read cards",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "SELECT",
          "qual": "true",
          "with_check": null
        },
        {
          "schemaname": "public",
          "tablename": "cards",
          "policyname": "Anyone can update cards",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "UPDATE",
          "qual": "true",
          "with_check": "true"
        },
        {
          "schemaname": "public",
          "tablename": "categories",
          "policyname": "Authenticated users can insert categories",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "INSERT",
          "qual": null,
          "with_check": "(auth.role() = 'authenticated'::text)"
        },
        {
          "schemaname": "public",
          "tablename": "categories",
          "policyname": "Everyone can view categories",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "SELECT",
          "qual": "true",
          "with_check": null
        },
        {
          "schemaname": "public",
          "tablename": "classroom_members",
          "policyname": "Students can join classrooms",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "INSERT",
          "qual": null,
          "with_check": "((auth.uid() = student_id) AND (EXISTS ( SELECT 1\n   FROM user_profiles\n  WHERE ((user_profiles.id = auth.uid()) AND (user_profiles.user_role = 'student'::text)))))"
        },
        {
          "schemaname": "public",
          "tablename": "classroom_members",
          "policyname": "Students can leave classrooms",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "UPDATE",
          "qual": "(auth.uid() = student_id)",
          "with_check": null
        },
        {
          "schemaname": "public",
          "tablename": "classroom_members",
          "policyname": "Teachers can view their classroom members",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "SELECT",
          "qual": "((auth.uid() IN ( SELECT classrooms.teacher_id\n   FROM classrooms\n  WHERE (classrooms.id = classroom_members.classroom_id))) OR (auth.uid() = student_id))",
          "with_check": null
        },
        {
          "schemaname": "public",
          "tablename": "classroom_sets",
          "policyname": "Classroom members can view classroom sets",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "SELECT",
          "qual": "((classroom_id IN ( SELECT cm.classroom_id\n   FROM classroom_members cm\n  WHERE (cm.student_id = auth.uid()))) OR (classroom_id IN ( SELECT c.id\n   FROM classrooms c\n  WHERE (c.teacher_id = auth.uid()))))",
          "with_check": null
        },
        {
          "schemaname": "public",
          "tablename": "classroom_sets",
          "policyname": "Teachers can manage their classroom sets",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "ALL",
          "qual": "(classroom_id IN ( SELECT c.id\n   FROM classrooms c\n  WHERE (c.teacher_id = auth.uid())))",
          "with_check": null
        },
        {
          "schemaname": "public",
          "tablename": "classrooms",
          "policyname": "Enable read access for all users",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "SELECT",
          "qual": "true",
          "with_check": null
        },
        {
          "schemaname": "public",
          "tablename": "flashcard_set_cards",
          "policyname": "Users can manage cards in their own sets",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "ALL",
          "qual": "(EXISTS ( SELECT 1\n   FROM flashcard_sets\n  WHERE ((flashcard_sets.id = flashcard_set_cards.set_id) AND (flashcard_sets.creator_id = auth.uid()))))",
          "with_check": "(EXISTS ( SELECT 1\n   FROM flashcard_sets\n  WHERE ((flashcard_sets.id = flashcard_set_cards.set_id) AND (flashcard_sets.creator_id = auth.uid()))))"
        },
        {
          "schemaname": "public",
          "tablename": "flashcard_set_categories",
          "policyname": "Users can manage categories for their own sets",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "ALL",
          "qual": "(EXISTS ( SELECT 1\n   FROM flashcard_sets\n  WHERE ((flashcard_sets.id = flashcard_set_categories.set_id) AND (flashcard_sets.creator_id = auth.uid()))))",
          "with_check": null
        },
        {
          "schemaname": "public",
          "tablename": "flashcard_sets",
          "policyname": "Users can create their own flashcard sets",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "INSERT",
          "qual": null,
          "with_check": "(auth.uid() = creator_id)"
        },
        {
          "schemaname": "public",
          "tablename": "flashcard_sets",
          "policyname": "Users can delete their own flashcard sets",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "DELETE",
          "qual": "(auth.uid() = creator_id)",
          "with_check": null
        },
        {
          "schemaname": "public",
          "tablename": "flashcard_sets",
          "policyname": "Users can read their own flashcard sets",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "SELECT",
          "qual": "((auth.uid() = creator_id) OR (is_public = true))",
          "with_check": null
        },
        {
          "schemaname": "public",
          "tablename": "flashcard_sets",
          "policyname": "Users can update their own flashcard sets",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "UPDATE",
          "qual": "(auth.uid() = creator_id)",
          "with_check": "(auth.uid() = creator_id)"
        },
        {
          "schemaname": "public",
          "tablename": "schools",
          "policyname": "Enable insert for authenticated users",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "INSERT",
          "qual": null,
          "with_check": "(auth.role() = 'authenticated'::text)"
        },
        {
          "schemaname": "public",
          "tablename": "schools",
          "policyname": "Enable read access for authenticated users",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "SELECT",
          "qual": "(auth.role() = 'authenticated'::text)",
          "with_check": null
        },
        {
          "schemaname": "public",
          "tablename": "schools",
          "policyname": "Enable update for authenticated users",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "UPDATE",
          "qual": "(auth.role() = 'authenticated'::text)",
          "with_check": null
        },
        {
          "schemaname": "public",
          "tablename": "study_logs",
          "policyname": "Users can view and create their own study logs",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "ALL",
          "qual": "(auth.uid() = user_id)",
          "with_check": null
        },
        {
          "schemaname": "public",
          "tablename": "user_card_progress",
          "policyname": "Users can manage their own progress",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "ALL",
          "qual": "(auth.uid() = user_id)",
          "with_check": "(auth.uid() = user_id)"
        },
        {
          "schemaname": "public",
          "tablename": "user_profiles",
          "policyname": "Anyone can insert profile on signup",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "INSERT",
          "qual": null,
          "with_check": "(auth.uid() = id)"
        },
        {
          "schemaname": "public",
          "tablename": "user_profiles",
          "policyname": "Enable read access for authenticated users",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "SELECT",
          "qual": "(auth.role() = 'authenticated'::text)",
          "with_check": null
        },
        {
          "schemaname": "public",
          "tablename": "user_profiles",
          "policyname": "Enable update for authenticated users",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "UPDATE",
          "qual": "((auth.role() = 'authenticated'::text) AND (auth.uid() = id))",
          "with_check": null
        },
        {
          "schemaname": "public",
          "tablename": "user_profiles",
          "policyname": "Users can update their own profile",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "UPDATE",
          "qual": "(auth.uid() = id)",
          "with_check": null
        },
        {
          "schemaname": "public",
          "tablename": "user_set_progress",
          "policyname": "Users can view and edit their own set progress",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "ALL",
          "qual": "(auth.uid() = user_id)",
          "with_check": null
        },
        {
          "schemaname": "public",
          "tablename": "waitlist",
          "policyname": "Allow anon users to read for confirmation",
          "permissive": "PERMISSIVE",
          "roles": "{anon}",
          "cmd": "SELECT",
          "qual": "(confirmation_token IS NOT NULL)",
          "with_check": null
        },
        {
          "schemaname": "public",
          "tablename": "waitlist",
          "policyname": "Allow confirmation updates for anon users",
          "permissive": "PERMISSIVE",
          "roles": "{anon}",
          "cmd": "UPDATE",
          "qual": "true",
          "with_check": "true"
        },
        {
          "schemaname": "public",
          "tablename": "waitlist",
          "policyname": "Anyone can insert waitlist entries",
          "permissive": "PERMISSIVE",
          "roles": "{anon}",
          "cmd": "INSERT",
          "qual": null,
          "with_check": "true"
        },
        {
          "schemaname": "public",
          "tablename": "waitlist",
          "policyname": "Only authenticated users can view waitlist",
          "permissive": "PERMISSIVE",
          "roles": "{authenticated}",
          "cmd": "SELECT",
          "qual": "true",
          "with_check": null
        },
        {
          "schemaname": "storage",
          "tablename": "objects",
          "policyname": "Public Access",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "SELECT",
          "qual": "(bucket_id = 'media'::text)",
          "with_check": null
        },
        {
          "schemaname": "storage",
          "tablename": "objects",
          "policyname": "Users can delete own media",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "DELETE",
          "qual": "((bucket_id = 'media'::text) AND ((auth.uid())::text = (storage.foldername(name))[1]))",
          "with_check": null
        },
        {
          "schemaname": "storage",
          "tablename": "objects",
          "policyname": "Users can update own media",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "UPDATE",
          "qual": "((bucket_id = 'media'::text) AND ((auth.uid())::text = (storage.foldername(name))[1]))",
          "with_check": null
        },
        {
          "schemaname": "storage",
          "tablename": "objects",
          "policyname": "Users can upload media",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "INSERT",
          "qual": null,
          "with_check": "((bucket_id = 'media'::text) AND (auth.role() = 'authenticated'::text))"
        }
      ],
      "new": [
        {
          "schemaname": "public",
          "tablename": "card_categories",
          "policyname": "Card categories viewable by everyone",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "SELECT",
          "qual": "true",
          "with_check": null
        },
        {
          "schemaname": "public",
          "tablename": "card_categories",
          "policyname": "Teachers can manage card categories",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "ALL",
          "qual": "(EXISTS ( SELECT 1\n   FROM (cards c\n     JOIN flashcard_sets fs ON ((c.id IN ( SELECT flashcard_set_cards.card_id\n           FROM flashcard_set_cards\n          WHERE (flashcard_set_cards.set_id = fs.id)))))\n  WHERE ((c.id = card_categories.card_id) AND (fs.user_id = auth.uid()))))",
          "with_check": null
        },
        {
          "schemaname": "public",
          "tablename": "card_interactions",
          "policyname": "Users can create own card interactions",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "INSERT",
          "qual": null,
          "with_check": "(EXISTS ( SELECT 1\n   FROM study_sessions ss\n  WHERE ((ss.id = card_interactions.session_id) AND (ss.user_id = auth.uid()))))"
        },
        {
          "schemaname": "public",
          "tablename": "card_interactions",
          "policyname": "Users can read own card interactions",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "SELECT",
          "qual": "(EXISTS ( SELECT 1\n   FROM study_sessions ss\n  WHERE ((ss.id = card_interactions.session_id) AND (ss.user_id = auth.uid()))))",
          "with_check": null
        },
        {
          "schemaname": "public",
          "tablename": "cards",
          "policyname": "Users can read public cards",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "SELECT",
          "qual": "(is_public = true)",
          "with_check": null
        },
        {
          "schemaname": "public",
          "tablename": "categories",
          "policyname": "Authenticated users can create categories",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "INSERT",
          "qual": null,
          "with_check": "(auth.uid() IS NOT NULL)"
        },
        {
          "schemaname": "public",
          "tablename": "categories",
          "policyname": "Categories are viewable by everyone",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "SELECT",
          "qual": "true",
          "with_check": null
        },
        {
          "schemaname": "public",
          "tablename": "categories",
          "policyname": "Users can update own categories",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "UPDATE",
          "qual": "(auth.uid() = created_by)",
          "with_check": null
        },
        {
          "schemaname": "public",
          "tablename": "classroom_details",
          "policyname": "Classroom details follow classroom access",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "SELECT",
          "qual": "(EXISTS ( SELECT 1\n   FROM classrooms c\n  WHERE ((c.id = classroom_details.classroom_id) AND ((c.teacher_id = auth.uid()) OR (EXISTS ( SELECT 1\n           FROM classroom_members cm\n          WHERE ((cm.classroom_id = c.id) AND (cm.user_id = auth.uid()))))))))",
          "with_check": null
        },
        {
          "schemaname": "public",
          "tablename": "classroom_details",
          "policyname": "Teachers can update classroom details",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "ALL",
          "qual": "(EXISTS ( SELECT 1\n   FROM classrooms c\n  WHERE ((c.id = classroom_details.classroom_id) AND (c.teacher_id = auth.uid()))))",
          "with_check": null
        },
        {
          "schemaname": "public",
          "tablename": "classroom_members",
          "policyname": "Classroom members viewable by classroom participants",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "SELECT",
          "qual": "(EXISTS ( SELECT 1\n   FROM classrooms c\n  WHERE ((c.id = classroom_members.classroom_id) AND ((c.teacher_id = auth.uid()) OR (EXISTS ( SELECT 1\n           FROM classroom_members cm2\n          WHERE ((cm2.classroom_id = c.id) AND (cm2.user_id = auth.uid()))))))))",
          "with_check": null
        },
        {
          "schemaname": "public",
          "tablename": "classroom_members",
          "policyname": "Teachers can manage classroom members",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "ALL",
          "qual": "(EXISTS ( SELECT 1\n   FROM classrooms c\n  WHERE ((c.id = classroom_members.classroom_id) AND (c.teacher_id = auth.uid()))))",
          "with_check": null
        },
        {
          "schemaname": "public",
          "tablename": "classroom_sets",
          "policyname": "Classroom sets viewable by participants",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "SELECT",
          "qual": "(EXISTS ( SELECT 1\n   FROM classrooms c\n  WHERE ((c.id = classroom_sets.classroom_id) AND ((c.teacher_id = auth.uid()) OR (EXISTS ( SELECT 1\n           FROM classroom_members cm\n          WHERE ((cm.classroom_id = c.id) AND (cm.user_id = auth.uid()))))))))",
          "with_check": null
        },
        {
          "schemaname": "public",
          "tablename": "classroom_sets",
          "policyname": "Teachers can manage classroom sets",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "ALL",
          "qual": "(EXISTS ( SELECT 1\n   FROM classrooms c\n  WHERE ((c.id = classroom_sets.classroom_id) AND (c.teacher_id = auth.uid()))))",
          "with_check": null
        },
        {
          "schemaname": "public",
          "tablename": "classrooms",
          "policyname": "Students can view classrooms they belong to",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "SELECT",
          "qual": "(EXISTS ( SELECT 1\n   FROM classroom_members cm\n  WHERE ((cm.classroom_id = classrooms.id) AND (cm.user_id = auth.uid()))))",
          "with_check": null
        },
        {
          "schemaname": "public",
          "tablename": "classrooms",
          "policyname": "Teachers can manage own classrooms",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "ALL",
          "qual": "(auth.uid() = teacher_id)",
          "with_check": null
        },
        {
          "schemaname": "public",
          "tablename": "favicons",
          "policyname": "Authenticated users can manage favicons",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "ALL",
          "qual": null,
          "with_check": "(auth.uid() IS NOT NULL)"
        },
        {
          "schemaname": "public",
          "tablename": "favicons",
          "policyname": "Favicons are publicly readable",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "SELECT",
          "qual": "true",
          "with_check": null
        },
        {
          "schemaname": "public",
          "tablename": "flashcard_set_cards",
          "policyname": "Users can read public set cards",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "SELECT",
          "qual": "(EXISTS ( SELECT 1\n   FROM flashcard_sets fs\n  WHERE ((fs.id = flashcard_set_cards.set_id) AND (fs.is_public = true))))",
          "with_check": null
        },
        {
          "schemaname": "public",
          "tablename": "flashcard_set_categories",
          "policyname": "Set categories viewable by everyone",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "SELECT",
          "qual": "true",
          "with_check": null
        },
        {
          "schemaname": "public",
          "tablename": "flashcard_set_categories",
          "policyname": "Teachers can manage set categories",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "ALL",
          "qual": "(EXISTS ( SELECT 1\n   FROM flashcard_sets fs\n  WHERE ((fs.id = flashcard_set_categories.set_id) AND (fs.user_id = auth.uid()))))",
          "with_check": null
        },
        {
          "schemaname": "public",
          "tablename": "flashcard_sets",
          "policyname": "Users can read public sets",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "SELECT",
          "qual": "(is_public = true)",
          "with_check": null
        },
        {
          "schemaname": "public",
          "tablename": "study_logs",
          "policyname": "Teachers can read logs for own sets",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "SELECT",
          "qual": "(EXISTS ( SELECT 1\n   FROM flashcard_sets fs\n  WHERE ((fs.id = study_logs.set_id) AND (fs.user_id = auth.uid()))))",
          "with_check": null
        },
        {
          "schemaname": "public",
          "tablename": "study_logs",
          "policyname": "Users can create own study logs",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "INSERT",
          "qual": null,
          "with_check": "(auth.uid() = user_id)"
        },
        {
          "schemaname": "public",
          "tablename": "study_logs",
          "policyname": "Users can read own study logs",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "SELECT",
          "qual": "(auth.uid() = user_id)",
          "with_check": null
        },
        {
          "schemaname": "public",
          "tablename": "study_sessions",
          "policyname": "Teachers can read classroom study sessions",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "SELECT",
          "qual": "(EXISTS ( SELECT 1\n   FROM classrooms c\n  WHERE ((c.id = study_sessions.classroom_id) AND (c.teacher_id = auth.uid()))))",
          "with_check": null
        },
        {
          "schemaname": "public",
          "tablename": "study_sessions",
          "policyname": "Users can create own study sessions",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "INSERT",
          "qual": null,
          "with_check": "(auth.uid() = user_id)"
        },
        {
          "schemaname": "public",
          "tablename": "study_sessions",
          "policyname": "Users can read own study sessions",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "SELECT",
          "qual": "(auth.uid() = user_id)",
          "with_check": null
        },
        {
          "schemaname": "public",
          "tablename": "study_sessions",
          "policyname": "Users can update own study sessions",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "UPDATE",
          "qual": "(auth.uid() = user_id)",
          "with_check": null
        },
        {
          "schemaname": "public",
          "tablename": "user_card_progress",
          "policyname": "Users can create own card progress",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "INSERT",
          "qual": null,
          "with_check": "(auth.uid() = user_id)"
        },
        {
          "schemaname": "public",
          "tablename": "user_card_progress",
          "policyname": "Users can read own card progress",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "SELECT",
          "qual": "(auth.uid() = user_id)",
          "with_check": null
        },
        {
          "schemaname": "public",
          "tablename": "user_card_progress",
          "policyname": "Users can update own card progress",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "UPDATE",
          "qual": "(auth.uid() = user_id)",
          "with_check": null
        },
        {
          "schemaname": "public",
          "tablename": "user_profiles",
          "policyname": "Users can insert own profile",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "INSERT",
          "qual": null,
          "with_check": "(auth.uid() = id)"
        },
        {
          "schemaname": "public",
          "tablename": "user_profiles",
          "policyname": "Users can read own profile",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "SELECT",
          "qual": "(auth.uid() = id)",
          "with_check": null
        },
        {
          "schemaname": "public",
          "tablename": "user_profiles",
          "policyname": "Users can update own profile",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "UPDATE",
          "qual": "(auth.uid() = id)",
          "with_check": null
        },
        {
          "schemaname": "public",
          "tablename": "user_set_progress",
          "policyname": "Teachers can read progress on own sets",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "SELECT",
          "qual": "(EXISTS ( SELECT 1\n   FROM flashcard_sets fs\n  WHERE ((fs.id = user_set_progress.set_id) AND (fs.user_id = auth.uid()))))",
          "with_check": null
        },
        {
          "schemaname": "public",
          "tablename": "user_set_progress",
          "policyname": "Users can create own set progress",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "INSERT",
          "qual": null,
          "with_check": "(auth.uid() = user_id)"
        },
        {
          "schemaname": "public",
          "tablename": "user_set_progress",
          "policyname": "Users can read own set progress",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "SELECT",
          "qual": "(auth.uid() = user_id)",
          "with_check": null
        },
        {
          "schemaname": "public",
          "tablename": "user_set_progress",
          "policyname": "Users can update own set progress",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "UPDATE",
          "qual": "(auth.uid() = user_id)",
          "with_check": null
        },
        {
          "schemaname": "public",
          "tablename": "waitlist",
          "policyname": "Authenticated users can read waitlist",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "SELECT",
          "qual": "(auth.uid() IS NOT NULL)",
          "with_check": null
        },
        {
          "schemaname": "public",
          "tablename": "waitlist",
          "policyname": "Public can join waitlist",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "INSERT",
          "qual": null,
          "with_check": "true"
        }
      ],
      "missing": [
        {
          "schemaname": "auth",
          "tablename": "identities",
          "policyname": "auth_identities_access_policy",
          "permissive": "PERMISSIVE",
          "roles": "{postgres,service_role,supabase_auth_admin}",
          "cmd": "ALL",
          "qual": "true",
          "with_check": null
        },
        {
          "schemaname": "auth",
          "tablename": "refresh_tokens",
          "policyname": "auth_refresh_tokens_access_policy",
          "permissive": "PERMISSIVE",
          "roles": "{postgres,service_role,supabase_auth_admin}",
          "cmd": "ALL",
          "qual": "true",
          "with_check": null
        },
        {
          "schemaname": "auth",
          "tablename": "sessions",
          "policyname": "auth_sessions_access_policy",
          "permissive": "PERMISSIVE",
          "roles": "{postgres,service_role,supabase_auth_admin}",
          "cmd": "ALL",
          "qual": "true",
          "with_check": null
        },
        {
          "schemaname": "auth",
          "tablename": "users",
          "policyname": "auth_users_access_policy",
          "permissive": "PERMISSIVE",
          "roles": "{postgres,service_role,supabase_auth_admin}",
          "cmd": "ALL",
          "qual": "true",
          "with_check": null
        },
        {
          "schemaname": "public",
          "tablename": "card_categories",
          "policyname": "card_categories_delete_policy",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "DELETE",
          "qual": "true",
          "with_check": null
        },
        {
          "schemaname": "public",
          "tablename": "card_categories",
          "policyname": "card_categories_insert_policy",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "INSERT",
          "qual": null,
          "with_check": "true"
        },
        {
          "schemaname": "public",
          "tablename": "card_categories",
          "policyname": "card_categories_select_policy",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "SELECT",
          "qual": "true",
          "with_check": null
        },
        {
          "schemaname": "public",
          "tablename": "card_categories",
          "policyname": "card_categories_update_policy",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "UPDATE",
          "qual": "true",
          "with_check": null
        },
        {
          "schemaname": "public",
          "tablename": "cards",
          "policyname": "Anyone can create cards",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "INSERT",
          "qual": null,
          "with_check": "true"
        },
        {
          "schemaname": "public",
          "tablename": "cards",
          "policyname": "Anyone can delete cards",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "DELETE",
          "qual": "true",
          "with_check": null
        },
        {
          "schemaname": "public",
          "tablename": "cards",
          "policyname": "Anyone can read cards",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "SELECT",
          "qual": "true",
          "with_check": null
        },
        {
          "schemaname": "public",
          "tablename": "cards",
          "policyname": "Anyone can update cards",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "UPDATE",
          "qual": "true",
          "with_check": "true"
        },
        {
          "schemaname": "public",
          "tablename": "categories",
          "policyname": "Authenticated users can insert categories",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "INSERT",
          "qual": null,
          "with_check": "(auth.role() = 'authenticated'::text)"
        },
        {
          "schemaname": "public",
          "tablename": "categories",
          "policyname": "Everyone can view categories",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "SELECT",
          "qual": "true",
          "with_check": null
        },
        {
          "schemaname": "public",
          "tablename": "classroom_members",
          "policyname": "Students can join classrooms",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "INSERT",
          "qual": null,
          "with_check": "((auth.uid() = student_id) AND (EXISTS ( SELECT 1\n   FROM user_profiles\n  WHERE ((user_profiles.id = auth.uid()) AND (user_profiles.user_role = 'student'::text)))))"
        },
        {
          "schemaname": "public",
          "tablename": "classroom_members",
          "policyname": "Students can leave classrooms",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "UPDATE",
          "qual": "(auth.uid() = student_id)",
          "with_check": null
        },
        {
          "schemaname": "public",
          "tablename": "classroom_members",
          "policyname": "Teachers can view their classroom members",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "SELECT",
          "qual": "((auth.uid() IN ( SELECT classrooms.teacher_id\n   FROM classrooms\n  WHERE (classrooms.id = classroom_members.classroom_id))) OR (auth.uid() = student_id))",
          "with_check": null
        },
        {
          "schemaname": "public",
          "tablename": "classroom_sets",
          "policyname": "Classroom members can view classroom sets",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "SELECT",
          "qual": "((classroom_id IN ( SELECT cm.classroom_id\n   FROM classroom_members cm\n  WHERE (cm.student_id = auth.uid()))) OR (classroom_id IN ( SELECT c.id\n   FROM classrooms c\n  WHERE (c.teacher_id = auth.uid()))))",
          "with_check": null
        },
        {
          "schemaname": "public",
          "tablename": "classroom_sets",
          "policyname": "Teachers can manage their classroom sets",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "ALL",
          "qual": "(classroom_id IN ( SELECT c.id\n   FROM classrooms c\n  WHERE (c.teacher_id = auth.uid())))",
          "with_check": null
        },
        {
          "schemaname": "public",
          "tablename": "classrooms",
          "policyname": "Enable read access for all users",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "SELECT",
          "qual": "true",
          "with_check": null
        },
        {
          "schemaname": "public",
          "tablename": "flashcard_set_cards",
          "policyname": "Users can manage cards in their own sets",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "ALL",
          "qual": "(EXISTS ( SELECT 1\n   FROM flashcard_sets\n  WHERE ((flashcard_sets.id = flashcard_set_cards.set_id) AND (flashcard_sets.creator_id = auth.uid()))))",
          "with_check": "(EXISTS ( SELECT 1\n   FROM flashcard_sets\n  WHERE ((flashcard_sets.id = flashcard_set_cards.set_id) AND (flashcard_sets.creator_id = auth.uid()))))"
        },
        {
          "schemaname": "public",
          "tablename": "flashcard_set_categories",
          "policyname": "Users can manage categories for their own sets",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "ALL",
          "qual": "(EXISTS ( SELECT 1\n   FROM flashcard_sets\n  WHERE ((flashcard_sets.id = flashcard_set_categories.set_id) AND (flashcard_sets.creator_id = auth.uid()))))",
          "with_check": null
        },
        {
          "schemaname": "public",
          "tablename": "flashcard_sets",
          "policyname": "Users can create their own flashcard sets",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "INSERT",
          "qual": null,
          "with_check": "(auth.uid() = creator_id)"
        },
        {
          "schemaname": "public",
          "tablename": "flashcard_sets",
          "policyname": "Users can delete their own flashcard sets",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "DELETE",
          "qual": "(auth.uid() = creator_id)",
          "with_check": null
        },
        {
          "schemaname": "public",
          "tablename": "flashcard_sets",
          "policyname": "Users can read their own flashcard sets",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "SELECT",
          "qual": "((auth.uid() = creator_id) OR (is_public = true))",
          "with_check": null
        },
        {
          "schemaname": "public",
          "tablename": "flashcard_sets",
          "policyname": "Users can update their own flashcard sets",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "UPDATE",
          "qual": "(auth.uid() = creator_id)",
          "with_check": "(auth.uid() = creator_id)"
        },
        {
          "schemaname": "public",
          "tablename": "schools",
          "policyname": "Enable insert for authenticated users",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "INSERT",
          "qual": null,
          "with_check": "(auth.role() = 'authenticated'::text)"
        },
        {
          "schemaname": "public",
          "tablename": "schools",
          "policyname": "Enable read access for authenticated users",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "SELECT",
          "qual": "(auth.role() = 'authenticated'::text)",
          "with_check": null
        },
        {
          "schemaname": "public",
          "tablename": "schools",
          "policyname": "Enable update for authenticated users",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "UPDATE",
          "qual": "(auth.role() = 'authenticated'::text)",
          "with_check": null
        },
        {
          "schemaname": "public",
          "tablename": "study_logs",
          "policyname": "Users can view and create their own study logs",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "ALL",
          "qual": "(auth.uid() = user_id)",
          "with_check": null
        },
        {
          "schemaname": "public",
          "tablename": "user_card_progress",
          "policyname": "Users can manage their own progress",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "ALL",
          "qual": "(auth.uid() = user_id)",
          "with_check": "(auth.uid() = user_id)"
        },
        {
          "schemaname": "public",
          "tablename": "user_profiles",
          "policyname": "Anyone can insert profile on signup",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "INSERT",
          "qual": null,
          "with_check": "(auth.uid() = id)"
        },
        {
          "schemaname": "public",
          "tablename": "user_profiles",
          "policyname": "Enable read access for authenticated users",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "SELECT",
          "qual": "(auth.role() = 'authenticated'::text)",
          "with_check": null
        },
        {
          "schemaname": "public",
          "tablename": "user_profiles",
          "policyname": "Enable update for authenticated users",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "UPDATE",
          "qual": "((auth.role() = 'authenticated'::text) AND (auth.uid() = id))",
          "with_check": null
        },
        {
          "schemaname": "public",
          "tablename": "user_profiles",
          "policyname": "Users can update their own profile",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "UPDATE",
          "qual": "(auth.uid() = id)",
          "with_check": null
        },
        {
          "schemaname": "public",
          "tablename": "user_set_progress",
          "policyname": "Users can view and edit their own set progress",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "ALL",
          "qual": "(auth.uid() = user_id)",
          "with_check": null
        },
        {
          "schemaname": "public",
          "tablename": "waitlist",
          "policyname": "Allow anon users to read for confirmation",
          "permissive": "PERMISSIVE",
          "roles": "{anon}",
          "cmd": "SELECT",
          "qual": "(confirmation_token IS NOT NULL)",
          "with_check": null
        },
        {
          "schemaname": "public",
          "tablename": "waitlist",
          "policyname": "Allow confirmation updates for anon users",
          "permissive": "PERMISSIVE",
          "roles": "{anon}",
          "cmd": "UPDATE",
          "qual": "true",
          "with_check": "true"
        },
        {
          "schemaname": "public",
          "tablename": "waitlist",
          "policyname": "Anyone can insert waitlist entries",
          "permissive": "PERMISSIVE",
          "roles": "{anon}",
          "cmd": "INSERT",
          "qual": null,
          "with_check": "true"
        },
        {
          "schemaname": "public",
          "tablename": "waitlist",
          "policyname": "Only authenticated users can view waitlist",
          "permissive": "PERMISSIVE",
          "roles": "{authenticated}",
          "cmd": "SELECT",
          "qual": "true",
          "with_check": null
        },
        {
          "schemaname": "storage",
          "tablename": "objects",
          "policyname": "Public Access",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "SELECT",
          "qual": "(bucket_id = 'media'::text)",
          "with_check": null
        },
        {
          "schemaname": "storage",
          "tablename": "objects",
          "policyname": "Users can delete own media",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "DELETE",
          "qual": "((bucket_id = 'media'::text) AND ((auth.uid())::text = (storage.foldername(name))[1]))",
          "with_check": null
        },
        {
          "schemaname": "storage",
          "tablename": "objects",
          "policyname": "Users can update own media",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "UPDATE",
          "qual": "((bucket_id = 'media'::text) AND ((auth.uid())::text = (storage.foldername(name))[1]))",
          "with_check": null
        },
        {
          "schemaname": "storage",
          "tablename": "objects",
          "policyname": "Users can upload media",
          "permissive": "PERMISSIVE",
          "roles": "{public}",
          "cmd": "INSERT",
          "qual": null,
          "with_check": "((bucket_id = 'media'::text) AND (auth.role() = 'authenticated'::text))"
        }
      ]
    },
    "storage": {
      "old": [
        {
          "id": "media",
          "name": "media",
          "owner": null,
          "public": true,
          "avif_autodetection": false,
          "file_size_limit": null,
          "allowed_mime_types": null,
          "created_at": "2025-08-01 14:15:13.571133+00",
          "updated_at": "2025-08-01 14:15:13.571133+00"
        }
      ],
      "new": []
    },
    "edgeFunctions": {
      "old": [
        {
          "verify_jwt": true,
          "id": "af60cd6d-4388-4d66-8f0f-b7659e6fbe36",
          "slug": "send-confirmation-email",
          "version": 8,
          "name": "send-confirmation-email",
          "status": "ACTIVE",
          "entrypoint_path": "file:///tmp/user_fn_ycxqxdhaxehspypqbnpi_af60cd6d-4388-4d66-8f0f-b7659e6fbe36_8/source/index.ts",
          "import_map_path": null,
          "import_map": false,
          "created_at": 1753204635340,
          "updated_at": 1753225639766
        }
      ],
      "new": []
    },
    "analysis": {
      "dataIntegrity": {},
      "dependencies": {
        "old": [
          {
            "table_schema": "public",
            "constraint_name": "card_categories_card_id_fkey",
            "table_name": "card_categories",
            "column_name": "card_id",
            "foreign_table_schema": "public",
            "foreign_table_name": "cards",
            "foreign_column_name": "id"
          },
          {
            "table_schema": "public",
            "constraint_name": "card_categories_category_id_fkey",
            "table_name": "card_categories",
            "column_name": "category_id",
            "foreign_table_schema": "public",
            "foreign_table_name": "categories",
            "foreign_column_name": "id"
          },
          {
            "table_schema": "public",
            "constraint_name": "card_interactions_card_id_fkey",
            "table_name": "card_interactions",
            "column_name": "card_id",
            "foreign_table_schema": "public",
            "foreign_table_name": "cards",
            "foreign_column_name": "id"
          },
          {
            "table_schema": "public",
            "constraint_name": "card_interactions_session_id_fkey",
            "table_name": "card_interactions",
            "column_name": "session_id",
            "foreign_table_schema": "public",
            "foreign_table_name": "study_sessions",
            "foreign_column_name": "id"
          },
          {
            "table_schema": "public",
            "constraint_name": "cards_category_id_fkey",
            "table_name": "cards",
            "column_name": "category_id",
            "foreign_table_schema": "public",
            "foreign_table_name": "categories",
            "foreign_column_name": "id"
          },
          {
            "table_schema": "public",
            "constraint_name": "cards_set_id_fkey",
            "table_name": "cards",
            "column_name": "set_id",
            "foreign_table_schema": "public",
            "foreign_table_name": "flashcard_sets",
            "foreign_column_name": "id"
          },
          {
            "table_schema": "public",
            "constraint_name": "classroom_members_classroom_id_fkey",
            "table_name": "classroom_members",
            "column_name": "classroom_id",
            "foreign_table_schema": "public",
            "foreign_table_name": "classrooms",
            "foreign_column_name": "id"
          },
          {
            "table_schema": "public",
            "constraint_name": "classroom_sets_classroom_id_fkey",
            "table_name": "classroom_sets",
            "column_name": "classroom_id",
            "foreign_table_schema": "public",
            "foreign_table_name": "classrooms",
            "foreign_column_name": "id"
          },
          {
            "table_schema": "public",
            "constraint_name": "classroom_sets_set_id_fkey",
            "table_name": "classroom_sets",
            "column_name": "set_id",
            "foreign_table_schema": "public",
            "foreign_table_name": "flashcard_sets",
            "foreign_column_name": "id"
          },
          {
            "table_schema": "public",
            "constraint_name": "classrooms_school_id_fkey",
            "table_name": "classrooms",
            "column_name": "school_id",
            "foreign_table_schema": "public",
            "foreign_table_name": "schools",
            "foreign_column_name": "id"
          },
          {
            "table_schema": "public",
            "constraint_name": "flashcard_set_cards_card_id_fkey",
            "table_name": "flashcard_set_cards",
            "column_name": "card_id",
            "foreign_table_schema": "public",
            "foreign_table_name": "cards",
            "foreign_column_name": "id"
          },
          {
            "table_schema": "public",
            "constraint_name": "flashcard_set_cards_set_id_fkey",
            "table_name": "flashcard_set_cards",
            "column_name": "set_id",
            "foreign_table_schema": "public",
            "foreign_table_name": "flashcard_sets",
            "foreign_column_name": "id"
          },
          {
            "table_schema": "public",
            "constraint_name": "flashcard_set_categories_category_id_fkey",
            "table_name": "flashcard_set_categories",
            "column_name": "category_id",
            "foreign_table_schema": "public",
            "foreign_table_name": "categories",
            "foreign_column_name": "id"
          },
          {
            "table_schema": "public",
            "constraint_name": "flashcard_set_categories_set_id_fkey",
            "table_name": "flashcard_set_categories",
            "column_name": "set_id",
            "foreign_table_schema": "public",
            "foreign_table_name": "flashcard_sets",
            "foreign_column_name": "id"
          },
          {
            "table_schema": "public",
            "constraint_name": "study_logs_card_id_fkey",
            "table_name": "study_logs",
            "column_name": "card_id",
            "foreign_table_schema": "public",
            "foreign_table_name": "cards",
            "foreign_column_name": "id"
          },
          {
            "table_schema": "public",
            "constraint_name": "study_logs_set_id_fkey",
            "table_name": "study_logs",
            "column_name": "set_id",
            "foreign_table_schema": "public",
            "foreign_table_name": "flashcard_sets",
            "foreign_column_name": "id"
          },
          {
            "table_schema": "public",
            "constraint_name": "study_sessions_set_id_fkey",
            "table_name": "study_sessions",
            "column_name": "set_id",
            "foreign_table_schema": "public",
            "foreign_table_name": "flashcard_sets",
            "foreign_column_name": "id"
          },
          {
            "table_schema": "public",
            "constraint_name": "user_card_progress_card_id_fkey",
            "table_name": "user_card_progress",
            "column_name": "card_id",
            "foreign_table_schema": "public",
            "foreign_table_name": "cards",
            "foreign_column_name": "id"
          },
          {
            "table_schema": "public",
            "constraint_name": "user_card_progress_last_session_id_fkey",
            "table_name": "user_card_progress",
            "column_name": "last_session_id",
            "foreign_table_schema": "public",
            "foreign_table_name": "study_sessions",
            "foreign_column_name": "id"
          },
          {
            "table_schema": "public",
            "constraint_name": "user_card_progress_set_id_fkey",
            "table_name": "user_card_progress",
            "column_name": "set_id",
            "foreign_table_schema": "public",
            "foreign_table_name": "flashcard_sets",
            "foreign_column_name": "id"
          },
          {
            "table_schema": "public",
            "constraint_name": "user_profiles_school_id_fkey",
            "table_name": "user_profiles",
            "column_name": "school_id",
            "foreign_table_schema": "public",
            "foreign_table_name": "schools",
            "foreign_column_name": "id"
          },
          {
            "table_schema": "public",
            "constraint_name": "user_set_progress_set_id_fkey",
            "table_name": "user_set_progress",
            "column_name": "set_id",
            "foreign_table_schema": "public",
            "foreign_table_name": "flashcard_sets",
            "foreign_column_name": "id"
          }
        ],
        "new": [
          {
            "table_schema": "public",
            "constraint_name": "card_categories_card_id_fkey",
            "table_name": "card_categories",
            "column_name": "card_id",
            "foreign_table_schema": "public",
            "foreign_table_name": "cards",
            "foreign_column_name": "id"
          },
          {
            "table_schema": "public",
            "constraint_name": "card_categories_category_id_fkey",
            "table_name": "card_categories",
            "column_name": "category_id",
            "foreign_table_schema": "public",
            "foreign_table_name": "categories",
            "foreign_column_name": "id"
          },
          {
            "table_schema": "public",
            "constraint_name": "card_interactions_card_id_fkey",
            "table_name": "card_interactions",
            "column_name": "card_id",
            "foreign_table_schema": "public",
            "foreign_table_name": "cards",
            "foreign_column_name": "id"
          },
          {
            "table_schema": "public",
            "constraint_name": "card_interactions_session_id_fkey",
            "table_name": "card_interactions",
            "column_name": "session_id",
            "foreign_table_schema": "public",
            "foreign_table_name": "study_sessions",
            "foreign_column_name": "id"
          },
          {
            "table_schema": "public",
            "constraint_name": "classroom_details_classroom_id_fkey",
            "table_name": "classroom_details",
            "column_name": "classroom_id",
            "foreign_table_schema": "public",
            "foreign_table_name": "classrooms",
            "foreign_column_name": "id"
          },
          {
            "table_schema": "public",
            "constraint_name": "classroom_members_classroom_id_fkey",
            "table_name": "classroom_members",
            "column_name": "classroom_id",
            "foreign_table_schema": "public",
            "foreign_table_name": "classrooms",
            "foreign_column_name": "id"
          },
          {
            "table_schema": "public",
            "constraint_name": "classroom_sets_classroom_id_fkey",
            "table_name": "classroom_sets",
            "column_name": "classroom_id",
            "foreign_table_schema": "public",
            "foreign_table_name": "classrooms",
            "foreign_column_name": "id"
          },
          {
            "table_schema": "public",
            "constraint_name": "classroom_sets_set_id_fkey",
            "table_name": "classroom_sets",
            "column_name": "set_id",
            "foreign_table_schema": "public",
            "foreign_table_name": "flashcard_sets",
            "foreign_column_name": "id"
          },
          {
            "table_schema": "public",
            "constraint_name": "classrooms_school_id_fkey",
            "table_name": "classrooms",
            "column_name": "school_id",
            "foreign_table_schema": "public",
            "foreign_table_name": "schools",
            "foreign_column_name": "id"
          },
          {
            "table_schema": "public",
            "constraint_name": "flashcard_set_cards_card_id_fkey",
            "table_name": "flashcard_set_cards",
            "column_name": "card_id",
            "foreign_table_schema": "public",
            "foreign_table_name": "cards",
            "foreign_column_name": "id"
          },
          {
            "table_schema": "public",
            "constraint_name": "flashcard_set_cards_set_id_fkey",
            "table_name": "flashcard_set_cards",
            "column_name": "set_id",
            "foreign_table_schema": "public",
            "foreign_table_name": "flashcard_sets",
            "foreign_column_name": "id"
          },
          {
            "table_schema": "public",
            "constraint_name": "flashcard_set_categories_category_id_fkey",
            "table_name": "flashcard_set_categories",
            "column_name": "category_id",
            "foreign_table_schema": "public",
            "foreign_table_name": "categories",
            "foreign_column_name": "id"
          },
          {
            "table_schema": "public",
            "constraint_name": "flashcard_set_categories_set_id_fkey",
            "table_name": "flashcard_set_categories",
            "column_name": "set_id",
            "foreign_table_schema": "public",
            "foreign_table_name": "flashcard_sets",
            "foreign_column_name": "id"
          },
          {
            "table_schema": "public",
            "constraint_name": "study_logs_card_id_fkey",
            "table_name": "study_logs",
            "column_name": "card_id",
            "foreign_table_schema": "public",
            "foreign_table_name": "cards",
            "foreign_column_name": "id"
          },
          {
            "table_schema": "public",
            "constraint_name": "study_logs_session_id_fkey",
            "table_name": "study_logs",
            "column_name": "session_id",
            "foreign_table_schema": "public",
            "foreign_table_name": "study_sessions",
            "foreign_column_name": "id"
          },
          {
            "table_schema": "public",
            "constraint_name": "study_logs_set_id_fkey",
            "table_name": "study_logs",
            "column_name": "set_id",
            "foreign_table_schema": "public",
            "foreign_table_name": "flashcard_sets",
            "foreign_column_name": "id"
          },
          {
            "table_schema": "public",
            "constraint_name": "study_sessions_classroom_id_fkey",
            "table_name": "study_sessions",
            "column_name": "classroom_id",
            "foreign_table_schema": "public",
            "foreign_table_name": "classrooms",
            "foreign_column_name": "id"
          },
          {
            "table_schema": "public",
            "constraint_name": "study_sessions_set_id_fkey",
            "table_name": "study_sessions",
            "column_name": "set_id",
            "foreign_table_schema": "public",
            "foreign_table_name": "flashcard_sets",
            "foreign_column_name": "id"
          },
          {
            "table_schema": "public",
            "constraint_name": "user_card_progress_card_id_fkey",
            "table_name": "user_card_progress",
            "column_name": "card_id",
            "foreign_table_schema": "public",
            "foreign_table_name": "cards",
            "foreign_column_name": "id"
          },
          {
            "table_schema": "public",
            "constraint_name": "user_card_progress_set_id_fkey",
            "table_name": "user_card_progress",
            "column_name": "set_id",
            "foreign_table_schema": "public",
            "foreign_table_name": "flashcard_sets",
            "foreign_column_name": "id"
          },
          {
            "table_schema": "public",
            "constraint_name": "user_profiles_school_id_fkey",
            "table_name": "user_profiles",
            "column_name": "school_id",
            "foreign_table_schema": "public",
            "foreign_table_name": "schools",
            "foreign_column_name": "id"
          },
          {
            "table_schema": "public",
            "constraint_name": "user_set_progress_set_id_fkey",
            "table_name": "user_set_progress",
            "column_name": "set_id",
            "foreign_table_schema": "public",
            "foreign_table_name": "flashcard_sets",
            "foreign_column_name": "id"
          }
        ]
      },
      "priorities": {}
    }
  },
  "priorities": {
    "critical": [
      {
        "type": "missing_rls_policy",
        "name": "auth_identities_access_policy",
        "reason": "RLS policy missing on identities",
        "action": "Create security policy"
      },
      {
        "type": "missing_rls_policy",
        "name": "auth_refresh_tokens_access_policy",
        "reason": "RLS policy missing on refresh_tokens",
        "action": "Create security policy"
      },
      {
        "type": "missing_rls_policy",
        "name": "auth_sessions_access_policy",
        "reason": "RLS policy missing on sessions",
        "action": "Create security policy"
      },
      {
        "type": "missing_rls_policy",
        "name": "auth_users_access_policy",
        "reason": "RLS policy missing on users",
        "action": "Create security policy"
      },
      {
        "type": "missing_rls_policy",
        "name": "card_categories_delete_policy",
        "reason": "RLS policy missing on card_categories",
        "action": "Create security policy"
      },
      {
        "type": "missing_rls_policy",
        "name": "card_categories_insert_policy",
        "reason": "RLS policy missing on card_categories",
        "action": "Create security policy"
      },
      {
        "type": "missing_rls_policy",
        "name": "card_categories_select_policy",
        "reason": "RLS policy missing on card_categories",
        "action": "Create security policy"
      },
      {
        "type": "missing_rls_policy",
        "name": "card_categories_update_policy",
        "reason": "RLS policy missing on card_categories",
        "action": "Create security policy"
      },
      {
        "type": "missing_rls_policy",
        "name": "Anyone can create cards",
        "reason": "RLS policy missing on cards",
        "action": "Create security policy"
      },
      {
        "type": "missing_rls_policy",
        "name": "Anyone can delete cards",
        "reason": "RLS policy missing on cards",
        "action": "Create security policy"
      },
      {
        "type": "missing_rls_policy",
        "name": "Anyone can read cards",
        "reason": "RLS policy missing on cards",
        "action": "Create security policy"
      },
      {
        "type": "missing_rls_policy",
        "name": "Anyone can update cards",
        "reason": "RLS policy missing on cards",
        "action": "Create security policy"
      },
      {
        "type": "missing_rls_policy",
        "name": "Authenticated users can insert categories",
        "reason": "RLS policy missing on categories",
        "action": "Create security policy"
      },
      {
        "type": "missing_rls_policy",
        "name": "Everyone can view categories",
        "reason": "RLS policy missing on categories",
        "action": "Create security policy"
      },
      {
        "type": "missing_rls_policy",
        "name": "Students can join classrooms",
        "reason": "RLS policy missing on classroom_members",
        "action": "Create security policy"
      },
      {
        "type": "missing_rls_policy",
        "name": "Students can leave classrooms",
        "reason": "RLS policy missing on classroom_members",
        "action": "Create security policy"
      },
      {
        "type": "missing_rls_policy",
        "name": "Teachers can view their classroom members",
        "reason": "RLS policy missing on classroom_members",
        "action": "Create security policy"
      },
      {
        "type": "missing_rls_policy",
        "name": "Classroom members can view classroom sets",
        "reason": "RLS policy missing on classroom_sets",
        "action": "Create security policy"
      },
      {
        "type": "missing_rls_policy",
        "name": "Teachers can manage their classroom sets",
        "reason": "RLS policy missing on classroom_sets",
        "action": "Create security policy"
      },
      {
        "type": "missing_rls_policy",
        "name": "Enable read access for all users",
        "reason": "RLS policy missing on classrooms",
        "action": "Create security policy"
      },
      {
        "type": "missing_rls_policy",
        "name": "Users can manage cards in their own sets",
        "reason": "RLS policy missing on flashcard_set_cards",
        "action": "Create security policy"
      },
      {
        "type": "missing_rls_policy",
        "name": "Users can manage categories for their own sets",
        "reason": "RLS policy missing on flashcard_set_categories",
        "action": "Create security policy"
      },
      {
        "type": "missing_rls_policy",
        "name": "Users can create their own flashcard sets",
        "reason": "RLS policy missing on flashcard_sets",
        "action": "Create security policy"
      },
      {
        "type": "missing_rls_policy",
        "name": "Users can delete their own flashcard sets",
        "reason": "RLS policy missing on flashcard_sets",
        "action": "Create security policy"
      },
      {
        "type": "missing_rls_policy",
        "name": "Users can read their own flashcard sets",
        "reason": "RLS policy missing on flashcard_sets",
        "action": "Create security policy"
      },
      {
        "type": "missing_rls_policy",
        "name": "Users can update their own flashcard sets",
        "reason": "RLS policy missing on flashcard_sets",
        "action": "Create security policy"
      },
      {
        "type": "missing_rls_policy",
        "name": "Enable insert for authenticated users",
        "reason": "RLS policy missing on schools",
        "action": "Create security policy"
      },
      {
        "type": "missing_rls_policy",
        "name": "Enable read access for authenticated users",
        "reason": "RLS policy missing on schools",
        "action": "Create security policy"
      },
      {
        "type": "missing_rls_policy",
        "name": "Enable update for authenticated users",
        "reason": "RLS policy missing on schools",
        "action": "Create security policy"
      },
      {
        "type": "missing_rls_policy",
        "name": "Users can view and create their own study logs",
        "reason": "RLS policy missing on study_logs",
        "action": "Create security policy"
      },
      {
        "type": "missing_rls_policy",
        "name": "Users can manage their own progress",
        "reason": "RLS policy missing on user_card_progress",
        "action": "Create security policy"
      },
      {
        "type": "missing_rls_policy",
        "name": "Anyone can insert profile on signup",
        "reason": "RLS policy missing on user_profiles",
        "action": "Create security policy"
      },
      {
        "type": "missing_rls_policy",
        "name": "Enable read access for authenticated users",
        "reason": "RLS policy missing on user_profiles",
        "action": "Create security policy"
      },
      {
        "type": "missing_rls_policy",
        "name": "Enable update for authenticated users",
        "reason": "RLS policy missing on user_profiles",
        "action": "Create security policy"
      },
      {
        "type": "missing_rls_policy",
        "name": "Users can update their own profile",
        "reason": "RLS policy missing on user_profiles",
        "action": "Create security policy"
      },
      {
        "type": "missing_rls_policy",
        "name": "Users can view and edit their own set progress",
        "reason": "RLS policy missing on user_set_progress",
        "action": "Create security policy"
      },
      {
        "type": "missing_rls_policy",
        "name": "Allow anon users to read for confirmation",
        "reason": "RLS policy missing on waitlist",
        "action": "Create security policy"
      },
      {
        "type": "missing_rls_policy",
        "name": "Allow confirmation updates for anon users",
        "reason": "RLS policy missing on waitlist",
        "action": "Create security policy"
      },
      {
        "type": "missing_rls_policy",
        "name": "Anyone can insert waitlist entries",
        "reason": "RLS policy missing on waitlist",
        "action": "Create security policy"
      },
      {
        "type": "missing_rls_policy",
        "name": "Only authenticated users can view waitlist",
        "reason": "RLS policy missing on waitlist",
        "action": "Create security policy"
      },
      {
        "type": "missing_rls_policy",
        "name": "Public Access",
        "reason": "RLS policy missing on objects",
        "action": "Create security policy"
      },
      {
        "type": "missing_rls_policy",
        "name": "Users can delete own media",
        "reason": "RLS policy missing on objects",
        "action": "Create security policy"
      },
      {
        "type": "missing_rls_policy",
        "name": "Users can update own media",
        "reason": "RLS policy missing on objects",
        "action": "Create security policy"
      },
      {
        "type": "missing_rls_policy",
        "name": "Users can upload media",
        "reason": "RLS policy missing on objects",
        "action": "Create security policy"
      }
    ],
    "high": [
      {
        "type": "missing_data",
        "name": "auth.instances",
        "reason": "Table exists but missing 1 rows of data",
        "action": "Migrate data"
      },
      {
        "type": "missing_data",
        "name": "storage.buckets",
        "reason": "Table exists but missing 1 rows of data",
        "action": "Migrate data"
      },
      {
        "type": "missing_data",
        "name": "storage.objects",
        "reason": "Table exists but missing 44 rows of data",
        "action": "Migrate data"
      },
      {
        "type": "missing_function",
        "name": "public.create_classroom",
        "reason": "Custom function missing in NEW project",
        "action": "Create function"
      },
      {
        "type": "missing_function",
        "name": "public.generate_invite_code",
        "reason": "Custom function missing in NEW project",
        "action": "Create function"
      },
      {
        "type": "missing_function",
        "name": "public.handle_new_user",
        "reason": "Custom function missing in NEW project",
        "action": "Create function"
      },
      {
        "type": "missing_function",
        "name": "public.join_classroom_with_code",
        "reason": "Custom function missing in NEW project",
        "action": "Create function"
      },
      {
        "type": "missing_trigger",
        "name": "on_auth_user_created",
        "reason": "Trigger missing on users",
        "action": "Create trigger"
      },
      {
        "type": "missing_trigger",
        "name": "update_user_profiles_updated_at",
        "reason": "Trigger missing on user_profiles",
        "action": "Create trigger"
      }
    ],
    "medium": [],
    "low": []
  }
}